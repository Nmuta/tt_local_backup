parameters:
  - name: 'workingDirectory'
    displayName: 'Path to a working directory where yarn can be run. Like packages/StewardClient'
    type: string

jobs:
- job: UI_Test_Lint
  displayName: Lint
  pool:
    vmImage: ubuntu-20.04
  steps:
  - template: load-yarn-project.template.yml
    parameters:
      workingDirectory: ${{parameters.workingDirectory}}
      dropName: ui
  - task: Bash@3
    displayName: Lint Check
    enabled: False
    inputs:
      workingDirectory: ${{parameters.workingDirectory}}
      targetType: 'inline'
      script: yarn run lint
- job: UI_Test_Prettier
  displayName: Prettier
  pool:
    vmImage: ubuntu-20.04
  steps:
  - template: load-yarn-project.template.yml
    parameters:
      workingDirectory: ${{parameters.workingDirectory}}
      dropName: ui
  - task: Bash@3
    displayName: Prettier Check
    enabled: False
    inputs:
      workingDirectory: ${{parameters.workingDirectory}}
      targetType: 'inline'
      script: yarn run prettier:check
  # - task: CmdLine@2
  #   displayName: Tests & Code Coverage
  #   inputs:
  #     script: >-
  #       # Tests may not fail when code coverage is enabled

  #       yarn run test:ado --code-coverage
  #     workingDirectory: packages/StewardClient/
  # - task: PublishTestResults@2
  #   displayName: Publish Test Results
  #   condition: succeededOrFailed()
  #   continueOnError: True
  #   inputs:
  #     testResultsFiles: '**/TESTS-Chrome_Headless_*.xml'
  #     mergeTestResults: true
  #     failTaskOnFailedTests: true
  # - task: PublishCodeCoverageResults@1
  #   displayName: Publish Code Coverage
  #   condition: succeededOrFailed()
  #   continueOnError: True
  #   inputs:
  #     codeCoverageTool: Cobertura
  #     summaryFileLocation: $(System.DefaultWorkingDirectory)/**/*coverage.xml
  #     reportDirectory: $(System.DefaultWorkingDirectory)/**/coverage
  #     failIfCoverageEmpty: true
  # - task: ArchiveFiles@2
  #   displayName: Archive Files
  #   enabled: False
  #   inputs:
  #     rootFolderOrFile: packages/StewardClient/
  #     archiveFile: $(Build.ArtifactStagingDirectory)/lint-test-ui.zip
  # - task: PublishBuildArtifacts@1
  #   displayName: 'Publish Artifact: lint-test-ui'
  #   enabled: False
  #   inputs:
  #     ArtifactName: $(Build.ArtifactStagingDirectory)/lint-test-ui.zip