// theme initialization and helper aliases
@use '~@angular/material' as mat;

/// use for primary nagivation and "primary action" buttons that (1) are the default, and (2) perform irrevocable actions
$app-primary: mat.define-palette(mat.$indigo-palette);

/// use for "secondary action" buttons that (1) are not the default, and (2) perform irrevocable actions
$app-accent: mat.define-palette(mat.$light-blue-palette, A200, A100, A400);

/// use as a success color
$app-success: mat.define-palette(mat.$green-palette);

/// use for "error state" warnings
$app-warn: mat.define-palette(mat.$red-palette);

/// use as a default, especially for local action buttons that do not perform irrevocable actions
$app-background: mat.define-palette(mat.$grey-palette);

/// the theme
$app-theme: mat.define-light-theme(
  (
    color: (
      primary: $app-primary,
      accent: $app-accent,
      warn: $app-warn,
    ),
  )
);

/// Gets a color from a theme palette (the output of mat-palette).
///
/// @param $color-map The theme palette (output of mat-palette).
/// @param $opacity The alpha channel value for the color.
@function app-color-default($palette, $opacity: null) {
  @return mat.get-color-from-palette($palette, default, $opacity);
}

/// Gets a color from a theme palette (the output of mat-palette).
///
/// @param $color-map The theme palette (output of mat-palette).
/// @param $opacity The alpha channel value for the color.
@function app-color-lighter($palette, $opacity: null) {
  @return mat.get-color-from-palette($palette, lighter, $opacity);
}

/// Gets a color from a theme palette (the output of mat-palette).
///
/// @param $color-map The theme palette (output of mat-palette).
/// @param $opacity The alpha channel value for the color.
@function app-color-darker($palette, $opacity: null) {
  @return mat.get-color-from-palette($palette, darker, $opacity);
}

/// Gets a color from a theme palette (the output of mat-palette).
///
/// @param $color-map The theme palette (output of mat-palette).
/// @param $opacity The alpha channel value for the color.
@function app-color-text($palette, $opacity: null) {
  @return mat.get-color-from-palette($palette, text, $opacity);
}

/// Gets a color from a theme palette (the output of mat-palette).
///
/// @param $color-map The theme palette (output of mat-palette).
/// @param $opacity The alpha channel value for the color.
@function app-color-default-contrast($theme, $opacity: null) {
  @return mat.get-color-from-palette($theme, default-contrast, $opacity);
}

/// Gets a color from a theme palette (the output of mat-palette).
///
/// @param $color-map The theme palette (output of mat-palette).
/// @param $opacity The alpha channel value for the color.
@function app-color-lighter-contrast($theme, $opacity: null) {
  @return mat.get-color-from-palette($theme, lighter-contrast, $opacity);
}

/// Gets a color from a theme palette (the output of mat-palette).
///
/// @param $color-map The theme palette (output of mat-palette).
/// @param $opacity The alpha channel value for the color.
@function app-color-darker-contrast($theme, $opacity: null) {
  @return mat.get-color-from-palette($theme, darker-contrast, $opacity);
}

/// Gets a color from a theme palette (the output of mat-palette).
///
/// @param $color-map The theme palette (output of mat-palette).
/// @param $opacity The alpha channel value for the color.
@function app-color-text-contrast($palette, $opacity: null) {
  @return mat.get-color-from-palette($palette, text-contrast, $opacity);
}
