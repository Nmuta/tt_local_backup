<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Turn10.LiveOps.StewardApi</name>
    </assembly>
    <members>
        <member name="T:Turn10.LiveOps.StewardApi.ApplicationSettings">
            <summary>
                Central reference for application settings.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.ApplicationSettings.AppRole">
            <summary>
                App roles.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.ApplicationSettings.AuthorizationPolicy">
            <summary>
                Authorization policies.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants">
            <summary>
                Represents configuration keys.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.KeyVaultUrl">
            <summary>
                The key vault url.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.StsUrl">
            <summary>
                The STS url.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.StsSecretName">
            <summary>
                The STS secret name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.KustoLoggerDatabase">
            <summary>
                The Kusto logger database.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.KustoClientSecretName">
            <summary>
                The Kusto client secret name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.BlobConnectionSecretName">
            <summary>
                The blob connection string secret name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.GroupGiftPasswordSecretName">
            <summary>
                The group gift password secret name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.GenevaTenantId">
            <summary>
                The Geneva tenant ID.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.GenevaRoleId">
            <summary>
                The Geneva tenant ID.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.GenevaMdmAccount">
            <summary>
                The Geneva MDM account.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.GenevaMdmNamespace">
            <summary>
                The Geneva MDM namespace.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.ApolloUri">
            <summary>
                The Apollo uri.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.ApolloClientVersion">
            <summary>
                The Apollo client version.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.ApolloAdminXuid">
            <summary>
                The Apollo admin xuid.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.ApolloCertificateKeyVaultName">
            <summary>
                The Apollo certificate key vault name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.ApolloCertificateSecretName">
            <summary>
                The Apollo certificate secret name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.OpusUri">
            <summary>
                The Opus uri.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.OpusClientVersion">
            <summary>
                The Opus client version.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.OpusAdminXuid">
            <summary>
                The Opus admin xuid.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.OpusCertificateKeyVaultName">
            <summary>
                The Opus certificate key vault name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.OpusCertificateSecretName">
            <summary>
                The Opus certificate secret name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.GravityUri">
            <summary>
                The Gravity uri.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.GravityClientVersion">
            <summary>
                The Gravity client version.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.GravityAdminXuid">
            <summary>
                The Gravity admin xuid.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.GravitySandbox">
            <summary>
                The Gravity sandbox.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.GravityTitleId">
            <summary>
                The Gravity title ID.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.SunriseUri">
            <summary>
                The Sunrise uri.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.SunriseClientVersion">
            <summary>
                The Sunrise client version.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.SunriseAdminXuid">
            <summary>
                The Sunrise admin xuid.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.SunriseSandbox">
            <summary>
                The Sunrise sandbox.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.ConfigurationKeyConstants.SunriseTitleId">
            <summary>
                The Sunrise title ID.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanBase">
            <summary>
                Base type for Apollo ban information.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanBase.Reason">
            <summary>
                Gets or sets the reason.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanBase.FeatureArea">
            <summary>
                Gets or sets the feature area.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanBase.StartTimeUtc">
            <summary>
                Gets or sets the start time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanBase.ExpireTimeUtc">
            <summary>
                Gets or sets the expire time.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanDescription">
            <summary>
                Represents an Apollo ban description.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanDescription.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanDescription.IsActive">
            <summary>
                Gets or sets a value indicating whether the ban is active.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanDescription.CountOfTimesExtended">
            <summary>
                Gets or sets the count of times extended.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanDescription.LastExtendedTimeUtc">
            <summary>
                Gets or sets the last extended time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanDescription.LastExtendedReason">
            <summary>
                Gets or sets the last extended reason.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanHistory">
            <summary>
                Represents an Apollo ban history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanHistory.#ctor(System.Collections.Generic.IList{Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanDescription},System.Collections.Generic.IList{Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory})">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanHistory"/> class.
            </summary>
            <param name="servicesBanHistory">The services ban history.</param>
            <param name="liveOpsBanHistory">The live ops ban history.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanHistory.ServicesBanHistory">
            <summary>
                Gets or sets the services ban history.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanHistory.LiveOpsBanHistory">
            <summary>
                Gets or sets the live ops ban history.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters">
            <summary>
                Represents a Apollo ban parameters.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters.Gamertag">
            <summary>
                Gets or sets the gamertag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters.BanAllConsoles">
            <summary>
                Gets or sets a value indicating whether to ban all consoles.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters.BanAllPcs">
            <summary>
                Gets or sets a value indicating whether to ban all PCs.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters.DeleteLeaderboardEntries">
            <summary>
                Gets or sets a value indicating whether to delete leader board entries.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters.SendReasonNotification">
            <summary>
                Gets or sets a value indicating whether to send reason notification.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanResult">
            <summary>
                Represents an Apollo ban result.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanResult.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanResult.Success">
            <summary>
                Gets or sets a value indicating whether the ban was successful.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanResult.BanDescription">
            <summary>
                Gets or sets the ban description.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanSummary">
            <summary>
                Represents an Apollo ban summary.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanSummary.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanSummary.Gamertag">
            <summary>
                Gets or sets the gamertag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanSummary.BanCount">
            <summary>
                Gets or sets the number of bans.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanSummary.BannedAreas">
            <summary>
                Gets or sets the banned areas.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanSummary.LastBanDescription">
            <summary>
                Gets or sets the last ban's description.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanSummary.UserExists">
            <summary>
                Gets or sets a value indicating whether the user exists.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloCar">
            <summary>
                Represents an Apollo car.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloCar.Vin">
            <summary>
                Gets or sets the VIN.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloCar.CollectorScore">
            <summary>
                Gets or sets the collector score.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloCar.ProductionNumber">
            <summary>
                Gets or sets the production number.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloCar.PurchaseUtc">
            <summary>
                Gets or sets the purchase time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloCar.VersionedLiveryId">
            <summary>
                Gets or sets the versioned livery ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloCar.VersionedTuneId">
            <summary>
                Gets or sets the versioned tune ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloCar.IsOnlineOnly">
            <summary>
                Gets or sets a value indicating whether is online only.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloCar.BaseCost">
            <summary>
                Gets or sets the base cost.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloConsoleDetails">
            <summary>
                Represents an Apollo console details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloConsoleDetails.ConsoleId">
            <summary>
                Gets or sets the console ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloConsoleDetails.IsBanned">
            <summary>
                Gets or sets a value indicating whether the user is banned.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloConsoleDetails.IsBannable">
            <summary>
                Gets or sets a value indicating whether the user is bannable.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloConsoleDetails.DeviceType">
            <summary>
                Gets or sets the device type.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloConsoleDetails.ClientVersion">
            <summary>
                Gets or sets the client version.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGiftHistory">
            <summary>
                Represents an Apollo gift history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGiftHistory.#ctor(System.String,System.String,System.String,System.DateTime,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGiftHistory"/> class.
            </summary>
            <param name="playerId">The player ID.</param>
            <param name="title">The title.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="giftSendDateUtc">The gift send date.</param>
            <param name="giftInventory">The gift inventory.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGiftHistory.PlayerId">
            <summary>
                Gets or sets the player ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGiftHistory.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGiftHistory.RequestingAgent">
            <summary>
                Gets or sets the requesting agent.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGiftHistory.GiftSendDateUtc">
            <summary>
                Gets or sets the gift send date in universal time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGiftHistory.GiftInventory">
            <summary>
                Gets or sets gift inventory.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGroupGift">
            <summary>
                Represents an Apollo group gift.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGroupGift.Gamertags">
            <summary>
                Gets or sets the gamertag list.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGroupGift.Xuids">
            <summary>
                Gets or sets the xuid list.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGroupGift.GiftInventory">
            <summary>
                Gets or sets the gift inventory.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryItem">
            <summary>
                Represents an Apollo inventory item.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryItem.ItemId">
            <summary>
                Gets or sets the item ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryItem.Quantity">
            <summary>
                Gets or sets the quantity.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryItem.AcquisitionUtc">
            <summary>
                Gets or sets the acquisition time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryItem.LastUsedUtc">
            <summary>
                Gets or sets the last used time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryItem.Description">
            <summary>
                Gets or sets the description.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryItem.Special">
            <summary>
                Gets or sets the special.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryProfile">
            <summary>
                Represents an Apollo inventory profile.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryProfile.ProfileId">
            <summary>
                Gets or sets the profile ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryProfile.ExternalProfileId">
            <summary>
                Gets or sets the external profile ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryProfile.IsCurrent">
            <summary>
                Gets or sets a value indicating whether profile is current.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloLspGroup">
            <summary>
                Represents a Apollo LSP group.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloLspGroup.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloLspGroup.Name">
            <summary>
                Gets or sets the name.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails">
            <summary>
                Represents an Apollo player details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.Xuid">
            <summary>
                Gets or sets the Xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.Gamertag">
            <summary>
                Gets or sets the gamertag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.CurrentProfileId">
            <summary>
                Gets or sets the current profile ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.SubscriptionTier">
            <summary>
                Gets or sets the subscription tier.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.AgeGroup">
            <summary>
                Gets or sets the age group.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.Region">
            <summary>
                Gets or sets the region.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.Country">
            <summary>
                Gets or sets the country.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.LCID">
            <summary>
                Gets or sets the LCID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IPAddress">
            <summary>
                Gets or sets the IP address.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.LastLoginUtc">
            <summary>
                Gets or sets the last login.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.FirstLoginUtc">
            <summary>
                Gets or sets the first login.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.EquippedVanityItemId">
            <summary>
                Gets or sets the equipped vanity item ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.CurrentDriverModelId">
            <summary>
                Gets or sets the current driver model ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.CurrentPlayerTitleId">
            <summary>
                Gets or sets the current player title ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.CurrentBadgeId">
            <summary>
                Gets or sets the current badge ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.CurrentCarCollectionTier">
            <summary>
                Gets or sets the current car collection tier.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.CurrentCarCollectionScore">
            <summary>
                Gets or sets the current car collection score.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.CurrentCareerLevel">
            <summary>
                Gets or sets the current career level.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.ClubId">
            <summary>
                Gets or sets the club ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.ClubTag">
            <summary>
                Gets or sets the club tag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.RoleInClub">
            <summary>
                Gets or sets the role in club.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IsFeaturedCommentator">
            <summary>
                Gets or sets a value indicating whether player is featured commentator.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IsFeaturedDrivatar">
            <summary>
                Gets or sets a value indicating whether player is featured drivatar.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IsFeaturedPhotographer">
            <summary>
                Gets or sets a value indicating whether player is featured photographer.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IsFeaturedTuner">
            <summary>
                Gets or sets a value indicating whether player is featured tuner.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IsFeaturedPainter">
            <summary>
                Gets or sets a value indicating whether player is featured painter.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IsUnderReview">
            <summary>
                Gets or sets a value indicating whether player is under review.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IsCommunityManager">
            <summary>
                Gets or sets a value indicating whether player is community manager.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IsOnWhiteList">
            <summary>
                Gets or sets a value indicating whether player is on white list.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IsVip">
            <summary>
                Gets or sets a value indicating whether player is VIP.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails.IsTurn10Employee">
            <summary>
                Gets or sets a value indicating whether player is Turn 10 employee.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory">
            <summary>
                Represents an Apollo player inventory.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory.GiftReason">
            <summary>
                Gets or sets the gift reason.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory.Credits">
            <summary>
                Gets or sets the credits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory.Cars">
            <summary>
                Gets or sets the cars.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory.Mods">
            <summary>
                Gets or sets the mods.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory.VanityItems">
            <summary>
                Gets or sets the vanity items.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory.Packs">
            <summary>
                Gets or sets the packs.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory.Badges">
            <summary>
                Gets or sets the badges.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloSharedConsoleUser">
            <summary>
                Represents a Apollo shared console user.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloSharedConsoleUser.SharedConsoleId">
            <summary>
                Gets or sets the shared console ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloSharedConsoleUser.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloSharedConsoleUser.Gamertag">
            <summary>
                Gets or sets the gamertag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloSharedConsoleUser.EverBanned">
            <summary>
                Gets or sets a value indicating whether ever banned.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags">
            <summary>
                Represents an Apollo user flags.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags.IsVip">
            <summary>
                Gets or sets a value indicating whether the user is VIP.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags.IsTurn10Employee">
            <summary>
                Gets or sets a value indicating whether the user is a Turn 10 employee.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags.IsCommunityManager">
            <summary>
                Gets or sets a value indicating whether the user is a community manager.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags.IsEarlyAccess">
            <summary>
                Gets or sets a value indicating whether the user is early access.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags.IsUnderReview">
            <summary>
                Gets or sets a value indicating whether the user is under review.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.BackgroundJob">
            <summary>
                Represents a background job.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.BackgroundJob.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.BackgroundJob"/> class.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.BackgroundJob.#ctor(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.BackgroundJobStatus)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.BackgroundJob"/> class.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="username">The username.</param>
            <param name="backgroundJobStatus">The background job status.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.BackgroundJob.#ctor(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.BackgroundJobStatus,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.BackgroundJob"/> class.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="username">The username.</param>
            <param name="backgroundJobStatus">The background job status.</param>
            <param name="result">The result.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.BackgroundJob.Status">
            <summary>
                Gets or sets the status.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.BackgroundJob.Result">
            <summary>
                Gets or sets the status.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.BackgroundJobStatus">
            <summary>
                Represents the available background job statuses.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.BackgroundJobStatus.Completed">
            <summary>
                The job is completed.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.BackgroundJobStatus.InProgress">
            <summary>
                The job is in progress.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.BackgroundJobStatus.Failed">
            <summary>
                The job has failed.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.CarHorn">
            <summary>
                Represents a car horn.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CarHorn.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CarHorn.Category">
            <summary>
                Gets or sets the category.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CarHorn.DisplayName">
            <summary>
                Gets or sets the display name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CarHorn.Rarity">
            <summary>
                Gets or sets the rarity.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.CharacterCustomization">
            <summary>
                Represents a character customization.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CharacterCustomization.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CharacterCustomization.ItemId">
            <summary>
                Gets or sets the item ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CharacterCustomization.Rarity">
            <summary>
                Gets or sets the rarity.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CharacterCustomization.SlotId">
            <summary>
                Gets or sets the item ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CharacterCustomization.DisplayName">
            <summary>
                Gets or sets the display name.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.CreditReward">
            <summary>
                Represents a credit reward.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CreditReward.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CreditReward.Amount">
            <summary>
                Gets or sets the amount.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.CreditReward.Rarity">
            <summary>
                Gets or sets the rarity.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.Emote">
            <summary>
                Represents an emote.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.Emote.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.Emote.Name">
            <summary>
                Gets or sets the name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.Emote.Animation">
            <summary>
                Gets or sets the animation.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.Emote.Rarity">
            <summary>
                Gets or sets the rarity.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.ForzaCar">
            <summary>
                Represents the Forza car.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.ForzaCar.Id">
            <summary>
                Gets or sets the car ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.ForzaCar.DisplayName">
            <summary>
                Gets or sets the car name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.ForzaCar.MediaName">
            <summary>
                Gets or sets the media name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.ForzaCar.ModelShort">
            <summary>
                Gets or sets the model short.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.ForzaCar.MakeDisplayName">
            <summary>
                Gets or sets the make display name.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory">
            <summary>
                Represents a gift history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory.#ctor(System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory"/> class.
            </summary>
            <param name="playerId">The player ID.</param>
            <param name="title">The title.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="giftSendDateUtc">The gift send date.</param>
            <param name="giftInventory">The gift inventory.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory.PlayerId">
            <summary>
                Gets or sets the player ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory.RequestingAgent">
            <summary>
                Gets or sets the requesting agent.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory.GiftSendDateUtc">
            <summary>
                Gets or sets the gift send date in universal time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory.GiftInventory">
            <summary>
                Gets or sets gift inventory.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider">
            <summary>
                Exposes methods for interacting with Kusto.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider.GetCarHornsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <summary>
                Gets the car horns.
            </summary>
            <param name="supportedTitle">The supported title.</param>
            <returns>The car horns.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider.GetCarsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <summary>
                Gets the forza cars.
            </summary>
            <param name="supportedTitle">The supported title.</param>
            <returns>The forza cars.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider.GetCharacterCustomizationsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <summary>
                Gets the character customizations.
            </summary>
            <param name="supportedTitle">The supported titles.</param>
            <returns>The character customizations.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider.GetCreditRewardsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <summary>
                Gets the credit rewards.
            </summary>
            <param name="supportedTitle">The supported title.</param>
            <returns>The credit rewards.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider.GetEmotesAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <summary>
                Gets the emotes.
            </summary>
            <param name="supportedTitle">The supported title.</param>
            <returns>The emotes.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider.GetQuickChatsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <summary>
                Gets the quick chats.
            </summary>
            <param name="supportedTitle">The supported title.</param>
            <returns>The quick chats.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider.GetGiftHistoryAsync(System.String,System.String)">
            <summary>
                Gets gift history.
            </summary>
            <param name="playerId">The player ID.</param>
            <param name="title">The title.</param>
            <returns>The gift history.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider.GetBanHistoryAsync(System.UInt64,System.String)">
            <summary>
                Gets ban history.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="title">The title.</param>
            <returns>The ban history.</returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.JournalEntry">
            <summary>
                Represents a journal entry.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.JournalEntry.Username">
            <summary>
                Gets or sets the username.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.JournalEntry.TimestampUtc">
            <summary>
                Gets or sets the timestamp in UTC.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.JournalEntry.Route">
            <summary>
                Gets or sets the route.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.JournalEntry.Method">
            <summary>
                Gets or sets the method.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.JournalEntry.QueryParameters">
            <summary>
                Gets or sets the query parameters.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.JournalEntry.SessionId">
            <summary>
                Gets or sets the session ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.JournalEntry.RequestId">
            <summary>
                Gets or sets the request ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.JournalEntry.HttpResponseCode">
            <summary>
                Gets or sets the HTTP response code.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.JournalEntry.Body">
            <summary>
                Gets or sets the body.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.KustoExtensions">
            <summary>
                Syntactic sugar for Kusto actions.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.KustoExtensions.ToJsonColumnMappings``1(``0)">
            <summary>
                Converts the object to JSON column mappings.
            </summary>
            <param name="self">The self.</param>
            <returns>A list of JSON column mappings.</returns>
            <typeparam name="T">The type.</typeparam>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle">
            <summary>
                Represents title with tables in the Game DB.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle.Apollo">
            <summary>
                Forza Motorsport 7's internal name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle.Opus">
            <summary>
                Forza Horizon 3's internal name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle.Sunrise">
            <summary>
                Forza Horizon 4's internal name.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.KustoLoggerParameters">
            <summary>
                The kusto logger parameters.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.KustoLoggerParameters.Database">
            <summary>
                Gets or sets the database.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.KustoLoggerParameters.Table">
            <summary>
                Gets or sets the table.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider.#ctor(Turn10.Data.Kusto.IKustoFactory,Turn10.Data.Common.IRefreshableCacheStore,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider"/> class.
            </summary>
            <param name="kustoFactory">The Kusto factory.</param>
            <param name="refreshableCacheStore">The refreshable cache store.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider.GetCarHornsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider.GetCarsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider.GetCharacterCustomizationsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider.GetCreditRewardsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider.GetEmotesAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider.GetQuickChatsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider.GetGiftHistoryAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.KustoProvider.GetBanHistoryAsync(System.UInt64,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.KustoQueries">
            <summary>
                The query syntax for common data sets.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoQueries.GetCarHorns">
            <summary>
                Basic query for getting the CarHorns table for a title.
            </summary>
            <remarks>Should be used with string.Format to fill the missing title name.</remarks>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoQueries.GetCars">
            <summary>
                Basic query for getting the DataCars table for a title.
            </summary>
            <remarks>Should be used with string.Format to fill the missing title name.</remarks>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoQueries.GetCreditRewards">
            <summary>
                Basic query for getting the CreditReward table for a title.
            </summary>
            <remarks>Should be used with string.Format to fill the missing title name.</remarks>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoQueries.GetEmotes">
            <summary>
                Basic query for getting the EmoteData table for a title.
            </summary>
            <remarks>Should be used with string.Format to fill the missing title name.</remarks>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoQueries.GetQuickChats">
            <summary>
                Basic query for getting the QuickChatData table for a title.
            </summary>
            <remarks>Should be used with string.Format to fill the missing title name.</remarks>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoQueries.GetCharacterCustomizations">
            <summary>
                Basic query for getting the CharacterCustomizations table for a title.
            </summary>
            <remarks>Should be used with string.Format to fill the missing title name.</remarks>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoQueries.GetTitleMapping">
            <summary>
                Gets the title mapping.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoQueries.GetGiftHistory">
            <summary>
                Gets the gift history.
            </summary>
            <remarks>Should be used with string.Format to fill out missing keys.</remarks>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.KustoQueries.GetBanHistory">
            <summary>
                Gets the ban history.
            </summary>
            <remarks>Should be used with string.Format to fill out missing keys.</remarks>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory">
            <summary>
                Represents a Live Ops ban history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory.#ctor(System.Int64,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory"/> class.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="title">The title.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="startTimeUtc">The start time in UTC.</param>
            <param name="expireTimeUtc">The expire time in UTC.</param>
            <param name="featureArea">The feature area.</param>
            <param name="reason">The reason.</param>
            <param name="banParameters">The ban parameters.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory.StartTimeUtc">
            <summary>
                Gets or sets the start time in UTC.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory.ExpireTimeUtc">
            <summary>
                Gets or sets the expire time in UTC.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory.Title">
            <summary>
                Gets or sets the title.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory.RequestingAgent">
            <summary>
                Gets or sets the requesting agent.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory.FeatureArea">
            <summary>
                Gets or sets the feature area.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory.Reason">
            <summary>
                Gets or sets the reason.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory.BanParameters">
            <summary>
                Gets or sets the ban parameters.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.TelemetryLogLevel">
            <summary>
                Represents telemetry log levels.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.TelemetryLogLevel.Trace">
            <summary>
                Fine grain informational logs.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.TelemetryLogLevel.Error">
            <summary>
                Used to track non-fatal errors that might allow the application to continue running.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.Data.TelemetryLogLevel.Fatal">
            <summary>
                A very severe error that will likely lead to application abort and/or 500 error.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.QuickChat">
            <summary>
                Represents a quick chat.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.QuickChat.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.QuickChat.ChatMessage">
            <summary>
                Gets or sets the chat message.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.QuickChat.RequiresUnlock">
            <summary>
                Gets or sets a value indicating whether requires unlock.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.QuickChat.Hidden">
            <summary>
                Gets or sets value indicating whether hidden.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.TelemetryEvent">
            <summary>
                Represents a telemetry event.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.TelemetryEvent.Body">
            <summary>
                Gets or sets the telemetry body.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.TelemetryEvent.TimestampUtc">
            <summary>
                Gets or sets the timestamp in UTC.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.TelemetryEvent.LogLevel">
            <summary>
                Gets or sets the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Data.TelemetryLogLevel"/>.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Data.TitleMap">
            <summary>
                Maps various title strings.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.TitleMap.TitleId">
            <summary>
                Gets or sets the title ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.TitleMap.NameInternal">
            <summary>
                Gets or sets the name internal.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.TitleMap.NameExternal">
            <summary>
                Gets or sets the name external.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Data.TitleMap.NameExternalFull">
            <summary>
                Gets or sets the name external full.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent">
            <summary>
                Represents the available gift history types.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent.Xuid">
            <summary>
                The xuid.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent.T10Id">
            <summary>
                The Turn 10 ID.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent.LspGroupId">
            <summary>
                The LSP group ID.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar">
            <summary>
                Represents a Gravity car.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar.Vin">
            <summary>
                Gets or sets the VIN.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar.PurchaseUtc">
            <summary>
                Gets or sets the purchase time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar.CurrentMasteryRank">
            <summary>
                Gets or sets the current mastery rank.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar.CumulativeMastery">
            <summary>
                Gets or sets the cumulative mastery.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar.RepairState">
            <summary>
                Gets or sets the repair state.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar.StarPoints">
            <summary>
                Gets or sets the star points.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar.Color">
            <summary>
                Gets or sets the color.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar.Livery">
            <summary>
                Gets or sets the livery.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar.ClientPr">
            <summary>
                Gets or sets the client PR.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityCar.AdvancedCarCustomization">
            <summary>
                Gets or sets the advanced car customization.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityGiftHistory">
            <summary>
                Represents a Gravity gift history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityGiftHistory.#ctor(System.String,System.String,System.String,System.DateTime,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityGiftHistory"/> class.
            </summary>
            <param name="playerId">The player ID.</param>
            <param name="title">The title.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="giftSendDateUtc">The gift send date.</param>
            <param name="giftInventory">The gift inventory.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityGiftHistory.PlayerId">
            <summary>
                Gets or sets the player ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityGiftHistory.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityGiftHistory.RequestingAgent">
            <summary>
                Gets or sets the requesting agent.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityGiftHistory.GiftSendDateUtc">
            <summary>
                Gets or sets the gift send date in universal time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityGiftHistory.GiftInventory">
            <summary>
                Gets or sets gift inventory.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityInventoryItem">
            <summary>
                Represents a Gravity inventory item.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityInventoryItem.ItemId">
            <summary>
                Gets or sets the item ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityInventoryItem.Quantity">
            <summary>
                Gets or sets the quantity.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityInventoryItem.AcquisitionUtc">
            <summary>
                Gets or sets the acquisition time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityInventoryItem.ModifiedUtc">
            <summary>
                Gets or sets the modified time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityInventoryItem.LastUsedUtc">
            <summary>
                Gets or sets the last used time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityInventoryItem.Description">
            <summary>
                Gets or sets the description.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails">
            <summary>
                Represents a Gravity player details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.Gamertag">
            <summary>
                Gets or sets the gamertag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.Turn10Id">
            <summary>
                Gets or sets the Turn 10 ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.PlayFabId">
            <summary>
                Gets or sets the Play Fab ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.UserInventoryId">
            <summary>
                Gets or sets the user inventory ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.Lcid">
            <summary>
                Gets or sets the LCID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.Country">
            <summary>
                Gets or sets the country.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.Region">
            <summary>
                Gets or sets the region.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.IpAddress">
            <summary>
                Gets or sets the IP Address.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.SubscriptionTier">
            <summary>
                Gets or sets the subscription tier.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.LastLoginUtc">
            <summary>
                Gets or sets the last login.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.FirstLoginUtc">
            <summary>
                Gets or sets the first login.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.AgeGroup">
            <summary>
                Gets or sets the age group.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.TimeOffsetInSeconds">
            <summary>
                Gets or sets the time offset in seconds.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.LastGameSettingsUsed">
            <summary>
                Gets or sets the last game settings used.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails.SaveStates">
            <summary>
                Gets or sets the profile details.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory">
            <summary>
                Represents a Gravity player inventory.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.Xuid">
            <summary>
                Gets or sets the Xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.Turn10Id">
            <summary>
                Gets or sets the Turn 10 ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.Cars">
            <summary>
                Gets or sets the cars.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.MasteryKits">
            <summary>
                Gets or sets the mastery kits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.UpgradeKits">
            <summary>
                Gets or sets the upgrade kits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.RepairKits">
            <summary>
                Gets or sets the repair kits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.Packs">
            <summary>
                Gets or sets the packs.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.Currencies">
            <summary>
                Gets or sets the currencies.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.EnergyRefills">
            <summary>
                Gets or sets the energy refills.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.PreviousGameSettingsId">
            <summary>
                Gets or sets the previous game settings ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory.CurrentExternalProfileId">
            <summary>
                Gets or sets the current external profile ID.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityRepairKit">
            <summary>
                Represents information related to a Gravity repair kit.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityRepairKit.PartialQuantity">
            <summary>
                Gets or sets the partial quantity.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravitySaveState">
            <summary>
                Represents Gravity save state.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravitySaveState.UserInventoryId">
            <summary>
                Gets or sets the user inventory ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravitySaveState.LastLoginUtc">
            <summary>
                Gets or sets the last login.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityUpgradeKit">
            <summary>
                Represents information related to a Gravity upgrade kit.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityUpgradeKit.PartialQuantity">
            <summary>
                Gets or sets the partial quantity.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarClass">
            <summary>
                Represents a car class.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails">
            <summary>
                Represents car details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.CarId">
            <summary>
                Gets or sets the car ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.CarClass">
            <summary>
                Gets or sets the car class.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.CarName">
            <summary>
                Gets or sets the car name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.ManufacturerId">
            <summary>
                Gets or sets the manufacturer ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.ReleaseYear">
            <summary>
                Gets or sets the release year.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.ModelId">
            <summary>
                Gets or sets the model ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.CountryId">
            <summary>
                Gets or sets the country ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.MinPerformanceIndex">
            <summary>
                Gets or sets the min performance index.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.MaxPerformanceIndex">
            <summary>
                Gets or sets the max performance index.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.MaxConditionPips">
            <summary>
                Gets or sets the max condition pips.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.StarRating">
            <summary>
                Gets or sets the star rating.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.StarRanks">
            <summary>
                Gets or sets the star ranks.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.DuplicateRewardsPackage">
            <summary>
                Gets or sets the duplicate rewards package.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.Era">
            <summary>
                Gets or sets the era.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.Grade">
            <summary>
                Gets or sets the grade.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarDetails.TransitionCarId">
            <summary>
                Gets or sets the transition car ID.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarEra">
            <summary>
                Represents the car era.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.CarGrade">
            <summary>
                Represents the car grade.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.EnergyRefillDetails">
            <summary>
                Represents the energy refill details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.EnergyRefillDetails.IsFull">
            <summary>
                Gets or sets a value indicating whether is full.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.EnergyRefillDetails.PartialValue">
            <summary>
                Gets or sets the partial value.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1">
            <summary>
                Represents the game data item.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1.Name">
            <summary>
                Gets or sets the name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1.Description">
            <summary>
                Gets or sets the description.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1.ImageUrl">
            <summary>
                Gets or sets the image URL.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1.ItemId">
            <summary>
                Gets or sets the item ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1.SettingsId">
            <summary>
                Gets or sets the settings ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1.LastUpdated">
            <summary>
                Gets or sets the last updated.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1.LastUpdatedBy">
            <summary>
                Gets or sets the last updated by.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1.Created">
            <summary>
                Gets or sets the created.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1.CreatedBy">
            <summary>
                Gets or sets the created by.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameDataItem`1.Details">
            <summary>
                Gets or sets the details.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings">
            <summary>
                Represents game settings.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.Currencies">
            <summary>
                Gets or sets the currencies.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.RepairKits">
            <summary>
                Gets or sets the repair kits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.MasteryKits">
            <summary>
                Gets or sets the mastery kits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.UpgradeKits">
            <summary>
                Gets or sets the upgrade kits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.PackDefinitions">
            <summary>
                Gets or sets the pack definitions.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.Cars">
            <summary>
                Gets or sets the cars.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.EnergyRefills">
            <summary>
                Gets or sets the energy refills.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.HeatDetails">
            <summary>
                Gets or sets the heat details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.FtueStates">
            <summary>
                Gets or sets the FTUE states.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.CarClasses">
            <summary>
                Gets or sets the car classes.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.CarEras">
            <summary>
                Gets or sets the car eras.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.CarGrades">
            <summary>
                Gets or sets the car grades.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.CareerNodeTypes">
            <summary>
                Gets or sets the career node types.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.HeatEventTypes">
            <summary>
                Gets or sets the heat event types.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.CareerRewardTypes">
            <summary>
                Gets or sets the career reward types.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.SubscriptionTiers">
            <summary>
                Gets or sets the subscription tiers.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.UpgradeRequirementItemTypes">
            <summary>
                Gets or sets the upgrade requirement item types.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings.UpgradeTiers">
            <summary>
                Gets or sets the upgrade tiers.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatDetails">
            <summary>
                Represents heat details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatDetails.AlwaysUnlocked">
            <summary>
                Gets or sets a value indicating whether always unlocked.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatDetails.DefaultEnergyCost">
            <summary>
                Gets or sets the default energy cost.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatDetails.EventType">
            <summary>
                Gets or sets the event type.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatDetails.HeatId">
            <summary>
                Gets or sets the heat ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatDetails.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatNode">
            <summary>
                Represents a heat node.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatNode.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatNode.Destinations">
            <summary>
                Gets or sets the destinations.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatNode.EnergyCost">
            <summary>
                Gets or sets the energy cost.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatNode.Type">
            <summary>
                Gets or sets the type.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.HeatNodeType">
            <summary>
                Represents the heat node type.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.MasteryKitDetails">
            <summary>
                Represents the mastery kit details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.MasteryKitDetails.CarClass">
            <summary>
                Gets or sets the car class.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.MasteryKitDetails.ClassBonusValue">
            <summary>
                Gets or sets the class bonus value.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.MasteryKitDetails.CurrencyModifier">
            <summary>
                Gets or sets the currency modifier.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.MasteryKitDetails.CurrencyId">
            <summary>
                Gets or sets the currency ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.MasteryKitDetails.Value">
            <summary>
                Gets or sets the value.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.NotificationTagDetails">
            <summary>
                Represents the notification tag details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.NotificationTagDetails.Title">
            <summary>
                Gets or sets the title.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.NotificationTagDetails.Description">
            <summary>
                Gets or sets the description.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.NotificationTagDetails.Tag">
            <summary>
                Gets or sets the tag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.NotificationTagDetails.Required">
            <summary>
                Gets or sets a value indicating whether required.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.RepairKitDetails">
            <summary>
                Represents repair kit details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.RepairKitDetails.RepairValue">
            <summary>
                Gets or sets the repair value.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.RepairKitDetails.StarRatingRequirement">
            <summary>
                Gets or sets the star rating requirement.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.StarRank">
            <summary>
                Represents the star rank.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.StarRank.TotalMasteryThreshold">
            <summary>
                Gets or sets the total mastery threshold.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.StarRank.Rank">
            <summary>
                Gets or sets the rank.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.StarRank.MasteryLevelSpacingCoefficients">
            <summary>
                Gets or sets the mastery level spacing coefficients.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.StarRank.PILowerThresholdProportion">
            <summary>
                Gets or sets the PI lower threshold proportion.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.StarRank.PIUpperThresholdProportion">
            <summary>
                Gets or sets the PI upper threshold proportion.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.StarRank.MaxLevel">
            <summary>
                Gets or sets the max level.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.StarRank.RequiredUpgrades">
            <summary>
                Gets or sets the required upgrades.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.StarRank.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeKitDetails">
            <summary>
                Represents the upgrade kit details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeKitDetails.CarClass">
            <summary>
                Gets or sets the car class.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeKitDetails.UpgradeTier">
            <summary>
                Gets or sets the upgrade tier.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeRequirement">
            <summary>
                Represents the upgrade requirement.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeRequirement.ItemType">
            <summary>
                Gets or sets the item type.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeRequirement.ItemQuantity">
            <summary>
                Gets or sets the item quantity.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeRequirement.ItemId">
            <summary>
                Gets or sets the item ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeRequirement.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeRequirement.LastUpdatedBy">
            <summary>
                Gets or sets the last updated by.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeRequirement.CreatedBy">
            <summary>
                Gets or sets the created by.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeRequirementItemType">
            <summary>
                Represents the upgrade requirement item type.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.UpgradeTier">
            <summary>
                Represents the upgrade tier.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car">
            <summary>
                Represents the Car.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.Vin">
            <summary>
                Gets or sets the VIN.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.PurchaseTimestamp">
            <summary>
                Gets or sets the purchase timestamp.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.CurrentMasteryRank">
            <summary>
                Gets or sets the current mastery rank.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.CumulativeMastery">
            <summary>
                Gets or sets the cumulative mastery.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.RepairState">
            <summary>
                Gets or sets the repair state.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.StarPoints">
            <summary>
                Gets or sets the star points.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.Color">
            <summary>
                Gets or sets the color.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.Livery">
            <summary>
                Gets or sets the livery.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.ClientPR">
            <summary>
                Gets or sets the client PR.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.AdvancedCarCustomization">
            <summary>
                Gets or sets the advanced car customization.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.CollectorScore">
            <summary>
                Gets or sets the collector score.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.ProductionNumber">
            <summary>
                Gets or sets the production number.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.VersionedLiveryId">
            <summary>
                Gets or sets the versioned livery ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.VersionedTuneId">
            <summary>
                Gets or sets the versioned tune ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.IsOnlineOnly">
            <summary>
                Gets or sets a value indicating whether is online only.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.BaseCost">
            <summary>
                Gets or sets the base cost.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.DisplayName">
            <summary>
                Gets or sets the display name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Car.Special">
            <summary>
                Gets or sets the special.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.CareerNode">
            <summary>
                Represents the career node.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CareerNode.NodeType">
            <summary>
                Gets or sets the node type.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CareerNode.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.CarTeamMember">
            <summary>
                Represents the car team member.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CarTeamMember.Vin">
            <summary>
                Gets or sets the VIN.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CarTeamMember.RepairState">
            <summary>
                Gets or sets the repair state.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.Currency">
            <summary>
                Represents the currency.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat">
            <summary>
                Represents the current heat.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.EventType">
            <summary>
                Gets or sets the event type.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.SettingsId">
            <summary>
                Gets or sets the settings ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.CurrentCar">
            <summary>
                Gets or sets the current car.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.CurrentOpponentSlotIndex">
            <summary>
                Gets or sets the current opponent slot index.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.CurrentNodeId">
            <summary>
                Gets or sets the current node ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.PreviousNodeId">
            <summary>
                Gets or sets the previous node ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.ExpiryTime">
            <summary>
                Gets or sets the expiry time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.CompletedNodes">
            <summary>
                Gets or sets the completed nodes.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.CarTeamMembers">
            <summary>
                Gets or sets the car team members.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.CareerNodes">
            <summary>
                Gets or sets the career nodes.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.PendingRewardsPackages">
            <summary>
                Gets or sets the pending rewards packages.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.CurrentHeat.Quantity">
            <summary>
                Gets or sets the quantity.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.EnergyRefill">
            <summary>
                Represents the energy refill.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatNode">
            <summary>
                Represents the heat node.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatNode.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatNode.Car">
            <summary>
                Gets or sets the car.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatNode.Score">
            <summary>
                Gets or sets the score.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatProgression">
            <summary>
                Represents the heat progression.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatProgression.HeatKey">
            <summary>
                Gets or sets the heat key.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatProgression.HeatId">
            <summary>
                Gets or sets the heat ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatProgression.SettingsId">
            <summary>
                Gets or sets the settings ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatProgression.Completed">
            <summary>
                Gets or sets a value indicating whether it is completed.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatProgression.IsUnlocked">
            <summary>
                Gets or sets a value indicating whether it is unlocked.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatProgression.CareerNodes">
            <summary>
                Gets or sets the career modes.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatProgression.CompletedNodes">
            <summary>
                Gets or sets the completed nodes.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.HeatProgression.NodesTraversedBeforeQuitting">
            <summary>
                Gets or sets the nodes traversed before quitting.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.InventoryItem">
            <summary>
                Represents the inventory item.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.InventoryItem.ItemId">
            <summary>
                Gets or sets the item ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.InventoryItem.Quantity">
            <summary>
                Gets or sets the quantity.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.InventoryItem.AcquisitionTime">
            <summary>
                Gets or sets the acquisition time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.InventoryItem.ModifiedTime">
            <summary>
                Gets or sets the modified time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.InventoryItem.LastUsedTime">
            <summary>
                Gets or sets the last used time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.InventoryItem.Description">
            <summary>
                Gets or sets the description.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.MasteryKit">
            <summary>
                Represents the mastery kit.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.Pack">
            <summary>
                Represents the pack.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.PendingRewardsPackage">
            <summary>
                Represents the pending rewards package.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PendingRewardsPackage.RewardType">
            <summary>
                Gets or sets the reward type.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PendingRewardsPackage.RewardsPackageClientId">
            <summary>
                Gets or sets the rewards package client ID.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory">
            <summary>
                Represents the player inventory.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.Cars">
            <summary>
                Gets or sets the cars.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.MasteryKits">
            <summary>
                Gets or sets the mastery kits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.UpgradeKits">
            <summary>
                Gets or sets the upgrade kits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.RepairKits">
            <summary>
                Gets or sets the repair kits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.HeatProgressions">
            <summary>
                Gets or sets the heat progressions.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.Packs">
            <summary>
                Gets or sets the packs.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.Currencies">
            <summary>
                Gets or sets the currencies.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.CurrentHeats">
            <summary>
                Gets or sets the current heats.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.EnergyRefills">
            <summary>
                Gets or sets the energy refills.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.FtueState">
            <summary>
                Gets or sets the FTUE state.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.PreviousGameSettingsInfo">
            <summary>
                Gets or sets the previous game settings info.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.PreviousGameSettingsGuid">
            <summary>
                Gets or sets the previous game settings GUID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.CurrentExternalProfileId">
            <summary>
                Gets or sets the current external profile ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.Xuid">
            <summary>
                Gets or sets the XUID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.T10Id">
            <summary>
                Gets or sets the Turn 10 Id.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.Rebuilds">
            <summary>
                Gets or sets the rebuilds.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.VanityItems">
            <summary>
                Gets or sets the vanity items.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.CarHorns">
            <summary>
                Gets or sets the car horns.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.QuickChatLines">
            <summary>
                Gets or sets the quick chat lines.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.CreditRewards">
            <summary>
                Gets or sets the credit rewards.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.Emotes">
            <summary>
                Gets or sets the emotes.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.BarnFindRumors">
            <summary>
                Gets or sets the barn find rumors.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.Perks">
            <summary>
                Gets or sets the perks.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.Credits">
            <summary>
                Gets or sets the credits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.WheelSpins">
            <summary>
                Gets or sets the wheel spins.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.SuperWheelSpins">
            <summary>
                Gets or sets the super wheel spins.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.SkillPoints">
            <summary>
                Gets or sets the skill points.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.ForzathonPoints">
            <summary>
                Gets or sets the Forzathon points.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.Mods">
            <summary>
               Gets or sets the mods.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.Badges">
            <summary>
               Gets or sets the badges.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PlayerInventory.GiftReason">
            <summary>
                Gets or sets the gift reason.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.PreviousGameSettingsVersion">
            <summary>
                Represents previous game settings version.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PreviousGameSettingsVersion.VersionNumber">
            <summary>
                Gets or sets the version number.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.PreviousGameSettingsVersion.SaveGameVersion">
            <summary>
                Gets or sets the save game version.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.RepairKit">
            <summary>
                Represents the repair kit.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.RepairKit.PartialQuantity">
            <summary>
                Gets or sets the partial quantity.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.Response">
            <summary>
                Represents a Scrutineer response.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.Response.Environment">
            <summary>
                Gets or sets the environment.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Legacy.UpgradeKit">
            <summary>
                Represents the upgrade kit.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Legacy.UpgradeKit.PartialQuantity">
            <summary>
                Gets or sets the partial quantity.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusCar">
            <summary>
                Represents an Opus car.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusCar.BaseCost">
            <summary>
                Gets or sets the base cost.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusCar.CarId">
            <summary>
                Gets or sets the car ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusCar.DateCreatedUtc">
            <summary>
                Gets or sets the date created.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusCar.DisplayName">
            <summary>
                Gets or sets the display name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusCar.Special">
            <summary>
                Gets or sets the special.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusCar.VersionedLiveryId">
            <summary>
                Gets or sets the version livery ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusCar.VersionedTuneId">
            <summary>
                Gets or sets the version tune ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusCar.Vin">
            <summary>
                Gets or sets the VIN.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusInventoryProfile">
            <summary>
                Represents an Opus inventory profile.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusInventoryProfile.ProfileId">
            <summary>
                Gets or sets the profile ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusInventoryProfile.IsCurrent">
            <summary>
                Gets or sets a value indicating whether profile is current.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails">
            <summary>
                Represents an Opus player details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.Gamertag">
            <summary>
                Gets or sets the gamertag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.LicensePlate">
            <summary>
                Gets or sets the license plate.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.AgeGroup">
            <summary>
                Gets or sets the age group.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.SubscriptionTier">
            <summary>
                Gets or sets the subscription tier.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.Country">
            <summary>
                Gets or sets the country.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.Region">
            <summary>
                Gets or sets the region.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.Lcid">
            <summary>
                Gets or sets the LCID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IpAddress">
            <summary>
                Gets or sets the IP address.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.LastLoginUtc">
            <summary>
                Gets or sets the last login.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.FirstLoginUtc">
            <summary>
                Gets or sets the first login.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.CurrentDriverModelId">
            <summary>
                Gets or sets the current driver model ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.CurrentPlayerTitleId">
            <summary>
                Gets or sets the current player title ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.CurrentBadgeId">
            <summary>
                Gets or sets the current badge ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.CurrentCareerLevel">
            <summary>
                Gets or sets the current career level.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.AcceptsClubInvites">
            <summary>
                Gets or sets a value indicating whether player accepts club invites.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.ClubTag">
            <summary>
                Gets or sets the club tag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.ClubTopTierCount">
            <summary>
                Gets or sets the club top tier count.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.RoleInClub">
            <summary>
                Gets or sets the role in club.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.Flags">
            <summary>
                Gets or sets the flags.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsFeaturedCommentator">
            <summary>
                Gets or sets a value indicating whether player is featured commentator.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsFeaturedDrivatar">
            <summary>
                Gets or sets a value indicating whether player is featured drivatar.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsFeaturedPhotographer">
            <summary>
                Gets or sets a value indicating whether player is featured photographer.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsFeaturedTuner">
            <summary>
                Gets or sets a value indicating whether player is featured tuner.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsFeaturedPainter">
            <summary>
                Gets or sets a value indicating whether player is featured painter.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsFlaggedForSuspiciousActivity">
            <summary>
                Gets or sets a value indicating whether player is flagged for suspicious activity.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsCommunityManager">
            <summary>
                Gets or sets a value indicating whether player is community manager.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsUnderReview">
            <summary>
                Gets or sets a value indicating whether player is under review.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsOnWhiteList">
            <summary>
                Gets or sets a value indicating whether player is on white list.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsTurn10Employee">
            <summary>
                Gets or sets a value indicating whether player is Turn 10 employee.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails.IsVip">
            <summary>
                Gets or sets a value indicating whether player is VIP.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerInventory">
            <summary>
                Represents an Opus player inventory.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerInventory.Cars">
            <summary>
                Gets or sets the cars.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerInventory.Credits">
            <summary>
                Gets or sets the credits.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanBase">
            <summary>
                Base type for Sunrise ban information.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanBase.Reason">
            <summary>
                Gets or sets the reason.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanBase.FeatureArea">
            <summary>
                Gets or sets the feature area.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanBase.StartTimeUtc">
            <summary>
                Gets or sets the start time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanBase.ExpireTimeUtc">
            <summary>
                Gets or sets the expire time.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanDescription">
            <summary>
                Represents a Sunrise ban description.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanDescription.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanDescription.IsActive">
            <summary>
                Gets or sets a value indicating whether the ban is active.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanDescription.CountOfTimesExtended">
            <summary>
                Gets or sets the count of times extended.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanDescription.LastExtendedTimeUtc">
            <summary>
                Gets or sets the last extended time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanDescription.LastExtendedReason">
            <summary>
                Gets or sets the last extended reason.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanHistory">
            <summary>
                Represents a Sunrise ban history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanHistory.#ctor(System.Collections.Generic.IList{Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanDescription},System.Collections.Generic.IList{Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory})">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanHistory"/> class.
            </summary>
            <param name="servicesBanHistory">The services ban history.</param>
            <param name="liveOpsBanHistory">The live ops ban history.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanHistory.ServicesBanHistory">
            <summary>
                Gets or sets the services ban history.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanHistory.LiveOpsBanHistory">
            <summary>
                Gets or sets the live ops ban history.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters">
            <summary>
                Represents a Sunrise ban parameters.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters.Xuids">
            <summary>
                Gets or sets the xuid list.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters.Gamertags">
            <summary>
                Gets or sets the gamertag list.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters.BanAllConsoles">
            <summary>
                Gets or sets a value indicating whether to ban all consoles.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters.BanAllPcs">
            <summary>
                Gets or sets a value indicating whether to ban all PCs.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters.DeleteLeaderboardEntries">
            <summary>
                Gets or sets a value indicating whether to delete leaderboard entries.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters.SendReasonNotification">
            <summary>
                Gets or sets a value indicating whether to send reason notification.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanResult">
            <summary>
                Represents a Sunrise ban result.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanResult.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanResult.Success">
            <summary>
                Gets or sets a value indicating whether the ban was successful.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanResult.BanDescription">
            <summary>
                Gets or sets the ban description.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanSummary">
            <summary>
                Represents a Sunrise ban summary.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanSummary.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanSummary.Gamertag">
            <summary>
                Gets or sets the gamertag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanSummary.BanCount">
            <summary>
                Gets or sets the number of bans.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanSummary.BannedAreas">
            <summary>
                Gets or sets the banned areas.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanSummary.LastBanDescription">
            <summary>
                Gets or sets the last ban's description.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanSummary.UserExists">
            <summary>
                Gets or sets a value indicating whether the user exists.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCar">
            <summary>
                Represents a Sunrise car.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCar.BaseCost">
            <summary>
                Gets or sets the base cost.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCar.CollectorScore">
            <summary>
                Gets or sets the collector score.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCar.Vin">
            <summary>
                Gets or sets the VIN.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCar.IsOnlineOnly">
            <summary>
                Gets or sets a value indicating whether is online only.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCar.ProductionNumber">
            <summary>
                Gets or sets the production number.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCar.PurchaseUtc">
            <summary>
                Gets or sets the purchase time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCar.VersionedLiveryId">
            <summary>
                Gets or sets the versioned livery ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCar.VersionedTuneId">
            <summary>
                Gets or sets the versioned tune ID.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseConsoleDetails">
            <summary>
                Represents a Sunrise console details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseConsoleDetails.ConsoleId">
            <summary>
                Gets or sets the console ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseConsoleDetails.IsBanned">
            <summary>
                Gets or sets a value indicating whether the user is banned.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseConsoleDetails.IsBannable">
            <summary>
                Gets or sets a value indicating whether the user is bannable.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseConsoleDetails.DeviceType">
            <summary>
                Gets or sets the device type.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseConsoleDetails.ClientVersion">
            <summary>
                Gets or sets the client version.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCreditUpdate">
            <summary>
                Represents a Sunrise credit update.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCreditUpdate.EventTimestampUtc">
            <summary>
                Gets or sets the event time stamp in UTC.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCreditUpdate.DeviceType">
            <summary>
                Gets or sets the device type.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCreditUpdate.CreditsAfter">
            <summary>
                Gets or sets the credits after.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCreditUpdate.CreditAmount">
            <summary>
                Gets or sets the credit amount.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCreditUpdate.SceneName">
            <summary>
                Gets or sets the scene name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCreditUpdate.TotalXp">
            <summary>
                Gets or sets the total XP.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGiftHistory">
            <summary>
                Represents a Sunrise gift history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGiftHistory.#ctor(System.String,System.String,System.String,System.DateTime,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGiftHistory"/> class.
            </summary>
            <param name="playerId">The player ID.</param>
            <param name="title">The title.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="giftSendDateUtc">The gift send date.</param>
            <param name="giftInventory">The gift inventory.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGiftHistory.PlayerId">
            <summary>
                Gets or sets the player ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGiftHistory.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGiftHistory.RequestingAgent">
            <summary>
                Gets or sets the requesting agent.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGiftHistory.GiftSendDateUtc">
            <summary>
                Gets or sets the gift send date in universal time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGiftHistory.GiftInventory">
            <summary>
                Gets or sets gift inventory.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGroupGift">
            <summary>
                Represents a Sunrise group gift.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGroupGift.Gamertags">
            <summary>
                Gets or sets the gamertag list.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGroupGift.Xuids">
            <summary>
                Gets or sets the xuid list.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGroupGift.GiftInventory">
            <summary>
                Gets or sets the gift inventory.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryItem">
            <summary>
                Represents a Sunrise inventory item.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryItem.ItemId">
            <summary>
                Gets or sets the item ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryItem.Quantity">
            <summary>
                Gets or sets the quantity.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryItem.AcquisitionUtc">
            <summary>
                Gets or sets the acquisition time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryItem.LastUsedUtc">
            <summary>
                Gets or sets the last used time.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryItem.Description">
            <summary>
                Gets or sets the description.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryProfile">
            <summary>
                Represents a Sunrise inventory profile.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryProfile.ProfileId">
            <summary>
                Gets or sets the profile ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryProfile.ExternalProfileId">
            <summary>
                Gets or sets the external profile ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryProfile.IsCurrent">
            <summary>
                Gets or sets a value indicating whether profile is current.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseLspGroup">
            <summary>
                Represents a Sunrise LSP group.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseLspGroup.Id">
            <summary>
                Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseLspGroup.Name">
            <summary>
                Gets or sets the name.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails">
            <summary>
                Represents a Sunrise player details.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.Gamertag">
            <summary>
                Gets or sets the gamertag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.Region">
            <summary>
                Gets or sets the region.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.LicensePlate">
            <summary>
                Gets or sets the license plate.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.CustomizationSlots">
            <summary>
                Gets or sets the customization slots.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.CurrentDriverModelId">
            <summary>
                Gets or sets the current driver model ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.CurrentPlayerTitleId">
            <summary>
                Gets or sets the current player title ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.CurrentPlayerBadgeId">
            <summary>
                Gets or sets the current player badge ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.CurrentCareerLevel">
            <summary>
                Gets or sets the current career level.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.Flags">
            <summary>
                Gets or sets the flags.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.BlueprintThreadLevel">
            <summary>
                Gets or sets the blueprint thread level.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.PhotoThreadLevel">
            <summary>
                Gets or sets the photo thread level.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.TunerThreadLevel">
            <summary>
                Gets or sets the tuner thread level.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.PainterThreadLevel">
            <summary>
                Gets or sets the painter thread level.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.TeamId">
            <summary>
                Gets or sets the team ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.TeamTag">
            <summary>
                Gets or sets the team tag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.RoleInTeam">
            <summary>
                Gets or sets the role in team.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.ClubId">
            <summary>
                Gets or sets the club id.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.ClubTag">
            <summary>
                Gets or sets the club tag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails.RoleInClub">
            <summary>
                Gets or sets the role in club.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory">
            <summary>
                Represents a Sunrise player inventory.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.Xuid">
            <summary>
                Gets or sets the Xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.Credits">
            <summary>
                Gets or sets the credits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.WheelSpins">
            <summary>
                Gets or sets the wheel spins.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.SuperWheelSpins">
            <summary>
                Gets or sets the super wheel spins.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.SkillPoints">
            <summary>
                Gets or sets the skill points.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.ForzathonPoints">
            <summary>
                Gets or sets the Forzathon points.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.Rebuilds">
            <summary>
                Gets or sets the rebuilds.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.VanityItems">
            <summary>
                Gets or sets the vanity items.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.Cars">
            <summary>
                Gets or sets the cars.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.CarHorns">
            <summary>
                Gets or sets the car horns.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.QuickChatLines">
            <summary>
                Gets or sets the quick chat lines.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.CreditRewards">
            <summary>
                Gets or sets the credit rewards.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.Emotes">
            <summary>
                Gets or sets the emotes.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.BarnFindRumors">
            <summary>
                Gets or sets the barn find rumors.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.Perks">
            <summary>
                Gets or sets the perks.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory.GiftReason">
            <summary>
                Gets or sets the gift reason.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary">
            <summary>
                Represents a Sunrise profile summary.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary.TotalTombolaSpins">
            <summary>
                Gets or sets the total Tombola spins.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary.TotalSuperTombolaSpins">
            <summary>
                Gets or sets the total Super Tombola spins.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary.CurrentCredits">
            <summary>
                Gets or sets the current credits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary.MaxCredits">
            <summary>
                Gets or sets the max credits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary.HousesPurchased">
            <summary>
                Gets or sets houses purchased count.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary.UnaccountedForCredits">
            <summary>
                Gets or sets the unaccounted for credits.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary.TotalXp">
            <summary>
                Gets or sets the total XP.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary.HackFlags">
            <summary>
                Gets or sets the hack flags.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseSharedConsoleUser">
            <summary>
                Represents a Sunrise shared console user.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseSharedConsoleUser.SharedConsoleId">
            <summary>
                Gets or sets the shared console ID.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseSharedConsoleUser.Xuid">
            <summary>
                Gets or sets the xuid.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseSharedConsoleUser.Gamertag">
            <summary>
                Gets or sets the gamertag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseSharedConsoleUser.EverBanned">
            <summary>
                Gets or sets a value indicating whether ever banned.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags">
            <summary>
                Represents a Sunrise user flags.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags.IsVip">
            <summary>
                Gets or sets a value indicating whether the user is VIP.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags.IsUltimateVip">
            <summary>
                Gets or sets a value indicating whether the user is ultimate VIP.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags.IsTurn10Employee">
            <summary>
                Gets or sets a value indicating whether the user is a Turn 10 employee.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags.IsCommunityManager">
            <summary>
                Gets or sets a value indicating whether the user is a community manager.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags.IsEarlyAccess">
            <summary>
                Gets or sets a value indicating whether the user is early access.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags.IsUnderReview">
            <summary>
                Gets or sets a value indicating whether the user is under review.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Controllers.ApolloController">
            <summary>
                Handles requests for Apollo.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.#ctor(Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider,Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerInventoryProvider,Turn10.Data.SecretProvider.IKeyVaultProvider,Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftHistoryProvider,Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloBanHistoryProvider,Microsoft.Extensions.Configuration.IConfiguration,Turn10.LiveOps.StewardApi.Providers.IScheduler,Turn10.LiveOps.StewardApi.Providers.IJobTracker,Turn10.LiveOps.StewardApi.Validation.IRequestValidator{Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters},Turn10.LiveOps.StewardApi.Validation.IRequestValidator{Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory},Turn10.LiveOps.StewardApi.Validation.IRequestValidator{Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGroupGift})">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Controllers.ApolloController"/> class.
            </summary>
            <param name="apolloPlayerDetailsProvider">The Apollo player details provider.</param>
            <param name="apolloPlayerInventoryProvider">The Apollo player inventory provider.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
            <param name="giftHistoryProvider">The gift history provider.</param>
            <param name="banHistoryProvider">The ban history provider.</param>
            <param name="configuration">The configuration.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="jobTracker">The job tracker.</param>
            <param name="banParametersRequestValidator">The ban parameters request validator.</param>
            <param name="playerInventoryRequestValidator">The player inventory request validator.</param>
            <param name="groupGiftRequestValidator">The group gift request validator.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetPlayerDetails(System.String)">
            <summary>
                Gets the player details.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetPlayerDetails(System.UInt64)">
            <summary>
                Gets the player details.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.BanPlayers(System.Collections.Generic.IList{Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters},System.Boolean,System.String)">
            <summary>
                Bans players.
            </summary>
            <param name="banParameters">The list of ban parameters.</param>
            <param name="useBackgroundProcessing">A value that indicates whether to use background processing.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanResult"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetBanHistory(System.UInt64)">
            <summary>
                Gets ban history.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanHistory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetBanHistory(System.String)">
            <summary>
                Gets ban history.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanHistory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetBanSummaries(System.Collections.Generic.IList{System.UInt64})">
            <summary>
                Gets ban summaries.
            </summary>
            <param name="xuids">The xuids.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanSummary"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetConsoles(System.UInt64,System.Int32)">
            <summary>
                Gets the console details.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="maxResults">A value that specifies how many consoles to return.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloConsoleDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.SetConsoleBanStatus(System.UInt64,System.Boolean)">
            <summary>
                Sets consoles ban status.
            </summary>
            <param name="consoleId">The console ID.</param>
            <param name="isBanned">A value indicating whether the console is banned.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetSharedConsoleUsers(System.UInt64,System.Int32,System.Int32)">
            <summary>
                Gets shared console users.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloSharedConsoleUser"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetGroups(System.Int32,System.Int32)">
            <summary>
                Get groups.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloLspGroup"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetUserFlags(System.UInt64)">
            <summary>
                Gets user flags.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.SetUserFlags(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags)">
            <summary>
                Sets user flags.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="userFlags">The user flags.</param>
            <returns>
                The updated <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetPlayerInventory(System.UInt64)">
            <summary>
                Gets the player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetPlayerInventoryProfiles(System.UInt64)">
            <summary>
                Gets the player inventory profiles.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryProfile"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetPlayerInventory(System.Int32)">
            <summary>
                Gets the player inventory.
            </summary>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.UpdatePlayerInventory(Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,System.Boolean,System.String)">
            <summary>
                Updates the player inventory.
            </summary>
            <param name="playerInventory">The player inventory.</param>
            <param name="useBackgroundProcessing">Indicates whether to use background processing.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.UpdateGroupInventories(Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGroupGift,System.Boolean,System.String)">
            <summary>
                Update group inventories.
            </summary>
            <param name="groupGift">The group gift.</param>
            <param name="useBackgroundProcessing">Indicates whether to use background processing.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.UpdateGroupInventoriesByGamertags(Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGroupGift,System.Boolean,System.String)">
            <summary>
                Update group inventories.
            </summary>
            <param name="groupGift">The group gift.</param>
            <param name="useBackgroundProcessing">Indicates whether to use background processing.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.UpdateGroupInventories(System.Int32,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,System.String,System.String)">
            <summary>
                Update group inventories.
            </summary>
            <param name="groupId">The group ID.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="adminAuth">The admin auth.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.ApolloController.GetGiftHistoriesAsync(Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent,System.String)">
            <summary>
                Gets the gift histories.
            </summary>
            <param name="giftHistoryAntecedent">The gift history antecedent.</param>
            <param name="giftRecipientId">The gift recipient ID.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGiftHistory"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Controllers.AuthController">
            <summary>
                Handles auth requests.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.AuthController.#ctor(Microsoft.Extensions.Logging.ILogger{Turn10.LiveOps.StewardApi.Controllers.AuthController})">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Controllers.AuthController"/> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.AuthController.GetLiveOpsUser">
            <summary>
                Gets the user.
            </summary>
            <returns>
                200 OK
                The <see cref="T:Turn10.LiveOps.StewardApi.Models.LiveOpsUser"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Controllers.DataController">
            <summary>
                Handles requests for data.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.DataController.#ctor(Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Controllers.DataController"/> class.
            </summary>
            <param name="kustoProvider">The Kusto provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.DataController.GetCarsAsync(Turn10.LiveOps.StewardApi.Contracts.Data.KustoGameDbSupportedTitle)">
            <summary>
                Gets forza cars.
            </summary>
            <param name="title">The title.</param>
            <returns>
                A list of cars.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.DataController.GetCarHornsAsync">
            <summary>
                Gets car horns.
            </summary>
            <returns>
                A list of car horns.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.DataController.GetCharacterCustomizationsAsync">
            <summary>
                Gets character customizations.
            </summary>
            <returns>
                A list of character customizations.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.DataController.GetCreditRewardsAsync">
            <summary>
                Gets credit rewards.
            </summary>
            <returns>
                A list of credit rewards.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.DataController.GetEmotesAsync">
            <summary>
                Gets the emotes.
            </summary>
            <returns>
                A list of emotes.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.DataController.GetQuickChatsAsync">
            <summary>
                Gets the quick chats.
            </summary>
            <returns>
                A list of quick chats.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Controllers.GravityController">
            <summary>
                Handles requests for Gravity.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.#ctor(Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerDetailsProvider,Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider,Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityGiftHistoryProvider,Turn10.LiveOps.StewardApi.Providers.Gravity.Settings.ISettingsProvider,Turn10.LiveOps.StewardApi.Providers.IScheduler,Turn10.LiveOps.StewardApi.Providers.IJobTracker,Turn10.LiveOps.StewardApi.Validation.IRequestValidator{Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory})">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Controllers.GravityController"/> class.
            </summary>
            <param name="gravityPlayerDetailsProvider">The Gravity player details provider.</param>
            <param name="gravityPlayerInventoryProvider">The Gravity player inventory provider.</param>
            <param name="giftHistoryProvider">The gift history provider.</param>
            <param name="gravitySettingsProvider">The Gravity settings provider.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="jobTracker">The job tracker.</param>
            <param name="playerInventoryRequestValidator">The player inventory request validator.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.GetPlayerDetails(System.String)">
            <summary>
                Gets the player details.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.GetPlayerDetails(System.UInt64)">
            <summary>
                Gets the player details.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.GetPlayerDetailsByT10Id(System.String)">
            <summary>
                Gets the player details.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.GetPlayerInventory(System.UInt64)">
            <summary>
                Gets the player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.GetPlayerInventory(System.String)">
            <summary>
                Gets the player inventory.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.GetPlayerInventory(System.UInt64,System.String)">
            <summary>
                Gets the player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.GetPlayerInventory(System.String,System.String)">
            <summary>
                Gets the player inventory.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.CreateOrReplacePlayerInventoryByXuid(Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Creates or replaces the player inventory.
            </summary>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="grantStartingPackage">Indicates whether to grant the starting package.</param>
            <param name="preserveBookKeepingItems">Indicates whether to preserve book keeping items.</param>
            <param name="useBackgroundProcessing">Indicates whether to use background processing.</param>
            <returns>
                The updated <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.CreateOrReplacePlayerInventoryByT10Id(Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Creates or replace the player inventory.
            </summary>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="grantStartingPackage">Indicates whether to grant the starting package.</param>
            <param name="preserveBookKeepingItems">Indicates whether to preserve book keeping items.</param>
            <param name="useBackgroundProcessing">Indicates whether to use background processing.</param>
            <returns>
                The updated <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.UpdatePlayerInventoryByXuid(Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String,System.Boolean)">
            <summary>
                Update the player inventory.
            </summary>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="useBackgroundProcessing">Indicates whether to use background processing.</param>
            <returns>
                The updated <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.UpdatePlayerInventoryByT10Id(Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String,System.Boolean)">
            <summary>
                Update the player inventory.
            </summary>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="useBackgroundProcessing">Indicates whether to use background processing.</param>
            <returns>
                The updated <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.ResetPlayerInventory(System.UInt64)">
            <summary>
                Resets the player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.ResetPlayerInventory(System.String)">
            <summary>
                Resets the player inventory.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.GetGameSettings(System.String)">
            <summary>
                Get game settings.
            </summary>
            <param name="gameSettingsId">The game settings ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.GravityController.GetGiftHistoriesAsync(Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent,System.String)">
            <summary>
                Gets the gift histories.
            </summary>
            <param name="giftHistoryAntecedent">The gift history antecedent.</param>
            <param name="giftRecipientId">The gift recipient ID.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityGiftHistory"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Controllers.OpusController">
            <summary>
                Handles requests for Opus.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.OpusController.#ctor(Turn10.LiveOps.StewardApi.Providers.Opus.IOpusPlayerDetailsProvider,Turn10.LiveOps.StewardApi.Providers.Opus.IOpusPlayerInventoryProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Controllers.OpusController"/> class.
            </summary>
            <param name="opusPlayerDetailsProvider">The Opus player details provider.</param>
            <param name="opusPlayerInventoryProvider">The Opus player inventory provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.OpusController.GetPlayerDetails(System.String)">
            <summary>
                Get the player details.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.OpusController.GetPlayerDetails(System.UInt64)">
            <summary>
                Get the player details.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.OpusController.GetPlayerInventory(System.UInt64)">
            <summary>
                Get the player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.OpusController.GetPlayerInventoryProfiles(System.UInt64)">
            <summary>
                Gets the player inventory profiles.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusInventoryProfile"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.OpusController.GetPlayerInventory(System.Int32)">
            <summary>
                Get the player inventory.
            </summary>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerInventory"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Controllers.PipelinesController">
            <summary>
                Handles pipeline requests.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.PipelinesController.#ctor(Turn10.LiveOps.StewardApi.Obligation.IObligationProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Controllers.PipelinesController"/> class.
            </summary>
            <param name="obligationProvider">The obligation authoring client.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.PipelinesController.DeletePipeline(System.String)">
            <summary>
                Delete a pipeline.
            </summary>
            <param name="pipelineName">The pipeline name.</param>
            <returns>
                2OO OK.
                An ID that can be used to track the request.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.PipelinesController.GetPipeline(System.String)">
            <summary>
                Get a pipeline.
            </summary>
            <param name="pipelineName">The pipeline name.</param>
            <returns>
                200 OK.
                An instance of <see cref="T:Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.PipelinesController.UpdatePipeline(Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline)">
            <summary>
                Updates a pipeline.
            </summary>
            <param name="obligationPipeline">The obligation pipeline.</param>
            <returns>
                201 Created.
                An instance of <see cref="T:Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.PipelinesController.CreatePipeline(Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline)">
            <summary>
                Create a pipeline.
            </summary>
            <param name="obligationPipeline">The obligation pipeline.</param>
            <returns>
                201 Created.
                An instance of <see cref="T:Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.PipelinesController.RenamePipeline(Turn10.LiveOps.StewardApi.Obligation.PatchOperation)">
            <summary>
                Renames a pipeline.
            </summary>
            <param name="patchOperation">The patch operation.</param>
            <returns>
                202 Accepted.
                An ID that can be used to track the request.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Controllers.SunriseController">
            <summary>
                Handles requests for Sunrise.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.#ctor(Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider,Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerInventoryProvider,Turn10.Data.SecretProvider.IKeyVaultProvider,Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftHistoryProvider,Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseBanHistoryProvider,Microsoft.Extensions.Configuration.IConfiguration,Turn10.LiveOps.StewardApi.Providers.IScheduler,Turn10.LiveOps.StewardApi.Providers.IJobTracker,Turn10.LiveOps.StewardApi.Validation.IRequestValidator{Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory},Turn10.LiveOps.StewardApi.Validation.IRequestValidator{Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGroupGift},Turn10.LiveOps.StewardApi.Validation.IRequestValidator{Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters})">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Controllers.SunriseController"/> class.
            </summary>
            <param name="sunrisePlayerInventoryProvider">The Sunrise player inventory provider.</param>
            <param name="sunrisePlayerDetailsProvider">The Sunrise player details provider.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
            <param name="giftHistoryProvider">The gift history provider.</param>
            <param name="banHistoryProvider">The ban history provider.</param>
            <param name="configuration">The configuration.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="jobTracker">The job tracker.</param>
            <param name="playerInventoryRequestValidator">The player inventory request validator.</param>
            <param name="groupGiftRequestValidator">The group gift request validator.</param>
            <param name="banParametersRequestValidator">The ban parameters request validator.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetPlayerDetails(System.String)">
            <summary>
                Gets the player details.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetPlayerDetails(System.UInt64)">
            <summary>
                Gets the player details.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetConsoles(System.UInt64,System.Int32)">
            <summary>
                Gets the console details.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="maxResults">A value that specifies how many consoles to return.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseConsoleDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetSharedConsoleUsers(System.UInt64,System.Int32,System.Int32)">
            <summary>
                Gets shared console users.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseSharedConsoleUser"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetUserFlags(System.UInt64)">
            <summary>
                Gets user flags.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.SetUserFlags(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags)">
            <summary>
                Sets user flags.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="userFlags">The user flags.</param>
            <returns>
                The updated <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetProfileSummary(System.UInt64)">
            <summary>
                Gets the profile summary.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetCreditUpdates(System.UInt64,System.Int32,System.Int32)">
            <summary>
                Gets credit updates.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCreditUpdate"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.BanPlayers(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters,System.Boolean,System.String)">
            <summary>
                Bans players.
            </summary>
            <param name="banParameters">The ban parameters.</param>
            <param name="useBackgroundProcessing">A value that indicates whether to use background processing.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanResult"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetBanSummaries(System.Collections.Generic.IList{System.UInt64})">
            <summary>
                Gets ban summaries.
            </summary>
            <param name="xuids">The xuids.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanSummary"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetBanHistory(System.UInt64)">
            <summary>
                Gets ban history.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanHistory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetBanHistory(System.String)">
            <summary>
                Gets ban history.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanHistory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.SetConsoleBanStatus(System.UInt64,System.Boolean)">
            <summary>
                Sets consoles ban status.
            </summary>
            <param name="consoleId">The console ID.</param>
            <param name="isBanned">A value indicating whether the console is banned.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetPlayerInventory(System.UInt64)">
            <summary>
                Gets the player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetPlayerInventoryProfiles(System.UInt64)">
            <summary>
                Gets the player inventory profiles.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryProfile"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetPlayerInventoryByProfileId(System.Int32)">
            <summary>
                Gets the player inventory.
            </summary>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetGroups(System.Int32,System.Int32)">
            <summary>
                Get groups.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseLspGroup"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.UpdatePlayerInventory(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,System.Boolean,System.String)">
            <summary>
                Updates the player inventory.
            </summary>
            <param name="playerInventory">The player inventory.</param>
            <param name="useBackgroundProcessing">Indicates whether to use background processing.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.UpdateGroupInventories(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGroupGift,System.Boolean,System.String)">
            <summary>
                Update group inventories.
            </summary>
            <param name="groupGift">The group gift.</param>
            <param name="useBackgroundProcessing">Indicates whether to use background processing.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.UpdateGroupInventoriesByGamertags(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGroupGift,System.Boolean,System.String)">
            <summary>
                Update group inventories.
            </summary>
            <param name="groupGift">The group gift.</param>
            <param name="useBackgroundProcessing">Indicates whether to use background processing.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.UpdateGroupInventories(System.Int32,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,System.String,System.String)">
            <summary>
                Update group inventories.
            </summary>
            <param name="groupId">The group ID.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="adminAuth">The admin auth.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Controllers.SunriseController.GetGiftHistoriesAsync(Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent,System.String)">
            <summary>
                Gets the gift histories.
            </summary>
            <param name="giftHistoryAntecedent">The gift history antecedent.</param>
            <param name="giftRecipientId">The gift recipient ID.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGiftHistory"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Filters.AuthorizationHeaderParameterOperationFilter">
            <summary>
                Represents an authorization header parameter operation filter.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Filters.AuthorizationHeaderParameterOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
                Apply the operation.
            </summary>
            <param name="operation">The operation.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Filters.SessionIdHeaderParameterOperationFilter">
            <summary>
                Represents a session ID header parameter operation filter.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Filters.SessionIdHeaderParameterOperationFilter.SessionIdHeaderName">
            <summary>
                The session ID header name.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Filters.SessionIdHeaderParameterOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
                Apply the operation.
            </summary>
            <param name="operation">The operation.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Middleware.JournalMiddleware">
            <summary>
                Represents a journal middleware.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Middleware.JournalMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Turn10.Data.Kusto.IKustoStreamingLogger,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Middleware.JournalMiddleware"/> class.
            </summary>
            <param name="requestDelegate">The request delegate.</param>
            <param name="kustoStreamingLogger">The Kusto streaming logger.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Middleware.JournalMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                Invoke the middleware.
            </summary>
            <param name="context">The context.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Middleware.JournalMiddleware.HandleRequest(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <summary>
                Handles a request.
            </summary>
            <param name="context">The context.</param>
            <param name="requestBody">The request body.</param>
            <param name="responseBody">The response body.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Models.LiveOpsUser">
            <summary>
                Represents a Live Ops user.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Models.LiveOpsUser.EmailAddress">
            <summary>
                Gets or sets the email address.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Models.LiveOpsUser.Role">
            <summary>
                Gets or sets the role.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Models.TestResponse">
            <summary>
                A test response.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Models.TestResponse.Result">
            <summary>
                Gets or sets a value indicating whether the request was successful.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.Clusters">
            <summary>
                The clusters.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.ConfigQualifier">
            <summary>
            This class contains information about the tenant and cluster of a pipeline.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ConfigQualifier.Tenant">
            <summary>
                Gets or sets the tenant.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ConfigQualifier.Cluster">
            <summary>
                Gets or sets the cluster.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ConfigQualifier.Attitude">
            <summary>
                Gets or sets the attitude.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.Dependency">
            <summary>
                A dependency represents a relationship between two data activities.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.Dependency.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Obligation.Dependency"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.Dependency.Type">
            <summary>
                Gets or sets the type.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.Dependency.DataActivityDependencyName">
            <summary>
                Gets or sets the data activity dependency name.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.IObligationAuthoringClient">
            <summary>
                Represents a client capable of interacting with the Obligation authoring APIs.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.IObligationAuthoringClient.SafeUpdatePipelineAsync(Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline)">
            <summary>
                Given a pipeline, check that the pipeline exists and that all existing data activities are
                represented in the given pipeline. If those checks are passed, then update the pipeline.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <returns>A GUID to track the operation.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.IObligationAuthoringClient.UpsertPipelineAsync(Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline)">
            <summary>
                Given a pipeline, upserts the pipeline regardless of safety checks.
                This needs to be used to create a pipeline or remove a data activity from a pipeline.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <returns>A GUID to track the operation.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.IObligationAuthoringClient.DeletePipelineAsync(System.String)">
            <summary>
                Deletes a pipeline.
            </summary>
            <param name="pipelineName">The pipeline name.</param>
            <returns>A GUID to track the operation.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.IObligationAuthoringClient.GetPipelineAsync(System.String)">
            <summary>
                Gets a pipeline.
            </summary>
            <param name="pipelineName">The pipeline name.</param>
            <returns>A GUID to track the operation.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.IObligationAuthoringClient.RenamePipelineAsync(Turn10.LiveOps.StewardApi.Obligation.PatchOperation)">
            <summary>
                Renames a pipeline.
            </summary>
            <param name="patchOperation">The patch operation.</param>
            <returns>A GUID to track the operation.</returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.IObligationProvider">
            <summary>
                Provides methods for interacting with Obligation.
            </summary>
            <remarks>
                In theory, this code could be rolled up into the client however, I am intentionally trying not to have the client
                code deviate from what is in the 343 repository at this time. Were it not for the Framework v CORE issues, I would
                prefer to just consume their library. There is a plan to eventually get their build to output a CORE lib but that
                is not near the top of their priorities at this point. (emersonf 2020-11-09).
            </remarks>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.IObligationProvider.SafeUpdatePipelineAsync(Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline)">
            <summary>
                Given a pipeline, check that the pipeline exists and that all existing data activities are
                represented in the given pipeline. If those checks are passed, then update the pipeline.
            </summary>
            <param name="obligationPipeline">The obligation pipeline.</param>
            <returns>A GUID to track the operation.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.IObligationProvider.UpsertPipelineAsync(Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline)">
            <summary>
                Given a pipeline, upserts the pipeline regardless of safety checks.
                This needs to be used to create a pipeline or remove a data activity from a pipeline.
            </summary>
            <param name="obligationPipeline">The obligation pipeline.</param>
            <returns>A GUID to track the operation.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.IObligationProvider.DeletePipelineAsync(System.String)">
            <summary>
                Deletes a pipeline.
            </summary>
            <param name="pipelineName">The pipeline name.</param>
            <returns>A GUID to track the operation.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.IObligationProvider.GetPipelineAsync(System.String)">
            <summary>
                Gets a pipeline.
            </summary>
            <param name="pipelineName">The pipeline name.</param>
            <returns>A GUID to track the operation.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.IObligationProvider.RenamePipelineAsync(Turn10.LiveOps.StewardApi.Obligation.PatchOperation)">
            <summary>
                Renames a pipeline.
            </summary>
            <param name="patchOperation">The patch operation.</param>
            <returns>A GUID to track the operation.</returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity">
            <summary>
                Represents a Kusto data activity.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.type">
            <remarks>
                Not sure what this is for but it's on the model that this code is c/p from.
            </remarks>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.attemptMidPartitionSyncSwap">
            <remarks>
                Not sure what this is for but it's on the model that this code is c/p from.
            </remarks>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.restatementSpan">
            <remarks>
                Not sure what this is for but it's on the model that this code is c/p from.
            </remarks>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity"/> class.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <remarks>
                The name must be unique per pipeline.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.MinExecutionSpan">
             <summary>
                 Gets or sets the min execution span.
             </summary>
             <remarks>
                 The shortest timespan the system should execute of this activity.
            
                 Note that this is a suggestion, not a guarantee. Obligation allows some pretty arbitrary manipulation
                 of DataActivities, and this is the parameter that gets sacrificed to allow that.
             </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.MaxExecutionSpan">
            <summary>
                Gets or sets the max execution span.
            </summary>
            <remarks>
                The longest timespan the system should execute of this activity.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.ExecutionInterval">
            <summary>
                Gets or sets the execution interval.
            </summary>
            <remarks>
                Forces all execution to be a multiple of this. Typically, this is left as null (or TimeSpan.Zero). If this
                parameter is used, the minimum execution time is actually enforced, and all other time parameters must be a
                multiple of this. When this is used, it is typically for DataActivities that require hourly or daily execution.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.Delay">
            <summary>
                Gets or sets the delay.
            </summary>
            <remarks>
                No chunk of time will execute until the end time of that chunk is at least this distant from now. Typically,
                this is set to an hour to allow slow raw events to trickle into the system.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.TimeRange">
            <summary>
                Gets or sets the time range.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.NumBucketsPreSplitHint">
            <summary>
                Gets or sets the num buckets pre-split hint.
            </summary>
            <remarks>
                Upon creating a slice by splitting on time (ie normal execution) that the slice is also additionally
                split into this many buckets. This is a hint, as it does not always apply, particularly in mid
                partition sync swap scenarios or scale exception splits.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.OffHoursOnly">
            <summary>
                Gets or sets a value indicating whether to run in off hours only.
            </summary>
            <remarks>
                This flag can be optionally set to indicate that the DataActivity should only be run on off hours.
                This is intended to be combined with the cluster config to determine what the off hours actually are.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.KustoDatabase">
            <summary>
                Gets or sets the Kusto database.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.KustoTable">
            <summary>
                Gets or sets the Kusto table.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.KustoQuery">
             <summary>
                 Gets or sets the Kusto query.
             </summary>
             <remarks>
                 The kusto query whose results are to be appended to the given table. Typically this is a
                 relatively simply function call with the start and end parameters. For example:
                 FactPlayerMatch_Materialize('{StartDate:o}', '{EndDate:o}')
            
                 StartDate, EndDate, NumBuckets, Bucket and TargetTable are interpolated here (when surrounded by {}) based
                 on dataActivity start, end, and kusto table.
             </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.InitializationQuery">
             <summary>
                 Gets or sets the initialization query.
             </summary>
             <remarks>
                 Runs once when the dataActivity is created. An opportunity for initialization queries/commands.
                 Typically this might be to create the dataActivity table, like this:
                 .set-or-append FactPlayerMatch_Materialized &lt;| FactPlayerMatch_Calculate(now(), now())
            
                 StartDate, EndDate, NumBuckets, Bucket, and TargetTable are interpolated here (when surrounded by {}) based
                 on dataActivity start, end, and kusto table.
             </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.RefuseToAlter">
            <summary>
                Gets or sets a value indicating whether to refuse to alter.
            </summary>
            <remarks>
                Gives DataActivities the ability to opt out of the automatic table alterations.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.Dependencies">
            <summary>
                Gets or sets the dependencies.
            </summary>
            <remarks>
                What DataActivities does this depend on (keyed by name, and must be in the same Pipeline).
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity.ParallelismLimitTags">
            <summary>
                Gets or sets the parallelism limit tags.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivityExtensions">
            <summary>
                Provides common Kusto data activity usages.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivityExtensions.AddParallelismLimit(Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity,System.Int32,System.String,System.String)">
            <summary>
                Adds a parallelism limit.
            </summary>
            <param name="activity">The activity.</param>
            <param name="count">The count.</param>
            <param name="tenant">The tenant.</param>
            <param name="pipelineName">The pipeline name.</param>
            <returns>The <see cref="T:Turn10.LiveOps.StewardApi.Obligation.KustoDataActivity"/>.</returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.KustoFunction">
            <summary>
                Represents a Kusto function.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoFunction.Name">
            <summary>
                Gets or sets name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoFunction.UseSplitting">
            <summary>
                Gets or sets a value indicating whether to use splitting.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoFunction.UseEndDate">
            <summary>
                Gets or sets a value indicating whether to use an end date on the function.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.KustoFunction.NumberOfBuckets">
            <summary>
                Gets or sets the number of buckets to suggest to Obligation.
            </summary>
            <remarks>
                Not required, leaving it null will allow Obligation to figure it out for
                itself. Even if a value is supplied, this Obligation may choose to ignore it.
            </remarks>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.ObligationAuthoringClient">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationAuthoringClient.#ctor(Turn10.Data.SecretProvider.IKeyVaultProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Obligation.ObligationAuthoringClient"/> class.
            </summary>
            <param name="keyVaultProvider">The key vault provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationAuthoringClient.SafeUpdatePipelineAsync(Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationAuthoringClient.RenamePipelineAsync(Turn10.LiveOps.StewardApi.Obligation.PatchOperation)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationAuthoringClient.UpsertPipelineAsync(Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationAuthoringClient.DeletePipelineAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationAuthoringClient.GetPipelineAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity">
            <summary>
                Represents an obligation data activity.
            </summary>
            <remarks>
                For now, this is very specific to Kusto. Will adjust if/when we decide to leverage Obligation
                for activities that do not involve Kusto.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.ActivityName">
            <summary>
                Gets or sets the name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.KustoTableName">
            <summary>
                Gets or sets the Kusto table name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.KustoFunctionName">
            <summary>
                Gets or sets the Kusto function name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.DestinationDatabase">
            <summary>
                Gets or sets the destination database.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.StartDateUtc">
            <summary>
                Gets or sets the start date.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.EndDateUtc">
            <summary>
                Gets or sets the end date.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.MaxExecutionSpan">
            <summary>
                Gets or sets the maximum slice interval that can used.
            </summary>
            <remarks>
                This is useful when restating data to allow Obligation to grab larger than normal slices
                which will reduce the amount of time required to restate the data.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.ExecutionInterval">
            <summary>
                Gets or sets the execution interval.
            </summary>
            <remarks>
                This is how often the activity should be run. As an example, an activity that is meant to
                output something at a daily grain should have this set to 1 day.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.ExecutionDelay">
            <summary>
                Gets or sets the processing delay.
            </summary>
            <remarks>
                This value will control how delayed the data is. If there is an expectation that data may be
                delayed at the source, this value should be used to ensure that the activity doesn't execute
                until that expected time has elapsed.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.DataActivityDependencyNames">
            <summary>
                Gets or sets the data activity dependency names.
            </summary>
            <remarks>
                This should be a list of pipeline names that are known by Obligation. Adding an activity that is
                not created as part of the request or does not exist will cause the request to fail.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationDataActivity.ParallelismLimit">
            <summary>
                Gets or sets the parallelism limit.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline">
            <summary>
                A pipeline is a collection of data activities with some descriptive metadata.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <remarks>
                This is the ID/PrimaryKey of the pipeline. It must be unique per system deployment.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline.ConfigContext">
            <summary>
                Gets or sets the config context.
            </summary>
            <remarks>
                Information about the tenant and cluster of the pipeline.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline.Description">
            <summary>
                Gets or sets the description.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline.Principals">
            <summary>
                Gets or sets the principals.
            </summary>
            <remarks>
                A list of principals representing permissions to view or edit this pipeline.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline.DataActivities">
            <summary>
                Gets or sets the data activities.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationPipeline.Etag">
            <summary>
                Gets or sets the etag.
            </summary>
            <remarks>
                Row version of the entity. Used to manage concurrency.
            </remarks>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.ObligationPrincipal">
            <summary>
                An obligation principal represents an individual or a group associated with a type of permission.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationPrincipal.#ctor(System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Obligation.ObligationPrincipal"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="role">The role.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationPrincipal.Type">
            <summary>
                Gets or sets the type.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationPrincipal.Role">
            <summary>
                Gets or sets the role.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationPrincipal.Value">
            <summary>
                Gets or sets the value.
            </summary>
            <remarks>
                For user roles, use the user's email address.
                For group roles, use the AAD object ID of the group.
            </remarks>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.ObligationProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationProvider.#ctor(Turn10.LiveOps.StewardApi.Obligation.IObligationAuthoringClient)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Obligation.ObligationProvider"/> class.
            </summary>
            <param name="obligationAuthoringClient">The obligation authoring client.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationProvider.SafeUpdatePipelineAsync(Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationProvider.UpsertPipelineAsync(Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationProvider.DeletePipelineAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationProvider.GetPipelineAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationProvider.RenamePipelineAsync(Turn10.LiveOps.StewardApi.Obligation.PatchOperation)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.ObligationTimeSpan">
            <summary>
                Simplifies the JSON object used to create a time span.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationTimeSpan.#ctor(System.TimeSpan)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Obligation.ObligationTimeSpan"/> class.
            </summary>
            <param name="timeSpan">The time span.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationTimeSpan.Days">
            <summary>
                Gets or sets the days.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationTimeSpan.Hours">
            <summary>
                Gets or sets the hours.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ObligationTimeSpan.Minutes">
            <summary>
                Gets or sets the minutes.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.ObligationTimeSpan.ToTimeSpan">
            <summary>
                Outputs a time span.
            </summary>
            <returns>A <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.Operation">
            <summary>
                Represents operations that can be submitted as part of a PATCH request.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Obligation.Operation.Rename">
            <summary>
                Specifies a rename operation.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.ParallelismLimit">
             <summary>
                 Allows user defined parallelism limits.
            
                 Any other units of work sharing that tag that are in progress will count against the given limit.
            
                 Parallelism limits are calculated based on your limit.
                 So, you could have two data activities that you wanted to limit like this:
                     data activity a -> { tag: 'hello', limit: 1 }
                     data activity b -> { tag: 'hello', limit: 2 }
                 This is fine, and means that only one 'a' will run, but b might have two running, xor one 'a' and one 'b'.
            
                 Parallelism limits are calculated by tenant.
             </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ParallelismLimit.Tag">
            <summary>
                Gets or sets the tag.
            </summary>
            <remarks>
                A tag representing a group of data activities with a shared parallelism limit.
            </remarks>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.ParallelismLimit.Limit">
            <summary>
                Gets or sets the tag.
            </summary>
            <remarks>
                The maximum number of slices that can be run at a time for a given tag.
            </remarks>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.PatchOperation">
            <summary>
                Represents information required for a PATCH operation.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.PatchOperation.Operation">
            <summary>
                Gets or sets the operation.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.PatchOperation.Path">
            <summary>
                Gets or sets the path.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.PatchOperation.Value">
            <summary>
                Gets or sets the value.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.PipelineAuthoringModel">
            <summary>
                Represents a pipeline authoring model.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.PipelineAuthoringModel.Etag">
            <summary>
                Gets or sets the etag.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.PipelineAuthoringModel.Pipeline">
            <summary>
                Gets or sets the pipeline.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.PrincipalTypes">
            <summary>
                Valid principal types.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Obligation.PrincipalTypes.User">
            <summary>
                A user principle is a single AAD user.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Obligation.PrincipalTypes.Group">
            <summary>
                A group principal includes all transitive members of an AAD group.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.RenamePipelineRequest">
            <summary>
                A request body to completely rename a pipeline.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.RenamePipelineRequest.OldPipelineName">
            <summary>
                Gets or sets the old pipeline name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.RenamePipelineRequest.NewPipelineName">
            <summary>
                Gets or sets the new pipeline name.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.Roles">
            <summary>
                Pipeline roles.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Obligation.Roles.Reader">
            <summary>
                Principals with the reader role may view resources but not edit them.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Obligation.Roles.Admin">
            <summary>
                Principals with the admin role may view and edit resources.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline">
            <summary>
                Represents the information required to create an Obligation pipeline.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline.PipelineName">
            <summary>
                Gets or sets the pipeline name.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline.PipelineDescription">
            <summary>
                Gets or sets pipeline description.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline.ObligationPipelines">
            <summary>
                Gets or sets the obligation pipelines.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.SimplifiedObligationPipeline.Principals">
            <summary>
                Gets or sets principals.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.Tenants">
            <summary>
                The known tenants.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Obligation.TimeRange">
            <summary>
                Represents the space between a start and end date.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Obligation.TimeRange.#ctor(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Obligation.TimeRange"/> struct.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.TimeRange.Start">
            <summary>
                Gets or sets the start.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Obligation.TimeRange.End">
            <summary>
                Gets or sets the end.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.ProfileMappers.ApolloProfileMapper">
            <summary>
               Mapper for Apollo DTOs.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.ProfileMappers.ApolloProfileMapper.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.ProfileMappers.ApolloProfileMapper"/> class.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.ProfileMappers.GravityProfileMapper">
            <summary>
                 Mapper for Gravity DTOs.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.ProfileMappers.GravityProfileMapper.#ctor">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.ProfileMappers.GravityProfileMapper"/> class.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.ProfileMappers.OpusProfileMapper">
            <summary>
                 Mapper for Opus DTO's.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.ProfileMappers.OpusProfileMapper.#ctor">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.ProfileMappers.OpusProfileMapper"/> class.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.ProfileMappers.SunriseProfileMapper">
            <summary>
                Mapper for Sunrise DTO's.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.ProfileMappers.SunriseProfileMapper.#ctor">
            <summary>
                  Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.ProfileMappers.SunriseProfileMapper"/> class.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Program">
            <summary>
                Primary entry point for application.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Program.Main(System.String[])">
            <summary>
                The required main method.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Program.CreateHostBuilder(System.String[])">
            <summary>
                Creates an instance of <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/>.
            </summary>
            <param name="arguments">The arguments.</param>
            <returns>A new instance of <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/>.</returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloBanHistoryProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloBanHistoryProvider.#ctor(Turn10.Data.Kusto.IKustoStreamingLogger,Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloBanHistoryProvider"/> class.
            </summary>
            <param name="kustoStreamingLogger">The Kusto streaming logger.</param>
            <param name="kustoProvider">The Kusto provider.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloBanHistoryProvider.UpdateBanHistoryAsync(System.UInt64,System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloBanHistoryProvider.GetBanHistoriesAsync(System.UInt64,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftHistoryProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftHistoryProvider.#ctor(Turn10.Data.Kusto.IKustoStreamingLogger,Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider,Microsoft.Extensions.Configuration.IConfiguration,AutoMapper.IMapper)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftHistoryProvider"/> class.
            </summary>
            <param name="kustoStreamingLogger">The Kusto streaming logger.</param>
            <param name="kustoProvider">The Kusto provider.</param>
            <param name="configuration">The configuration.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftHistoryProvider.UpdateGiftHistoryAsync(System.String,System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftHistoryProvider.GetGiftHistoriesAsync(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftingServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftingServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftingServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftingServiceWrapper.AdminGetSupportedGiftTypesAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftingServiceWrapper.AdminSendItemGiftAsync(System.UInt64,Forza.UserInventory.FM7.Generated.InventoryItemType,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftingServiceWrapper.AdminSendItemGroupGiftAsync(System.Int32,Forza.UserInventory.FM7.Generated.InventoryItemType,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftingServiceWrapper.GetGiftsForUserAsync(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftingServiceWrapper.MarkVanityItemGiftRetrievedAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftingServiceWrapper.RetrieveCarGiftAsync(System.Int32,System.UInt32,System.UInt32,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGiftingServiceWrapper.RetrieveCreditsGiftAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.AcceptClubInvitesAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.AddToUserGroupsAsync(System.UInt64,System.Int32[])">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.GetUserDataAsync">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.GetUserDatasAsync(System.UInt64[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.GetUserGroupMembershipsAsync(System.UInt64,System.Int32[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.GetUserGroupsAsync(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.RemoveFromUserGroupsAsync(System.UInt64,System.Int32[])">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.ReportPiracyCheckStateAsync(Xls.FM7.Generated.PiracyCheckState)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.ReportPiracyCheckStateExAsync(Xls.FM7.Generated.PiracyCheckState,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloGroupingServiceWrapper.SetFriendsAsync(System.UInt64[])">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.#ctor(Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService,Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService,AutoMapper.IMapper,Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloBanHistoryProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider"/> class.
            </summary>
            <param name="apolloUserService">The Apollo user service.</param>
            <param name="apolloGroupingService">The Apollo grouping service.</param>
            <param name="mapper">The mapper.</param>
            <param name="banHistoryProvider">The ban history provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.GetPlayerDetailsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.GetPlayerDetailsAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.EnsurePlayerExistsAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.EnsurePlayerExistsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.BanUsersAsync(System.Collections.Generic.IList{Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.GetUserBanHistoryAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.GetUserBanSummariesAsync(System.Collections.Generic.IList{System.UInt64})">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.GetConsolesAsync(System.UInt64,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.SetConsoleBanStatusAsync(System.UInt64,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.GetSharedConsoleUsersAsync(System.UInt64,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.GetLspGroupsAsync(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.GetUserFlagsAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerDetailsProvider.SetUserFlagsAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerInventoryProvider">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerInventoryProvider.#ctor(Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserInventoryService,Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftingService,Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService,Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftHistoryProvider,AutoMapper.IMapper)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerInventoryProvider"/> class.
            </summary>
            <param name="apolloUserInventoryService">The Apollo user inventory service.</param>
            <param name="apolloGiftingService">The Apollo gifting service.</param>
            <param name="apolloUserService">The Apollo user service.</param>
            <param name="giftHistoryProvider">The gift history provider.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerInventoryProvider.GetPlayerInventoryAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerInventoryProvider.GetInventoryProfilesAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerInventoryProvider.GetPlayerInventoryAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerInventoryProvider.UpdatePlayerInventoryAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerInventoryProvider.UpdatePlayerInventoriesAsync(System.Collections.Generic.IList{System.UInt64},Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerInventoryProvider.UpdatePlayerInventoriesAsync(System.Collections.Generic.IList{System.String},Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloPlayerInventoryProvider.UpdateGroupInventoriesAsync(System.Int32,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserInventoryServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserInventoryServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider)">
            <summary>
                  Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserInventoryServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserInventoryServiceWrapper.GetAdminUserInventoryAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserInventoryServiceWrapper.GetAdminUserInventoryByProfileIdAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserInventoryServiceWrapper.GetAdminUserProfilesAsync(System.UInt64,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserInventoryServiceWrapper.SyncUserInventoryAsync(Forza.WebServices.FM7.Generated.ForzaUserInventorySummary)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.LiveOpsGetUserDataByGamertagAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.LiveOpsGetUserDataByXuidAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.BanUsersAsync(Forza.WebServices.FM7.Generated.ForzaUserBanParameters[])">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.GetUserBanHistoryAsync(System.UInt64,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.GetUserBanSummariesAsync(System.UInt64[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.GetConsolesAsync(System.UInt64,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.SetConsoleBanStatusAsync(System.UInt64,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.GetSharedConsoleUsersAsync(System.UInt64,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.GetIsUnderReviewAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.ApolloUserServiceWrapper.SetIsUnderReviewAsync(System.UInt64,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloBanHistoryProvider">
            <summary>
                Exposes methods for interacting with the Apollo ban history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloBanHistoryProvider.UpdateBanHistoryAsync(System.UInt64,System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters)">
            <summary>
                Updates ban history.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="title">The title.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="banParameters">The ban parameters.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloBanHistoryProvider.GetBanHistoriesAsync(System.UInt64,System.String)">
            <summary>
                Gets ban histories.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="title">The title.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftHistoryProvider">
            <summary>
                Exposes methods for interacting with the Apollo gift history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftHistoryProvider.UpdateGiftHistoryAsync(System.String,System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory)">
            <summary>
                Updates gift history.
            </summary>
            <param name="id">The ID.</param>
            <param name="title">The title.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="giftHistoryAntecedent">The gift history antecedent.</param>
            <param name="playerInventory">The player inventory.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftHistoryProvider.GetGiftHistoriesAsync(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent)">
            <summary>
                Gets gift histories.
            </summary>
            <param name="id">The ID.</param>
            <param name="title">The title.</param>
            <param name="giftHistoryAntecedent">The gift history antecedent.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftingService">
            <summary>
                 Exposes methods for interacting with the Apollo Gifting Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftingService.AdminGetSupportedGiftTypesAsync(System.Int32)">
            <summary>
                Gets supported gift types.
            </summary>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.GiftingService.AdminGetSupportedGiftTypesOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftingService.AdminSendItemGiftAsync(System.UInt64,Forza.UserInventory.FM7.Generated.InventoryItemType,System.Int32)">
            <summary>
                Sends item gift.
            </summary>
            <param name="recipientXuid">The recipient xuid.</param>
            <param name="itemType">The item type.</param>
            <param name="itemValue">The item value.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftingService.AdminSendItemGroupGiftAsync(System.Int32,Forza.UserInventory.FM7.Generated.InventoryItemType,System.Int32)">
            <summary>
                Sends item group gifts.
            </summary>
            <param name="groupId">The group ID.</param>
            <param name="itemType">The item type.</param>
            <param name="itemValue">The item value.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftingService.GetGiftsForUserAsync(System.Int32,System.Int32)">
            <summary>
                Get gifts for user.
            </summary>
            <param name="startAt">The start at index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.GiftingService.GetGiftsForUserOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftingService.MarkVanityItemGiftRetrievedAsync(System.Int32)">
            <summary>
                Mark vanity item gift as retrieved.
            </summary>
            <param name="vanityItemGiftId">The vanity item gift id.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftingService.RetrieveCarGiftAsync(System.Int32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Retrieve car gift.
            </summary>
            <param name="giftId">The gift ID.</param>
            <param name="liveryDetailsBufferSize">The livery details buffer size.</param>
            <param name="partsInstalledBufferSize">The parts installed buffer size.</param>
            <param name="partsInTrunkBufferSize">The parts in trunk buffer size.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.GiftingService.RetrieveCarGiftOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGiftingService.RetrieveCreditsGiftAsync(System.Int32)">
            <summary>
                Retrieve credit gift.
            </summary>
            <param name="giftId">The gift ID.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.GiftingService.RetrieveCreditsGiftOutput"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService">
            <summary>
                 Exposes methods for interacting with the Apollo Grouping Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService.AcceptClubInvitesAsync(System.Boolean)">
            <summary>
                Accept club invites.
            </summary>
            <param name="acceptingClubInvites">A value that determines whether to accept club invites.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService.AddToUserGroupsAsync(System.UInt64,System.Int32[])">
            <summary>
                Add user to groups.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="groupIds">The group IDs.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService.GetUserDataAsync">
            <summary>
                Get user data.
            </summary>
            <returns>
                The <see cref="T:Xls.WebServices.FM7.Generated.UserService.GetUserDataOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService.GetUserDatasAsync(System.UInt64[],System.Int32)">
            <summary>
                Get user datas.
            </summary>
            <param name="xuids">The xuids.</param>
            <param name="numberOfUsers">The number of users.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FM7.Generated.UserService.GetUserDatasOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService.GetUserGroupMembershipsAsync(System.UInt64,System.Int32[],System.Int32)">
            <summary>
                Get user group membership.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="groupIdFilter">The group ID filter.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FM7.Generated.UserService.GetUserGroupMembershipsOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService.GetUserGroupsAsync(System.Int32,System.Int32)">
            <summary>
                Get user groups.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FM7.Generated.UserService.GetUserGroupsOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService.RemoveFromUserGroupsAsync(System.UInt64,System.Int32[])">
            <summary>
                Remove from user groups.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="groupIds">The group IDs.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService.ReportPiracyCheckStateAsync(Xls.FM7.Generated.PiracyCheckState)">
            <summary>
                Report piracy check state.
            </summary>
            <param name="piracyCheckState">The piracy check state.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService.ReportPiracyCheckStateExAsync(Xls.FM7.Generated.PiracyCheckState,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
                Report piracy check state.
            </summary>
            <param name="piracyCheckState">The piracy check state.</param>
            <param name="dwFailedReads">The failed reads.</param>
            <param name="dwFailedHashes">The failed hashes.</param>
            <param name="dwBlocksChecked">The blocks checked.</param>
            <param name="dwTotalBlocks">The total blocks.</param>
            <param name="fComplete">The complete.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FM7.Generated.UserService.ReportPiracyCheckStateExOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloGroupingService.SetFriendsAsync(System.UInt64[])">
            <summary>
                Set friends.
            </summary>
            <param name="friendXuids">The friend xuids.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider">
            <summary>
                 Exposes methods for interacting with the Apollo player details.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.GetPlayerDetailsAsync(System.String)">
            <summary>
                Get player details.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.GetPlayerDetailsAsync(System.UInt64)">
            <summary>
                Get player details.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.EnsurePlayerExistsAsync(System.UInt64)">
            <summary>
                Ensure player exists.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                A value indicating if the player exists.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.EnsurePlayerExistsAsync(System.String)">
            <summary>
                Ensure player exists.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                A value indicating if the player exists.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.BanUsersAsync(System.Collections.Generic.IList{Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters},System.String)">
            <summary>
                Ban users.
            </summary>
            <param name="banParameters">The ban parameters.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanResult"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.GetUserBanHistoryAsync(System.UInt64)">
            <summary>
                Get user ban history.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanDescription"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.GetUserBanSummariesAsync(System.Collections.Generic.IList{System.UInt64})">
            <summary>
                Get user ban summaries.
            </summary>
            <param name="xuids">The xuids.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanSummary"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.GetConsolesAsync(System.UInt64,System.Int32)">
            <summary>
                Get consoles.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloConsoleDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.SetConsoleBanStatusAsync(System.UInt64,System.Boolean)">
            <summary>
                Set console ban status.
            </summary>
            <param name="consoleId">The console ID.</param>
            <param name="isBanned">A value that indicates whether the console is banned.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.GetSharedConsoleUsersAsync(System.UInt64,System.Int32,System.Int32)">
            <summary>
                Get shared console users.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloSharedConsoleUser"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.GetLspGroupsAsync(System.Int32,System.Int32)">
            <summary>
                Get LSP groups.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloLspGroup"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.GetUserFlagsAsync(System.UInt64)">
            <summary>
                Get user flags.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerDetailsProvider.SetUserFlagsAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloUserFlags)">
            <summary>
                Set user flags.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="userFlags">The user flags.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerInventoryProvider">
            <summary>
                 Exposes methods for interacting with the Apollo player inventory.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerInventoryProvider.GetPlayerInventoryAsync(System.UInt64)">
            <summary>
                Get player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerInventoryProvider.GetInventoryProfilesAsync(System.UInt64)">
            <summary>
                Get player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                A list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloInventoryProfile"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerInventoryProvider.GetPlayerInventoryAsync(System.Int32)">
            <summary>
                Get player inventory.
            </summary>
            <param name="profileId">The Profile ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerInventoryProvider.UpdatePlayerInventoryAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,System.String)">
            <summary>
                Update player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerInventoryProvider.UpdatePlayerInventoriesAsync(System.Collections.Generic.IList{System.UInt64},Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,System.String)">
            <summary>
                Update player inventories.
            </summary>
            <param name="xuids">The xuids.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerInventoryProvider.UpdatePlayerInventoriesAsync(System.Collections.Generic.IList{System.String},Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,System.String)">
            <summary>
                Update player inventories.
            </summary>
            <param name="gamertags">The gamertags.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloPlayerInventoryProvider.UpdateGroupInventoriesAsync(System.Int32,Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,System.String)">
            <summary>
                Update group inventories.
            </summary>
            <param name="groupId">The group ID.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserInventoryService">
            <summary>
                 Exposes methods for interacting with the Apollo User Inventory Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserInventoryService.GetAdminUserInventoryAsync(System.UInt64)">
            <summary>
                Gets user inventory using admin endpoint.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserInventoryService.GetAdminUserInventoryOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserInventoryService.GetAdminUserInventoryByProfileIdAsync(System.Int32)">
            <summary>
                 Gets user inventory by profile ID using admin endpoint.
            </summary>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserInventoryService.GetAdminUserInventoryByProfileIdOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserInventoryService.GetAdminUserProfilesAsync(System.UInt64,System.UInt32)">
            <summary>
                 Gets user profiles using admin endpoint.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="maxProfiles">The max profiles.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserInventoryService.GetAdminUserProfilesOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserInventoryService.SyncUserInventoryAsync(Forza.WebServices.FM7.Generated.ForzaUserInventorySummary)">
            <summary>
                 Synchronizes the user inventory.
            </summary>
            <param name="clientInventory">The clientInventory.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserInventoryService.SyncUserInventoryOutput"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService">
            <summary>
                 Exposes methods for interacting with the Apollo User Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.LiveOpsGetUserDataByGamertagAsync(System.String)">
            <summary>
                 Gets user data by gamertag.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserService.LiveOpsGetUserDataByGamertagOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.LiveOpsGetUserDataByXuidAsync(System.UInt64)">
            <summary>
                 Gets user data by xuid.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserService.LiveOpsGetUserDataByXuidOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.BanUsersAsync(Forza.WebServices.FM7.Generated.ForzaUserBanParameters[])">
            <summary>
                Ban users.
            </summary>
            <param name="banParameters">The ban parameters.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserService.BanUsersOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.GetUserBanHistoryAsync(System.UInt64,System.Int32,System.Int32)">
            <summary>
                Get user ban history.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserService.GetUserBanSummariesOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.GetUserBanSummariesAsync(System.UInt64[],System.Int32)">
            <summary>
                Get user ban summaries.
            </summary>
            <param name="xuids">The xuids.</param>
            <param name="xuidCount">The xuid count.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserService.GetUserBanSummariesOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.GetConsolesAsync(System.UInt64,System.Int32)">
            <summary>
                Get consoles.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserService.GetConsolesOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.SetConsoleBanStatusAsync(System.UInt64,System.Boolean)">
            <summary>
                Set console ban status.
            </summary>
            <param name="consoleId">The console ID.</param>
            <param name="isBanned">A value that indicates whether the console is banned.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.GetSharedConsoleUsersAsync(System.UInt64,System.Int32,System.Int32)">
            <summary>
                Get shared console users.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.GetSharedConsoleUsersAsync(System.UInt64,System.Int32,System.Int32)"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.GetIsUnderReviewAsync(System.UInt64)">
            <summary>
                Get the under review flag.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FM7.Generated.UserService.GetIsUnderReviewOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Apollo.IApolloUserService.SetIsUnderReviewAsync(System.UInt64,System.Boolean)">
            <summary>
                Set is under review flag.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="isUnderReview">A value that indicates whether a user is under review.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.ForzaClientException">
            <summary>
                Represents a Forza client exception.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.ForzaClientException.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.ForzaClientException"/> class.
            </summary>
            <param name="resultCode">The result code.</param>
            <param name="errorCode">The error code.</param>
            <param name="responseBody">The response body.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.ForzaClientException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.ForzaClientException"/> class.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.ForzaClientException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.ForzaClientException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.ForzaClientException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.ForzaClientException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Providers.ForzaClientException.ResultCode">
            <summary>
                Gets the result code.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Providers.ForzaClientException.ErrorCode">
            <summary>
                Gets the error code.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Providers.ForzaClientException.ResponseBody">
            <summary>
                Gets or sets the response body.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityGiftHistoryProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityGiftHistoryProvider.#ctor(Turn10.Data.Kusto.IKustoStreamingLogger,Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider,Microsoft.Extensions.Configuration.IConfiguration,AutoMapper.IMapper)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityGiftHistoryProvider"/> class.
            </summary>
            <param name="kustoStreamingLogger">The Kusto streaming logger.</param>
            <param name="kustoProvider">The Kusto provider.</param>
            <param name="configuration">The configuration.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityGiftHistoryProvider.UpdateGiftHistoryAsync(System.String,System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityGiftHistoryProvider.GetGiftHistoriesAsync(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerDetailsProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerDetailsProvider.#ctor(Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserService,AutoMapper.IMapper)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerDetailsProvider"/> class.
            </summary>
            <param name="gravityUserService">The Gravity user service.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerDetailsProvider.GetPlayerDetailsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerDetailsProvider.GetPlayerDetailsAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerDetailsProvider.GetPlayerDetailsByT10IdAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerDetailsProvider.EnsurePlayerExistsAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerDetailsProvider.EnsurePlayerExistsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerDetailsProvider.EnsurePlayerExistsByT10IdAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.#ctor(Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserService,Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserInventoryService,AutoMapper.IMapper,Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityGiftHistoryProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider"/> class.
            </summary>
            <param name="gravityUserService">The Gravity user service.</param>
            <param name="gravityUserInventoryService">The Gravity user inventory service.</param>
            <param name="mapper">The mapper.</param>
            <param name="giftHistoryProvider">The gift history provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.GetPlayerInventoryAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.GetPlayerInventoryAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.GetPlayerInventoryAsync(System.UInt64,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.GetPlayerInventoryAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.CreateOrReplacePlayerInventoryAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.CreateOrReplacePlayerInventoryAsync(System.String,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.UpdatePlayerInventoryAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.UpdatePlayerInventoryAsync(System.String,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.DeletePlayerInventoryAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityPlayerInventoryProvider.DeletePlayerInventoryAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserInventoryServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserInventoryServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider,Turn10.Data.Common.IRefreshableCacheStore,Turn10.LiveOps.StewardApi.Providers.IStsClient)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserInventoryServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
            <param name="refreshableCacheStore">The refreshable cache store.</param>
            <param name="stsClient">The STS client.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserInventoryServiceWrapper.LiveOpsApplyUserInventoryByT10IdAsync(System.String,Forza.WebServices.FMG.Generated.LiveOpsUserInventory,System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserInventoryServiceWrapper.LiveOpsGetInventoryByProfileIdAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserInventoryServiceWrapper.LiveOpsGetUserInventoryAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserInventoryServiceWrapper.LiveOpsGetUserInventoryByT10IdAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserInventoryServiceWrapper.LiveOpsApplyUserInventoryAsync(System.String,Forza.WebServices.FMG.Generated.LiveOpsUserInventory,System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserInventoryServiceWrapper.ResetUserInventoryAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider,Turn10.Data.Common.IRefreshableCacheStore,Turn10.LiveOps.StewardApi.Providers.IStsClient)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
            <param name="refreshableCacheStore">The refreshable cache store.</param>
            <param name="stsClient">The STS client.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserServiceWrapper.LiveOpsGetUserDetailsByGamerTagAsync(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserServiceWrapper.LiveOpsGetUserDetailsByT10IdAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserServiceWrapper.LiveOpsGetUserDetailsByXuidAsync(System.UInt64,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.GravityUserServiceWrapper.LogonAsync(Forza.WebServices.FMG.Generated.UserLogonData)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityGiftHistoryProvider">
            <summary>
                Exposes methods for interacting with the Gravity gift history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityGiftHistoryProvider.UpdateGiftHistoryAsync(System.String,System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory)">
            <summary>
                Updates gift history.
            </summary>
            <param name="id">The ID.</param>
            <param name="title">The title.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="giftHistoryAntecedent">The gift history antecedent.</param>
            <param name="playerInventory">The player inventory.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityGiftHistoryProvider.GetGiftHistoriesAsync(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent)">
            <summary>
                Gets gift histories.
            </summary>
            <param name="id">The ID.</param>
            <param name="title">The title.</param>
            <param name="giftHistoryAntecedent">The gift history antecedent.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerDetailsProvider">
            <summary>
                Exposes methods for interacting with the Gravity player details.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerDetailsProvider.GetPlayerDetailsAsync(System.String)">
            <summary>
                Exposes methods for interacting with the Gravity player details.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerDetailsProvider.GetPlayerDetailsAsync(System.UInt64)">
            <summary>
                Get player details.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerDetailsProvider.GetPlayerDetailsByT10IdAsync(System.String)">
            <summary>
                Get player details.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerDetailsProvider.EnsurePlayerExistsAsync(System.UInt64)">
            <summary>
                Ensure player exists.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                A value indicating whether the player exists.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerDetailsProvider.EnsurePlayerExistsAsync(System.String)">
            <summary>
                Ensure player exists.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                A value indicating whether the player exists.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerDetailsProvider.EnsurePlayerExistsByT10IdAsync(System.String)">
            <summary>
                Ensure player exists.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <returns>
                A value indicating whether the player exists.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider">
            <summary>
                Exposes methods for interacting with the Gravity player inventory.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider.GetPlayerInventoryAsync(System.UInt64)">
            <summary>
                Get player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider.GetPlayerInventoryAsync(System.String)">
            <summary>
                Get player inventory.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider.GetPlayerInventoryAsync(System.UInt64,System.String)">
            <summary>
                Get player inventory by profile ID.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider.GetPlayerInventoryAsync(System.String,System.String)">
            <summary>
                Get player inventory by profile ID.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider.CreateOrReplacePlayerInventoryAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String,System.Boolean,System.Boolean)">
            <summary>
                Create or replace a player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="grantStartingPackage">A value which indicates whether to grant starting package.</param>
            <param name="preserveBookingItems">A value which indicates whether to preserve booking items.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider.CreateOrReplacePlayerInventoryAsync(System.String,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String,System.Boolean,System.Boolean)">
            <summary>
                Create or replace a player inventory.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="grantStartingPackage">A value which indicates whether to grant starting package.</param>
            <param name="preserveBookingItems">A value which indicates whether to preserve booking items.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider.UpdatePlayerInventoryAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String)">
            <summary>
                Update a player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider.UpdatePlayerInventoryAsync(System.String,Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,System.String)">
            <summary>
                Update a player inventory.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider.DeletePlayerInventoryAsync(System.UInt64)">
            <summary>
                Delete player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityPlayerInventoryProvider.DeletePlayerInventoryAsync(System.String)">
            <summary>
                Delete player inventory.
            </summary>
            <param name="t10Id">The Turn 10 ID.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserInventoryService">
            <summary>
                Exposes methods for interacting with the Gravity User Inventory Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserInventoryService.LiveOpsApplyUserInventoryByT10IdAsync(System.String,Forza.WebServices.FMG.Generated.LiveOpsUserInventory,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Gets the user inventory by T10Id.
            </summary>
            <param name="t10Id">The T10 ID.</param>
            <param name="inventoryToApply">The inventory to apply.</param>
            <param name="shouldResetFirst">A value indicating whether should reset first.</param>
            <param name="grantStartingPackage">A value indicating whether to grant starting package.</param>
            <param name="preserveBookingItems">A value indicating whether to preserved booking items.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserInventoryService.LiveOpsGetInventoryByProfileIdAsync(System.String,System.String)">
            <summary>
                 Gets user inventory by profile ID.
            </summary>
            <param name="t10Id">The t10Id.</param>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FMG.Generated.UserInventoryService.LiveOpsGetInventoryByProfileIdOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserInventoryService.LiveOpsGetUserInventoryAsync(System.String)">
            <summary>
                 Gets user inventory.
            </summary>
            <param name="t10Id">The T10 ID.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FMG.Generated.UserInventoryService.LiveOpsGetUserInventoryOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserInventoryService.LiveOpsGetUserInventoryByT10IdAsync(System.String)">
            <summary>
                 Gets user inventory by t10Id.
            </summary>
            <param name="t10Id">The T10 ID.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FMG.Generated.UserInventoryService.LiveOpsGetUserInventoryByT10IdOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserInventoryService.LiveOpsApplyUserInventoryAsync(System.String,Forza.WebServices.FMG.Generated.LiveOpsUserInventory,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Applies user inventory.
            </summary>
            <param name="t10Id">The T10 ID.</param>
            <param name="inventoryToApply">The inventory to apply.</param>
            <param name="shouldResetFirst">A value indicating whether should reset first.</param>
            <param name="grantStartingPackage">A value indicating whether to grant starting package.</param>
            <param name="preserveBookingItems">A value indicating whether to preserve booking items.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserInventoryService.ResetUserInventoryAsync(System.String)">
            <summary>
                 Resets user inventory.
            </summary>
            <param name="t10Id">The T10 ID.</param>
            <returns>
                A task with a status.</returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserService">
            <summary>
                 Exposes methods for interacting with the Gravity User Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserService.LiveOpsGetUserDetailsByGamerTagAsync(System.String,System.Int32)">
            <summary>
                 Gets user details by gamertag.
            </summary>
            <param name="gamerTag">The gamertag.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FMG.Generated.UserService.LiveOpsGetUserDetailsByGamerTagOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserService.LiveOpsGetUserDetailsByT10IdAsync(System.String)">
            <summary>
                 Gets user details by T10 ID.
            </summary>
            <param name="t10Id">The T10 ID.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FMG.Generated.UserService.LiveOpsGetUserDetailsByT10IdOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserService.LiveOpsGetUserDetailsByXuidAsync(System.UInt64,System.Int32)">
            <summary>
                 Gets user details by xuid.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FMG.Generated.UserService.LiveOpsGetUserDetailsByXuidOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.IGravityUserService.LogonAsync(Forza.WebServices.FMG.Generated.UserLogonData)">
            <summary>
               Logs the user on.
            </summary>
            <param name="loginData">The logon data.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FMG.Generated.UserService.LogonOutput"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.Settings.ISettingsProvider">
            <summary>
                Represents a settings provider.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.Settings.ISettingsProvider.GetGameSettingAsync(System.Guid)">
            <summary>
                Get game settings.
            </summary>
            <param name="id">The ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.Settings.GameSettings"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.Settings.SettingsProviderDev">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.Settings.SettingsProviderDev.GetGameSettingAsync(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Gravity.Settings.SettingsProviderProd">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Gravity.Settings.SettingsProviderProd.GetGameSettingAsync(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.IJobTracker">
            <summary>
                Exposes methods for job tracking.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.IJobTracker.CreateNewJobAsync(System.String,System.String)">
            <summary>
                Adds a job into the tracker.
            </summary>
            <param name="requestBody">The request body.</param>
            <param name="username">The username.</param>
            <returns>The job ID.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.IJobTracker.GetJobStatusAsync(System.String)">
            <summary>
                Gets the job status.
            </summary>
            <param name="jobId">The job ID.</param>
            <returns>The background job status.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.IJobTracker.UpdateJobAsync(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.BackgroundJobStatus,System.String)">
            <summary>
                Updates the job status.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="username">The username.</param>
            <param name="backgroundJobStatus">The background job status.</param>
            <param name="jobResult">The job result.</param>
            <returns>A task with the status of the operation.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.IJobTracker.UpdateJobAsync(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.BackgroundJobStatus)">
            <summary>
                Updates the job status.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="username">The username.</param>
            <param name="backgroundJobStatus">The background job status.</param>
            <returns>A task with the status of the operation.</returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.IScheduler">
            <summary>
                Represents an interface for classes capable of scheduling
                background work.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.IScheduler.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})">
            <summary>
                Queues the specified action to be run in the background.
            </summary>
            <param name="workItem">The workItem.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.IScheduler.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>
                Queues the specified function to be run in the background.
            </summary>
            <param name="workItem">The workItem.</param>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.IStsClient">
            <summary>
                Exposes methods for interacting with <see cref="T:Turn10.LiveOps.StewardApi.Providers.StsClientWrapper"/>.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.IStsClient.ForgeUserTokenAsync(Turn10.Contracts.STS.TokenForgeryRequest)">
            <summary>
                Forges a user token.
            </summary>
            <param name="tokenForgeryRequest">The token forgery request.</param>
            <returns>
                The <see cref="T:Turn10.Contracts.STS.Responses.GetUserTokenResponse"/>.
            </returns>
            <remarks>
                The token returned is used to authenticate to an LSP.
            </remarks>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.JobTracker">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.JobTracker.#ctor(Turn10.Data.Azure.ITableStorageClientFactory,Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.Azure.IBlobRepository,Turn10.Data.Common.IRefreshableCacheStore,Turn10.Data.SecretProvider.IKeyVaultProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.JobTracker"/> class.
            </summary>
            <param name="tableStorageClientFactory">The table storage client factory.</param>
            <param name="configuration">The configuration.</param>
            <param name="blobRepository">The blob repository.</param>
            <param name="refreshableCacheStore">The refreshable cache store.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.JobTracker.CreateNewJobAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.JobTracker.UpdateJobAsync(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.BackgroundJobStatus)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.JobTracker.UpdateJobAsync(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.BackgroundJobStatus,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.JobTracker.GetJobStatusAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.LspResponse">
            <summary>
                Represents LSP responses.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.LspResponse.Error">
            <summary>
                Gets error LSP response code.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.LspResponse.PlayerNotFound">
            <summary>
                Gets player not found LSP response code.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusOnlineProfileService">
            <summary>
                 Exposes methods for interacting with the Opus Online Profile Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusOnlineProfileService.GetAdminUserInventoryAsync(System.UInt64)">
            <summary>
                 Gets user user inventory using admin endpoint.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH3.Generated.OnlineProfileService.GetAdminUserInventoryOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusOnlineProfileService.GetAdminUserInventoryByProfileIdAsync(System.Int32)">
            <summary>
                 Gets user inventory by profile Id using admin endpoint.
            </summary>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH3.Generated.OnlineProfileService.GetAdminUserInventoryByProfileIdOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusOnlineProfileService.GetAdminUserProfilesAsync(System.UInt64,System.UInt32)">
            <summary>
                 Gets user profiles using admin endpoint.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="maxProfiles">The max profiles.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH3.Generated.OnlineProfileService.GetAdminUserProfilesOutput"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusPlayerDetailsProvider">
            <summary>
                Exposes methods for interacting with the Opus player details.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusPlayerDetailsProvider.GetPlayerDetailsAsync(System.String)">
            <summary>
                Get player details.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusPlayerDetailsProvider.GetPlayerDetailsAsync(System.UInt64)">
            <summary>
                Get player details.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusPlayerDetailsProvider.EnsurePlayerExistsAsync(System.UInt64)">
            <summary>
                Ensure player exists.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                A value indicating if the player exists.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusPlayerInventoryProvider">
            <summary>
                Exposes methods for interacting with the Opus player inventory.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusPlayerInventoryProvider.GetPlayerInventoryAsync(System.UInt64)">
            <summary>
                Get player inventory details.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusPlayerInventoryProvider.GetInventoryProfilesAsync(System.UInt64)">
            <summary>
                Gets an inventory profile summary.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusInventoryProfile"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusPlayerInventoryProvider.GetPlayerInventoryAsync(System.Int32)">
            <summary>
                Get player inventory details.
            </summary>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Opus.OpusPlayerInventory"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusUserService">
            <summary>
                 Exposes methods for interacting with the Opus User Service..
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusUserService.GetUserMasterDataByGamerTagAsync(System.String)">
            <summary>
                 Gets user master data by gamertag.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH3.Generated.UserService.GetUserMasterDataByGamerTagOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.IOpusUserService.GetUserMasterDataByXuidAsync(System.UInt64)">
            <summary>
                 Gets user master data by xuid.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH3.Generated.UserService.GetUserMasterDataByXuidOutput"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Opus.OpusOnlineProfileServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusOnlineProfileServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Opus.OpusOnlineProfileServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusOnlineProfileServiceWrapper.GetAdminUserInventoryAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusOnlineProfileServiceWrapper.GetAdminUserInventoryByProfileIdAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusOnlineProfileServiceWrapper.GetAdminUserProfilesAsync(System.UInt64,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerDetailsProvider">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerDetailsProvider.#ctor(Turn10.LiveOps.StewardApi.Providers.Opus.IOpusUserService,AutoMapper.IMapper)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerDetailsProvider"/> class.
            </summary>
            <param name="opusUserService">The Opus user service.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerDetailsProvider.GetPlayerDetailsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerDetailsProvider.GetPlayerDetailsAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerDetailsProvider.EnsurePlayerExistsAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerInventoryProvider">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerInventoryProvider.#ctor(Turn10.LiveOps.StewardApi.Providers.Opus.IOpusOnlineProfileService,AutoMapper.IMapper)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerInventoryProvider"/> class.
            </summary>
            <param name="opusOnlineProfileService">The Opus online profile service.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerInventoryProvider.GetPlayerInventoryAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerInventoryProvider.GetInventoryProfilesAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusPlayerInventoryProvider.GetPlayerInventoryAsync(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Opus.OpusUserServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusUserServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Opus.OpusUserServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusUserServiceWrapper.GetUserMasterDataByGamerTagAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Opus.OpusUserServiceWrapper.GetUserMasterDataByXuidAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.ProfileNotFoundException">
            <summary>
                Represents a profile not found exception.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.ProfileNotFoundException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.ProfileNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.ProfileNotFoundException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.ProfileNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.ProfileNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.ProfileNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Providers.ProfileNotFoundException.Message">
            <summary>
                Gets the message.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Providers.ProfileNotFoundException.InnerException">
            <summary>
                Gets the inner exception.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.StsClientWrapper">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.StsClientWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.StsClientWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.StsClientWrapper.ForgeUserTokenAsync(Turn10.Contracts.STS.TokenForgeryRequest)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseBanHistoryProvider">
            <summary>
                Exposes methods for interacting with the Sunrise ban history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseBanHistoryProvider.UpdateBanHistoryAsync(System.UInt64,System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters)">
            <summary>
                Updates ban history.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="title">The title.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="banParameters">The ban parameters.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseBanHistoryProvider.GetBanHistoriesAsync(System.UInt64,System.String)">
            <summary>
                Gets ban histories.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="title">The title.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Data.LiveOpsBanHistory"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService">
            <summary>
                 Exposes methods for interacting with the Sunrise Enforcement Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.BanUsersAsync(System.UInt64[],System.Int32,Forza.WebServices.FH4.master.Generated.ForzaUserBanParameters)">
            <summary>
               Bans users.
            </summary>
            <param name="xuids">The xuids.</param>
            <param name="xuidCount">The number of xuids.</param>
            <param name="banParameters">The ban parameters.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.BanUsersOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.CheckUserForMPBanAsync(System.UInt64)">
            <summary>
               Checks user for MP ban.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.CheckUserForMPBanOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.GetCompareStatsByBucketAsync(System.Int32,System.Int32,System.UInt64[])">
            <summary>
               Get compare stats by bucket.
            </summary>
            <param name="bucketId">The bucket ID.</param>
            <param name="numUsers">The number of users.</param>
            <param name="xuids">The xuids.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.GetCompareStatsByBucketOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.GetCompareStatsForRelatedUsersAsync(System.Int32)">
            <summary>
               Get compare stats for related users.
            </summary>
            <param name="numDesiredUsers">The number of desired users.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.GetCompareStatsForRelatedUsersOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.GetLegacyLicensePlateAsync">
            <summary>
               Get legacy license plate.
            </summary>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.GetLegacyLicensePlateOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.GetPermissionsTableAsync(System.UInt32)">
            <summary>
               Get permissions table.
            </summary>
            <param name="maxPermissions">The max permissions.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.GetPermissionsTableOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.GetTreatmentAsync">
            <summary>
               Get treatment.
            </summary>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.GetTreatmentOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.GetUserBanHistoryAsync(System.UInt64,System.Int32,System.Int32)">
            <summary>
               Get user ban history.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.GetUserBanHistoryOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.GetUserBanSummariesAsync(System.UInt64[],System.Int32)">
            <summary>
               Get user ban summaries.
            </summary>
            <param name="xuids">The xuids.</param>
            <param name="xuidCount">The xuid count.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.GetUserBanSummariesOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.GetVipStateAsync">
            <summary>
               Get vip state.
            </summary>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.GetVipStateOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.LogonAsync(Forza.WebServices.FH4.master.Generated.UserLogonData)">
            <summary>
               Log on.
            </summary>
            <param name="loginData">The login data.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.LogonOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.RenegotiateAsync">
            <summary>
               Renegotiate.
            </summary>
            <returns>
                The <see cref="T:Turn10.Services.ForzaClient.IncludeEncryptionKey"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.ReportPlayerForLicensePlateAsync(System.UInt64,System.String)">
            <summary>
               Report player for license plate.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="currentLicensePlate">The current license plate.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.RetrieveOnlineCreditsAsync(System.Boolean)">
            <summary>
               Retrieve online credits.
            </summary>
            <param name="unused">The unused.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserService.RetrieveOnlineCreditsOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.SetPlayerCardInfoAsync(System.UInt32,System.UInt16,System.UInt16,System.Int32,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.Int16[],System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
               Set player card info.
            </summary>
            <param name="currentCareerLevel">The current career level.</param>
            <param name="currentBadgeId">The current badge ID.</param>
            <param name="currentPlayerTitleId">The current player title ID.</param>
            <param name="driverModelId">The driver model ID.</param>
            <param name="painterThreadLevel">The painter thread level.</param>
            <param name="tunerThreadLevel">The tuner thread level.</param>
            <param name="photoThreadLevel">The photo thread level.</param>
            <param name="blueprintThreadLevel">The blueprint thread level.</param>
            <param name="customizationSlots">The customization slots.</param>
            <param name="isClubIdKnown">A value that indicates whether the club Id is known.</param>
            <param name="clubId">The club ID.</param>
            <param name="isTeamIdKnown">A value that indicates whether the team ID is known.</param>
            <param name="teamId">The team ID.</param>
            <param name="licensePlate">The license plate.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.SetPlayerFlagsAsync(System.UInt64,Xls.FH4.master.Generated.ForzaUserFlags)">
            <summary>
               Sets player flags.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="userFlags">The user flags.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.SetVipStateAsync(System.Boolean,System.Boolean)">
            <summary>
               Sets vip state.
            </summary>
            <param name="isVip">The is vip.</param>
            <param name="isUltimateVip">The is ultimate vip.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.SetWebPrivacyForPlayerAsync(System.Boolean)">
            <summary>
               Sets web privacy for player.
            </summary>
            <param name="isWebProfilePrivate">The is web profile private.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.UpdateProfileCheckpointAsync(Forza.WebServices.FH4.master.Generated.UserProfileCheckpoint,System.Int32)">
            <summary>
               Update profile checkpoint.
            </summary>
            <param name="clientProfile">The client profile.</param>
            <param name="titleVersion">The title version.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService.ValidateProfileCheckpointAsync(Forza.WebServices.FH4.master.Generated.UserProfileCheckpoint,System.Int32)">
            <summary>
               Validate profile checkpoint.
            </summary>
            <param name="clientProfile">The client profile.</param>
            <param name="titleVersion">The title version.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftHistoryProvider">
            <summary>
                Exposes methods for interacting with the Sunrise gift history.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftHistoryProvider.UpdateGiftHistoryAsync(System.String,System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory)">
            <summary>
                Updates gift history.
            </summary>
            <param name="id">The ID.</param>
            <param name="title">The title.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <param name="giftHistoryAntecedent">The gift history antecedent.</param>
            <param name="playerInventory">The player inventory.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftHistoryProvider.GetGiftHistoriesAsync(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent)">
            <summary>
                Gets gift histories.
            </summary>
            <param name="id">The ID.</param>
            <param name="title">The title.</param>
            <param name="giftHistoryAntecedent">The gift history antecedent.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Data.GiftHistory"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService">
            <summary>
                 Exposes methods for interacting with the Sunrise Gifting Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService.AdminGetSupportedGiftTypesAsync(System.Int32)">
            <summary>
                Gets supported gift types using the admin endpoint.
            </summary>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Forza.WebServices.FH4.master.Generated.GiftingService.AdminGetSupportedGiftTypesOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService.AdminSendCarGiftAsync(System.UInt64,System.Int32)">
            <summary>
                 Sends car gift using admin endpoint.
            </summary>
            <param name="recipientXuid">The recipient xuid.</param>
            <param name="carId">The carId.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService.AdminSendCreditsGiftAsync(System.UInt64,System.UInt32,System.String)">
            <summary>
                 Sends credit gifts using admin endpoint.
            </summary>
            <param name="recipientXuid">The recipient xuid.</param>
            <param name="creditAmount">The credit amount.</param>
            <param name="reason">The reason.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService.AdminSendItemGiftAsync(System.UInt64,Forza.UserInventory.FH4.master.Generated.InventoryItemType,System.Int32)">
            <summary>
                 Sends item gift using admin endpoint.
            </summary>
            <param name="recipientXuid">The recipient xuid.</param>
            <param name="itemType">The item type.</param>
            <param name="itemValue">The item value.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService.GetGiftsForUserAsync(System.Int32,System.Int32)">
            <summary>
                 Gets gifts for user.
            </summary>
            <param name="startAt">The start at.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.GiftingService.GetGiftsForUserOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService.MarkItemGiftRetrievedAsync(Forza.UserInventory.FH4.master.Generated.InventoryItemType,System.Guid)">
            <summary>
                 Marks item gift retrieved.
            </summary>
            <param name="itemType">The item type.</param>
            <param name="itemGiftId">The item gift ID.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService.RetrieveCarGiftAsync(System.Guid,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                 Retrieves car gift.
            </summary>
            <param name="giftId">The gift ID.</param>
            <param name="liveryDetailsBufferSize">The livery details buffer size.</param>
            <param name="partsInstalledBufferSize">The parts installed buffer size.</param>
            <param name="partsInTrunkBufferSize">The parts in trunk buffer size.</param>
            <returns>
                The list of <see cref="T:Forza.WebServices.FH4.master.Generated.GiftingService.RetrieveCarGiftOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService.RetrieveCreditsGiftAsync(System.Guid)">
            <summary>
                 Retrieves credits gift.
            </summary>
            <param name="giftId">The gift ID.</param>
            <returns>
                The list of <see cref="T:Forza.WebServices.FH4.master.Generated.GiftingService.RetrieveCreditsGiftOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService.AdminSendItemGroupGiftAsync(System.Int32,Forza.UserInventory.FH4.master.Generated.InventoryItemType,System.Int32)">
            <summary>
                 Sends gift to LSP group.
            </summary>
            <param name="groupId">The LSP group ID.</param>
            <param name="itemType">The item type.</param>
            <param name="itemValue">The item value.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider">
            <summary>
                Exposes methods for interacting with the Sunrise player details.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.GetPlayerDetailsAsync(System.String)">
            <summary>
                Get player details.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.GetPlayerDetailsAsync(System.UInt64)">
            <summary>
                Get player details.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.EnsurePlayerExistsAsync(System.UInt64)">
            <summary>
                Ensure player exists.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                A value indicating whether the player exists.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.EnsurePlayerExistsAsync(System.String)">
            <summary>
                Ensure player exists.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                A value indicating whether the player exists.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.GetConsolesAsync(System.UInt64,System.Int32)">
            <summary>
                Get consoles.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseConsoleDetails"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.SetConsoleBanStatusAsync(System.UInt64,System.Boolean)">
            <summary>
                Set console ban status.
            </summary>
            <param name="consoleId">The console ID.</param>
            <param name="isBanned">A value indicating whether the console is banned.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.GetSharedConsoleUsersAsync(System.UInt64,System.Int32,System.Int32)">
            <summary>
                Get shared console users.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseSharedConsoleUser"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.GetUserFlagsAsync(System.UInt64)">
            <summary>
                Get user flags.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.SetUserFlagsAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags)">
            <summary>
                Set user flags.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="userFlags">The user flags.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.GetProfileSummaryAsync(System.UInt64)">
            <summary>
                Get profile summary.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseProfileSummary"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.GetCreditUpdatesAsync(System.UInt64,System.Int32,System.Int32)">
            <summary>
                Gets credit updates.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseCreditUpdate"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.BanUsersAsync(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters,System.String)">
            <summary>
                Ban users.
            </summary>
            <param name="banParameters">The ban parameters.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanResult"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.GetUserBanSummariesAsync(System.Collections.Generic.IList{System.UInt64})">
            <summary>
                Get ban summaries.
            </summary>
            <param name="xuids">The xuids.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanSummary"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.GetUserBanHistoryAsync(System.UInt64)">
            <summary>
                Get user ban history.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanDescription"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerDetailsProvider.GetUserBanHistoryAsync(System.String)">
            <summary>
                Get user ban history.
            </summary>
            <param name="gamertag">The gamertag.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanDescription"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerInventoryProvider">
            <summary>
                Exposes methods for interacting with the Sunrise player inventory.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerInventoryProvider.GetPlayerInventoryAsync(System.UInt64)">
            <summary>
                Get player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerInventoryProvider.GetInventoryProfilesAsync(System.UInt64)">
            <summary>
                Get inventory profiles.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseInventoryProfile"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerInventoryProvider.GetPlayerInventoryAsync(System.Int32)">
            <summary>
                Get player inventory.
            </summary>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerInventoryProvider.GetLspGroupsAsync(System.Int32,System.Int32)">
            <summary>
                Get LSP groups.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The list of <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseLspGroup"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerInventoryProvider.UpdatePlayerInventoryAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,System.String)">
            <summary>
                Update player inventory.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerInventoryProvider.UpdatePlayerInventoriesAsync(System.Collections.Generic.IList{System.UInt64},Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,System.String)">
            <summary>
                Update player inventories.
            </summary>
            <param name="xuids">The xuids.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerInventoryProvider.UpdatePlayerInventoriesAsync(System.Collections.Generic.IList{System.String},Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,System.String)">
            <summary>
                Update player inventories.
            </summary>
            <param name="gamertags">The gamertags.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunrisePlayerInventoryProvider.UpdateGroupInventoriesAsync(System.Int32,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,System.String)">
            <summary>
                Updates LSP group inventories.
            </summary>
            <param name="groupId">The group ID.</param>
            <param name="playerInventory">The player inventory.</param>
            <param name="requestingAgent">The requesting agent.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserInventoryService">
            <summary>
                Exposes methods for interacting with the Sunrise User Inventory Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserInventoryService.SyncUserInventoryAsync(Forza.WebServices.FH4.master.Generated.ForzaUserInventorySummary)">
            <summary>
                 Syncs user inventory service.
            </summary>
            <param name="clientInventory">The Client Inventory.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserInventoryService.SyncUserInventoryOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserInventoryService.GetAdminUserProfilesAsync(System.UInt64,System.UInt32)">
            <summary>
                 Gets user profiles using admin endpoint.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="maxProfiles">The max profiles.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserInventoryService.GetAdminUserProfilesOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserInventoryService.GetAdminUserInventoryAsync(System.UInt64)">
            <summary>
                 Gets user inventory using admin endpoint.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserInventoryService.GetAdminUserInventoryOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserInventoryService.GetAdminUserInventoryByProfileIdAsync(System.Int32)">
            <summary>
                 Gets user inventory by profileID using admin endpoint.
            </summary>
            <param name="profileId">The profile ID.</param>
            <returns>
                The <see cref="T:Forza.WebServices.FH4.master.Generated.UserInventoryService.GetAdminUserInventoryByProfileIdOutput"/>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService">
            <summary>
                Exposes methods for interacting with the Sunrise User Service.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.SetFriendsAsync(System.UInt64[])">
            <summary>
               Sets friends.
            </summary>
            <param name="friendXuids">The friend xuid.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetUserDataAsync">
            <summary>
                 Gets the user data.
            </summary>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetUserDatasAsync(System.UInt64[],System.Int32)">
            <summary>
                 Gets the user datas.
            </summary>
            <param name="xuids">The xuid.</param>
            <param name="numberOfUsers">The number of users.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.GetUserDatasOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.ReportPiracyCheckStateAsync(Xls.FH4.master.Generated.PiracyCheckState)">
            <summary>
                 Reports the piracy check state.
            </summary>
            <param name="piracyCheckState">The piracy check state.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.ReportPiracyCheckStateExAsync(Xls.FH4.master.Generated.PiracyCheckState,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
                Reports the piracy check state Ex.
            </summary>
            <param name="piracyCheckState">The piracy check state.</param>
            <param name="dwFailedReads">The dw failed reads.</param>
            <param name="dwFailedHashes">The dw failed hashes.</param>
            <param name="dwBlocksChecked">The dw blocks checked.</param>
            <param name="dwTotalBlocks">The dw total blocks.</param>
            <param name="fComplete">the f complete.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.ReportPiracyCheckStateExOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetLiveOpsUserDataByXuidAsync(System.UInt64)">
            <summary>
                 Gets live ops user data by xuid.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.GetLiveOpsUserDataByXuidOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetLiveOpsUserDataByGamerTagAsync(System.String)">
            <summary>
                Gets the live ops user data by gamerTag.
            </summary>
            <param name="gamertag">The gamerTag.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.GetLiveOpsUserDataByGamerTagOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetUserGroupsAsync(System.Int32,System.Int32)">
            <summary>
                Gets the LSP user groups.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.GetUserGroupsOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetConsolesAsync(System.UInt64,System.Int32)">
            <summary>
                Gets the consoles.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.GetConsolesOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetSharedConsoleUsersAsync(System.UInt64,System.Int32,System.Int32)">
            <summary>
                Gets shared console users.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.GetSharedConsoleUsersOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.SetConsoleBanStatusAsync(System.UInt64,System.Boolean)">
            <summary>
                Sets the console ban status.
            </summary>
            <param name="consoleId">The console id.</param>
            <param name="isBanned">A value indicating whether the console is banned.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetCreditUpdateEntriesAsync(System.UInt64,System.Int32,System.Int32)">
            <summary>
                Gets credit update entries.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="startIndex">The start index.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.GetCreditUpdateEntriesOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetProfileSummaryAsync(System.UInt64)">
            <summary>
                Gets profile summary.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.GetProfileSummaryOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.SetIsUnderReviewAsync(System.UInt64,System.Boolean)">
            <summary>
               Set is under review flag.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="isUnderReview">A value indicating whether the user is under review.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetIsUnderReviewAsync(System.UInt64)">
            <summary>
               Get the under review flag.
            </summary>
            <param name="xuid">The xuid.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.GetIsUnderReviewOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.GetUserGroupMembershipsAsync(System.UInt64,System.Int32[],System.Int32)">
            <summary>
               Get the user group memberships.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="groupIdFilter">The group ID filter.</param>
            <param name="maxResults">The max results.</param>
            <returns>
                The <see cref="T:Xls.WebServices.FH4.master.Generated.UserService.GetUserGroupMembershipsOutput"/>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.AddToUserGroupsAsync(System.UInt64,System.Int32[])">
            <summary>
               Add to user groups.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="groupIds">The group IDs.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService.RemoveFromUserGroupsAsync(System.UInt64,System.Int32[])">
            <summary>
               Remove from user groups.
            </summary>
            <param name="xuid">The xuid.</param>
            <param name="groupIds">The group IDs.</param>
            <returns>
                A task with a status.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseBanHistoryProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseBanHistoryProvider.#ctor(Turn10.Data.Kusto.IKustoStreamingLogger,Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseBanHistoryProvider"/> class.
            </summary>
            <param name="kustoStreamingLogger">The Kusto streaming logger.</param>
            <param name="kustoProvider">The Kusto provider.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseBanHistoryProvider.UpdateBanHistoryAsync(System.UInt64,System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseBanHistoryProvider.GetBanHistoriesAsync(System.UInt64,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider,Turn10.Data.Common.IRefreshableCacheStore,Turn10.LiveOps.StewardApi.Providers.IStsClient)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
            <param name="refreshableCacheStore">The refreshable cache store.</param>
            <param name="stsClient">The STS client.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.GetUserBanSummariesAsync(System.UInt64[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.BanUsersAsync(System.UInt64[],System.Int32,Forza.WebServices.FH4.master.Generated.ForzaUserBanParameters)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.GetUserBanHistoryAsync(System.UInt64,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.CheckUserForMPBanAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.GetCompareStatsByBucketAsync(System.Int32,System.Int32,System.UInt64[])">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.GetCompareStatsForRelatedUsersAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.GetLegacyLicensePlateAsync">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.GetPermissionsTableAsync(System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.GetTreatmentAsync">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.GetVipStateAsync">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.LogonAsync(Forza.WebServices.FH4.master.Generated.UserLogonData)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.RenegotiateAsync">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.ReportPlayerForLicensePlateAsync(System.UInt64,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.RetrieveOnlineCreditsAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.SetPlayerCardInfoAsync(System.UInt32,System.UInt16,System.UInt16,System.Int32,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.Int16[],System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.SetPlayerFlagsAsync(System.UInt64,Xls.FH4.master.Generated.ForzaUserFlags)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.SetVipStateAsync(System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.SetWebPrivacyForPlayerAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.UpdateProfileCheckpointAsync(Forza.WebServices.FH4.master.Generated.UserProfileCheckpoint,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseEnforcementServiceWrapper.ValidateProfileCheckpointAsync(Forza.WebServices.FH4.master.Generated.UserProfileCheckpoint,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftHistoryProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftHistoryProvider.#ctor(Turn10.Data.Kusto.IKustoStreamingLogger,Turn10.LiveOps.StewardApi.Contracts.Data.IKustoProvider,Microsoft.Extensions.Configuration.IConfiguration,AutoMapper.IMapper)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftHistoryProvider"/> class.
            </summary>
            <param name="kustoStreamingLogger">The Kusto streaming logger.</param>
            <param name="kustoProvider">The Kusto provider.</param>
            <param name="configuration">The configuration.</param>
            <param name="mapper">The mapper.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftHistoryProvider.UpdateGiftHistoryAsync(System.String,System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftHistoryProvider.GetGiftHistoriesAsync(System.String,System.String,Turn10.LiveOps.StewardApi.Contracts.GiftHistoryAntecedent)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider,Turn10.Data.Common.IRefreshableCacheStore,Turn10.LiveOps.StewardApi.Providers.IStsClient)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
            <param name="refreshableCacheStore">The refreshable cache store.</param>
            <param name="stsClient">The STS client.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper.AdminSendItemGiftAsync(System.UInt64,Forza.UserInventory.FH4.master.Generated.InventoryItemType,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper.AdminSendItemGroupGiftAsync(System.Int32,Forza.UserInventory.FH4.master.Generated.InventoryItemType,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper.AdminGetSupportedGiftTypesAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper.AdminSendCarGiftAsync(System.UInt64,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper.AdminSendCreditsGiftAsync(System.UInt64,System.UInt32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper.GetGiftsForUserAsync(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper.MarkItemGiftRetrievedAsync(Forza.UserInventory.FH4.master.Generated.InventoryItemType,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper.RetrieveCarGiftAsync(System.Guid,System.UInt32,System.UInt32,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseGiftingServiceWrapper.RetrieveCreditsGiftAsync(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.#ctor(Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService,Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseEnforcementService,Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseBanHistoryProvider,AutoMapper.IMapper,Turn10.Data.Common.IRefreshableCacheStore)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider"/> class.
            </summary>
            <param name="sunriseUserService">The Sunrise user service.</param>
            <param name="sunriseEnforcementService">The Sunrise enforcement service.</param>
            <param name="banHistoryProvider">The ban history provider.</param>
            <param name="mapper">The mapper.</param>
            <param name="refreshableCacheStore">The refreshable cache store.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.GetPlayerDetailsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.GetPlayerDetailsAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.EnsurePlayerExistsAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.EnsurePlayerExistsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.GetConsolesAsync(System.UInt64,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.GetSharedConsoleUsersAsync(System.UInt64,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.GetUserFlagsAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.SetUserFlagsAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseUserFlags)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.GetProfileSummaryAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.GetCreditUpdatesAsync(System.UInt64,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.BanUsersAsync(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.GetUserBanSummariesAsync(System.Collections.Generic.IList{System.UInt64})">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.GetUserBanHistoryAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.GetUserBanHistoryAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerDetailsProvider.SetConsoleBanStatusAsync(System.UInt64,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider.#ctor(Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserInventoryService,Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftingService,Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseUserService,AutoMapper.IMapper,Turn10.LiveOps.StewardApi.Providers.Sunrise.ISunriseGiftHistoryProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider"/> class.
            </summary>
            <param name="sunriseUserInventoryService">The Sunrise inventory service.</param>
            <param name="sunriseGiftingService">The Sunrise gifting service.</param>
            <param name="sunriseUserService">The Sunrise user service.</param>
            <param name="mapper">The mapper.</param>
            <param name="giftHistoryProvider">The gift history provider.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider.GetPlayerInventoryAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider.GetInventoryProfilesAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider.GetPlayerInventoryAsync(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider.GetLspGroupsAsync(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider.UpdatePlayerInventoryAsync(System.UInt64,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider.UpdatePlayerInventoriesAsync(System.Collections.Generic.IList{System.UInt64},Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider.UpdatePlayerInventoriesAsync(System.Collections.Generic.IList{System.String},Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunrisePlayerInventoryProvider.UpdateGroupInventoriesAsync(System.Int32,Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserInventoryServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserInventoryServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider,Turn10.Data.Common.IRefreshableCacheStore,Turn10.LiveOps.StewardApi.Providers.IStsClient)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserInventoryServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
            <param name="refreshableCacheStore">The refreshable cache store.</param>
            <param name="stsClient">The STS client.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserInventoryServiceWrapper.SyncUserInventoryAsync(Forza.WebServices.FH4.master.Generated.ForzaUserInventorySummary)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserInventoryServiceWrapper.GetAdminUserProfilesAsync(System.UInt64,System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserInventoryServiceWrapper.GetAdminUserInventoryAsync(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserInventoryServiceWrapper.GetAdminUserInventoryByProfileIdAsync(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Turn10.Data.SecretProvider.IKeyVaultProvider,Turn10.Data.Common.IRefreshableCacheStore,Turn10.LiveOps.StewardApi.Providers.IStsClient)">
            <summary>
                 Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="keyVaultProvider">The key vault provider.</param>
            <param name="refreshableCacheStore">The refreshable cache store.</param>
            <param name="stsClient">The STS client.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetLiveOpsUserDataByGamerTagAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetLiveOpsUserDataByXuidAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetConsolesAsync(System.UInt64,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetSharedConsoleUsersAsync(System.UInt64,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.SetConsoleBanStatusAsync(System.UInt64,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.SetIsUnderReviewAsync(System.UInt64,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetProfileSummaryAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetCreditUpdateEntriesAsync(System.UInt64,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetIsUnderReviewAsync(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetUserGroupMembershipsAsync(System.UInt64,System.Int32[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.AddToUserGroupsAsync(System.UInt64,System.Int32[])">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.RemoveFromUserGroupsAsync(System.UInt64,System.Int32[])">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetUserGroupsAsync(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.SetFriendsAsync(System.UInt64[])">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetUserDataAsync">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.GetUserDatasAsync(System.UInt64[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.ReportPiracyCheckStateAsync(Xls.FH4.master.Generated.PiracyCheckState)">
            <inheritdoc/>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.Sunrise.SunriseUserServiceWrapper.ReportPiracyCheckStateExAsync(Xls.FH4.master.Generated.PiracyCheckState,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.TaskExecutionScheduler">
            <summary>
                A scheduler implementation that executes the given work on a
                background thread.
            </summary>
            <seealso cref="T:Turn10.LiveOps.StewardApi.Providers.IScheduler" />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.TaskExecutionScheduler.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>
                Queues the specified function to be run in the background.
            </summary>
            <param name="workItem">The workItem.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.TaskExecutionScheduler.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})">
            <summary>
                Queues the specified action to be run in the background.
            </summary>
            <param name="workItem">The workItem.</param>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.TitleConstants">
            <summary>
                Represents title constants.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.OpusCodeName">
            <summary>
                The Opus code name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.ApolloCodeName">
            <summary>
                The Apollo code name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.SunriseCodeName">
            <summary>
                The Sunrise code name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.GravityCodeName">
            <summary>
                The Gravity code name.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.OpusAbbreviation">
            <summary>
                The Opus abbreviation.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.ApolloAbbreviation">
            <summary>
                The Apollo abbreviation.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.SunriseAbbreviation">
            <summary>
                The Sunrise abbreviation.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.GravityAbbreviation">
            <summary>
                The Gravity abbreviation.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.OpusFullName">
            <summary>
                The Opus abbreviation.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.ApolloFullName">
            <summary>
                The Apollo abbreviation.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.SunriseFullName">
            <summary>
                The Sunrise abbreviation.
            </summary>
        </member>
        <member name="F:Turn10.LiveOps.StewardApi.Providers.TitleConstants.GravityFullName">
            <summary>
                The Gravity abbreviation.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Providers.TransientHttpErrorDetector">
            <summary>
                Provides methods for determining whether HTTP errors are transient.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.TransientHttpErrorDetector.IsTransientHttpStatusCode(System.Nullable{System.Net.HttpStatusCode})">
            <summary>
                Determines whether the status code corresponds to a transient error.
            </summary>
            <param name="statusCode">The status Code.</param>
            <returns>
                <c>true</c> if the status code corresponds to a transient error; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Providers.TransientHttpErrorDetector.IsTransientHttpStatusCode(System.Int32)">
            <summary>
                Determines whether the status code corresponds to a transient error.
            </summary>
            <param name="statusCode">The status Code.</param>
            <returns>
                <c>true</c> if the status code corresponds to a transient error; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Startup">
            <summary>
                Entry point for the app.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Startup"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Configures the services.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
                Configures the app.
            </summary>
            <param name="applicationBuilder">The application builder.</param>
            <param name="webHostEnvironment">The web host environment.</param>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.ApolloBanParametersRequestValidator">
            <summary>
                Validates a <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters"/> request.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.ApolloBanParametersRequestValidator.Validate(Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.ApolloBanParametersRequestValidator.ValidateIds(Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloBanParameters,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.ApolloGroupGiftRequestValidator">
            <summary>
                Validates a <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGroupGift"/> request.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.ApolloGroupGiftRequestValidator.#ctor(Turn10.LiveOps.StewardApi.Validation.IRequestValidator{Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory})">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Validation.ApolloGroupGiftRequestValidator"/> class.
            </summary>
            <param name="playerInventoryRequestValidator">The player inventory request validator.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.ApolloGroupGiftRequestValidator.Validate(Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGroupGift,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.ApolloGroupGiftRequestValidator.ValidateIds(Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloGroupGift,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.ApolloPlayerInventoryRequestValidator">
            <summary>
                Validates a <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory"/> request.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.ApolloPlayerInventoryRequestValidator.Validate(Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.ApolloPlayerInventoryRequestValidator.ValidateIds(Turn10.LiveOps.StewardApi.Contracts.Apollo.ApolloPlayerInventory,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.ApplicationSettings">
            <summary>
                Central reference application settings.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Validation.ApplicationSettings.SupportedTitles">
            <summary>
                Gets a list of supported titles.
            </summary>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.GravityPlayerInventoryRequestValidator">
            <summary>
                Validates a <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory"/> request.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.GravityPlayerInventoryRequestValidator.Validate(Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.GravityPlayerInventoryRequestValidator.ValidateIds(Turn10.LiveOps.StewardApi.Contracts.Gravity.GravityPlayerInventory,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.IRequestValidator`1">
            <summary>
                Validates a request.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.IRequestValidator`1.Validate(`0,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
                Validate a request.
            </summary>
            <param name="model">The model.</param>
            <param name="modelState">The model state.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.IRequestValidator`1.ValidateIds(`0,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
                Validate request IDs.
            </summary>
            <param name="model">The model.</param>
            <param name="modelState">The model state.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.IRequestValidator`1.GenerateErrorResponse(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
                Generate error response.
            </summary>
            <param name="modelState">The model state.</param>
            <returns>An error response.</returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.RequestValidatorBase">
            <summary>
                Base class for validating requests.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.RequestValidatorBase.GenerateErrorResponse(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
                Generate error response.
            </summary>
            <param name="modelState">The model state.</param>
            <returns>An error response.</returns>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.RequestValidatorBase.ValidateTitleValue(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
                Validates title value.
            </summary>
            <param name="modelState">The model state.</param>
            <returns>The title value.</returns>
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.SunriseBanParametersRequestValidator">
            <summary>
                Validates a <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters"/> request.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.SunriseBanParametersRequestValidator.Validate(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.SunriseBanParametersRequestValidator.ValidateIds(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseBanParameters,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.SunriseGroupGiftRequestValidator">
            <summary>
                Validates a <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGroupGift"/> request.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.SunriseGroupGiftRequestValidator.#ctor(Turn10.LiveOps.StewardApi.Validation.IRequestValidator{Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory})">
            <summary>
                Initializes a new instance of the <see cref="T:Turn10.LiveOps.StewardApi.Validation.SunriseGroupGiftRequestValidator"/> class.
            </summary>
            <param name="playerInventoryRequestValidator">The player inventory request validator.</param>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.SunriseGroupGiftRequestValidator.Validate(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGroupGift,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.SunriseGroupGiftRequestValidator.ValidateIds(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunriseGroupGift,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.SunrisePlayerInventoryRequestValidator">
            <summary>
                Validates a <see cref="T:Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory"/> request.
            </summary>
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.SunrisePlayerInventoryRequestValidator.Validate(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Turn10.LiveOps.StewardApi.Validation.SunrisePlayerInventoryRequestValidator.ValidateIds(Turn10.LiveOps.StewardApi.Contracts.Sunrise.SunrisePlayerInventory,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <inheritdoc />
        </member>
        <member name="T:Turn10.LiveOps.StewardApi.Validation.TitleMapping">
            <summary>
                Represents title naming information.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Validation.TitleMapping.Abbreviation">
            <summary>
                Gets or sets the abbreviation.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Validation.TitleMapping.Codename">
            <summary>
                Gets or sets the codename.
            </summary>
        </member>
        <member name="P:Turn10.LiveOps.StewardApi.Validation.TitleMapping.RetailName">
            <summary>
                Gets or sets the retail name.
            </summary>
        </member>
        <member name="M:Turn10.Settings.Dev.AssetClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.AssetClient.CreateAsync(Turn10.Settings.Dev.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.AssetClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.AssetClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.AssetClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.AvailabilityScheduleClient.UpdateAsync(Turn10.Settings.Dev.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.AvailabilityScheduleClient.CreateAsync(Turn10.Settings.Dev.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.AvailabilityScheduleClient.DeleteAsync(Turn10.Settings.Dev.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.AvailabilityScheduleClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.AvailabilityScheduleClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CarClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CarClient.CreateAsync(Turn10.Settings.Dev.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CarClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CarClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CarClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ChallengeClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ChallengeClient.CreateAsync(Turn10.Settings.Dev.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ChallengeClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ChallengeClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ChallengeClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ChallengeIssuingParametersClient.UpdateAsync(Turn10.Settings.Dev.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ChallengeIssuingParametersClient.CreateAsync(Turn10.Settings.Dev.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ChallengeIssuingParametersClient.DeleteAsync(Turn10.Settings.Dev.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ChallengeIssuingParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ChallengeIssuingParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CollectionScoreParametersClient.UpdateAsync(Turn10.Settings.Dev.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CollectionScoreParametersClient.CreateAsync(Turn10.Settings.Dev.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CollectionScoreParametersClient.DeleteAsync(Turn10.Settings.Dev.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CollectionScoreParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CollectionScoreParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CurrencyClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CurrencyClient.CreateAsync(Turn10.Settings.Dev.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CurrencyClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CurrencyClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.CurrencyClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.DefaultInventoryPackageClient.UpdateAsync(Turn10.Settings.Dev.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.DefaultInventoryPackageClient.CreateAsync(Turn10.Settings.Dev.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.DefaultInventoryPackageClient.DeleteAsync(Turn10.Settings.Dev.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.DefaultInventoryPackageClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.DefaultInventoryPackageClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.EnergyRefillClient.UpdateAsync(Turn10.Settings.Dev.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.EnergyRefillClient.CreateAsync(Turn10.Settings.Dev.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.EnergyRefillClient.DeleteAsync(Turn10.Settings.Dev.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.EnergyRefillClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.EnergyRefillClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.EventContainerClient.UpdateAsync(Turn10.Settings.Dev.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.EventContainerClient.CreateAsync(Turn10.Settings.Dev.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.EventContainerClient.DeleteAsync(Turn10.Settings.Dev.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.EventContainerClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.EventContainerClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.FTUEStateListClient.UpdateAsync(Turn10.Settings.Dev.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.FTUEStateListClient.CreateAsync(Turn10.Settings.Dev.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.FTUEStateListClient.DeleteAsync(Turn10.Settings.Dev.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.FTUEStateListClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.FTUEStateListClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsClient.GetAllAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsClient.UpdateAsync(Turn10.Settings.Dev.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsClient.CreateAsync(Turn10.Settings.Dev.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsClient.DeleteAsync(Turn10.Settings.Dev.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsParametersClient.GetAllAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsParametersClient.UpdateAsync(Turn10.Settings.Dev.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsParametersClient.CreateAsync(Turn10.Settings.Dev.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsParametersClient.DeleteAsync(Turn10.Settings.Dev.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.GameSettingsParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.HeatClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.HeatClient.CreateAsync(Turn10.Settings.Dev.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.HeatClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.HeatClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.HeatClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.HeatResetConditionClient.UpdateAsync(Turn10.Settings.Dev.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.HeatResetConditionClient.CreateAsync(Turn10.Settings.Dev.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.HeatResetConditionClient.DeleteAsync(Turn10.Settings.Dev.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.HeatResetConditionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.HeatResetConditionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ItemConversionTableClient.UpdateAsync(Turn10.Settings.Dev.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ItemConversionTableClient.CreateAsync(Turn10.Settings.Dev.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ItemConversionTableClient.DeleteAsync(Turn10.Settings.Dev.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ItemConversionTableClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ItemConversionTableClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.MasteryKitClient.UpdateAsync(Turn10.Settings.Dev.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.MasteryKitClient.CreateAsync(Turn10.Settings.Dev.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.MasteryKitClient.DeleteAsync(Turn10.Settings.Dev.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.MasteryKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.MasteryKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationSubscriptionTagClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationSubscriptionTagClient.UpdateAsync(Turn10.Settings.Dev.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationSubscriptionTagClient.CreateAsync(Turn10.Settings.Dev.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationSubscriptionTagClient.DeleteAsync(Turn10.Settings.Dev.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationSubscriptionTagClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationSubscriptionTagClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationTagMetadataClient.UpdateAsync(Turn10.Settings.Dev.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationTagMetadataClient.CreateAsync(Turn10.Settings.Dev.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationTagMetadataClient.DeleteAsync(Turn10.Settings.Dev.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationTagMetadataClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.NotificationTagMetadataClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackDefinitionClient.UpdateAsync(Turn10.Settings.Dev.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackDefinitionClient.CreateAsync(Turn10.Settings.Dev.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackDefinitionClient.DeleteAsync(Turn10.Settings.Dev.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackDropDefinitionClient.UpdateAsync(Turn10.Settings.Dev.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackDropDefinitionClient.CreateAsync(Turn10.Settings.Dev.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackDropDefinitionClient.DeleteAsync(Turn10.Settings.Dev.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackDropDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackDropDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackOfferClient.UpdateAsync(Turn10.Settings.Dev.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackOfferClient.CreateAsync(Turn10.Settings.Dev.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackOfferClient.DeleteAsync(Turn10.Settings.Dev.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackOpenCountParameterClient.UpdateAsync(Turn10.Settings.Dev.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackOpenCountParameterClient.CreateAsync(Turn10.Settings.Dev.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackOpenCountParameterClient.DeleteAsync(Turn10.Settings.Dev.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackOpenCountParameterClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackOpenCountParameterClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackSlotDefinitionClient.UpdateAsync(Turn10.Settings.Dev.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackSlotDefinitionClient.CreateAsync(Turn10.Settings.Dev.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackSlotDefinitionClient.DeleteAsync(Turn10.Settings.Dev.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackSlotDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.PackSlotDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ProfileResetConditionGroupClient.UpdateAsync(Turn10.Settings.Dev.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ProfileResetConditionGroupClient.CreateAsync(Turn10.Settings.Dev.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ProfileResetConditionGroupClient.DeleteAsync(Turn10.Settings.Dev.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ProfileResetConditionGroupClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ProfileResetConditionGroupClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RepairKitClient.UpdateAsync(Turn10.Settings.Dev.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RepairKitClient.CreateAsync(Turn10.Settings.Dev.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RepairKitClient.DeleteAsync(Turn10.Settings.Dev.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RepairKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RepairKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RepairTokenParametersClient.UpdateAsync(Turn10.Settings.Dev.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RepairTokenParametersClient.CreateAsync(Turn10.Settings.Dev.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RepairTokenParametersClient.DeleteAsync(Turn10.Settings.Dev.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RepairTokenParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RepairTokenParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RewardClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RewardClient.CreateAsync(Turn10.Settings.Dev.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RewardClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RewardClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RewardClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RewardsPackageClient.UpdateAsync(Turn10.Settings.Dev.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RewardsPackageClient.CreateAsync(Turn10.Settings.Dev.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RewardsPackageClient.DeleteAsync(Turn10.Settings.Dev.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RewardsPackageClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.RewardsPackageClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ShopOfferClient.UpdateAsync(Turn10.Settings.Dev.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ShopOfferClient.CreateAsync(Turn10.Settings.Dev.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ShopOfferClient.DeleteAsync(Turn10.Settings.Dev.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ShopOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.ShopOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.StarRatingParameterTableClient.UpdateAsync(Turn10.Settings.Dev.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.StarRatingParameterTableClient.CreateAsync(Turn10.Settings.Dev.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.StarRatingParameterTableClient.DeleteAsync(Turn10.Settings.Dev.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.StarRatingParameterTableClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.StarRatingParameterTableClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.StoreOfferClient.UpdateAsync(Turn10.Settings.Dev.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.StoreOfferClient.CreateAsync(Turn10.Settings.Dev.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.StoreOfferClient.DeleteAsync(Turn10.Settings.Dev.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.StoreOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.StoreOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.SupportedLocaleClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.SupportedLocaleClient.UpdateAsync(Turn10.Settings.Dev.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.SupportedLocaleClient.CreateAsync(Turn10.Settings.Dev.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.SupportedLocaleClient.DeleteAsync(Turn10.Settings.Dev.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.SupportedLocaleClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.SupportedLocaleClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TimedOfferClient.UpdateAsync(Turn10.Settings.Dev.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TimedOfferClient.CreateAsync(Turn10.Settings.Dev.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TimedOfferClient.DeleteAsync(Turn10.Settings.Dev.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TimedOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TimedOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TitleInfoClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TitleInfoClient.UpdateAsync(Turn10.Settings.Dev.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TitleInfoClient.CreateAsync(Turn10.Settings.Dev.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TitleInfoClient.DeleteAsync(Turn10.Settings.Dev.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TitleInfoClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TitleInfoClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TitleSettingsV1Client.GetHeartbeatAsync(System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.TitleSettingsV2Client.GetHubSettingsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.UpgradeKitClient.UpdateAsync(Turn10.Settings.Dev.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.UpgradeKitClient.CreateAsync(Turn10.Settings.Dev.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.UpgradeKitClient.DeleteAsync(Turn10.Settings.Dev.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.UpgradeKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.UpgradeKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.WebSettingsClient.GetWebSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.WebSettingsClient.GetForumsSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.WebSettingsClient.GetRewardsSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IAssetClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IAssetClient.CreateAsync(Turn10.Settings.Dev.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IAssetClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IAssetClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IAssetClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IAvailabilityScheduleClient.UpdateAsync(Turn10.Settings.Dev.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IAvailabilityScheduleClient.CreateAsync(Turn10.Settings.Dev.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IAvailabilityScheduleClient.DeleteAsync(Turn10.Settings.Dev.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IAvailabilityScheduleClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IAvailabilityScheduleClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICarClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICarClient.CreateAsync(Turn10.Settings.Dev.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICarClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICarClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICarClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IChallengeClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IChallengeClient.CreateAsync(Turn10.Settings.Dev.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IChallengeClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IChallengeClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IChallengeClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IChallengeIssuingParametersClient.UpdateAsync(Turn10.Settings.Dev.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IChallengeIssuingParametersClient.CreateAsync(Turn10.Settings.Dev.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IChallengeIssuingParametersClient.DeleteAsync(Turn10.Settings.Dev.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IChallengeIssuingParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IChallengeIssuingParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICollectionScoreParametersClient.UpdateAsync(Turn10.Settings.Dev.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICollectionScoreParametersClient.CreateAsync(Turn10.Settings.Dev.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICollectionScoreParametersClient.DeleteAsync(Turn10.Settings.Dev.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICollectionScoreParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICollectionScoreParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICurrencyClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICurrencyClient.CreateAsync(Turn10.Settings.Dev.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICurrencyClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICurrencyClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ICurrencyClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IDefaultInventoryPackageClient.UpdateAsync(Turn10.Settings.Dev.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IDefaultInventoryPackageClient.CreateAsync(Turn10.Settings.Dev.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IDefaultInventoryPackageClient.DeleteAsync(Turn10.Settings.Dev.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IDefaultInventoryPackageClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IDefaultInventoryPackageClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IEnergyRefillClient.UpdateAsync(Turn10.Settings.Dev.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IEnergyRefillClient.CreateAsync(Turn10.Settings.Dev.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IEnergyRefillClient.DeleteAsync(Turn10.Settings.Dev.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IEnergyRefillClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IEnergyRefillClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IEventContainerClient.UpdateAsync(Turn10.Settings.Dev.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IEventContainerClient.CreateAsync(Turn10.Settings.Dev.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IEventContainerClient.DeleteAsync(Turn10.Settings.Dev.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IEventContainerClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IEventContainerClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IFTUEStateListClient.UpdateAsync(Turn10.Settings.Dev.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IFTUEStateListClient.CreateAsync(Turn10.Settings.Dev.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IFTUEStateListClient.DeleteAsync(Turn10.Settings.Dev.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IFTUEStateListClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IFTUEStateListClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsClient.GetAllAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsClient.UpdateAsync(Turn10.Settings.Dev.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsClient.CreateAsync(Turn10.Settings.Dev.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsClient.DeleteAsync(Turn10.Settings.Dev.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsParametersClient.GetAllAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsParametersClient.UpdateAsync(Turn10.Settings.Dev.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsParametersClient.CreateAsync(Turn10.Settings.Dev.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsParametersClient.DeleteAsync(Turn10.Settings.Dev.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IGameSettingsParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IHeatClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IHeatClient.CreateAsync(Turn10.Settings.Dev.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IHeatClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IHeatClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IHeatClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IHeatResetConditionClient.UpdateAsync(Turn10.Settings.Dev.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IHeatResetConditionClient.CreateAsync(Turn10.Settings.Dev.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IHeatResetConditionClient.DeleteAsync(Turn10.Settings.Dev.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IHeatResetConditionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IHeatResetConditionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IItemConversionTableClient.UpdateAsync(Turn10.Settings.Dev.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IItemConversionTableClient.CreateAsync(Turn10.Settings.Dev.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IItemConversionTableClient.DeleteAsync(Turn10.Settings.Dev.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IItemConversionTableClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IItemConversionTableClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IMasteryKitClient.UpdateAsync(Turn10.Settings.Dev.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IMasteryKitClient.CreateAsync(Turn10.Settings.Dev.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IMasteryKitClient.DeleteAsync(Turn10.Settings.Dev.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IMasteryKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IMasteryKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationSubscriptionTagClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationSubscriptionTagClient.UpdateAsync(Turn10.Settings.Dev.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationSubscriptionTagClient.CreateAsync(Turn10.Settings.Dev.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationSubscriptionTagClient.DeleteAsync(Turn10.Settings.Dev.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationSubscriptionTagClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationSubscriptionTagClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationTagMetadataClient.UpdateAsync(Turn10.Settings.Dev.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationTagMetadataClient.CreateAsync(Turn10.Settings.Dev.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationTagMetadataClient.DeleteAsync(Turn10.Settings.Dev.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationTagMetadataClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.INotificationTagMetadataClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackDefinitionClient.UpdateAsync(Turn10.Settings.Dev.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackDefinitionClient.CreateAsync(Turn10.Settings.Dev.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackDefinitionClient.DeleteAsync(Turn10.Settings.Dev.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackDropDefinitionClient.UpdateAsync(Turn10.Settings.Dev.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackDropDefinitionClient.CreateAsync(Turn10.Settings.Dev.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackDropDefinitionClient.DeleteAsync(Turn10.Settings.Dev.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackDropDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackDropDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackOfferClient.UpdateAsync(Turn10.Settings.Dev.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackOfferClient.CreateAsync(Turn10.Settings.Dev.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackOfferClient.DeleteAsync(Turn10.Settings.Dev.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackOpenCountParameterClient.UpdateAsync(Turn10.Settings.Dev.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackOpenCountParameterClient.CreateAsync(Turn10.Settings.Dev.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackOpenCountParameterClient.DeleteAsync(Turn10.Settings.Dev.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackOpenCountParameterClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackOpenCountParameterClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackSlotDefinitionClient.UpdateAsync(Turn10.Settings.Dev.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackSlotDefinitionClient.CreateAsync(Turn10.Settings.Dev.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackSlotDefinitionClient.DeleteAsync(Turn10.Settings.Dev.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackSlotDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IPackSlotDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IProfileResetConditionGroupClient.UpdateAsync(Turn10.Settings.Dev.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IProfileResetConditionGroupClient.CreateAsync(Turn10.Settings.Dev.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IProfileResetConditionGroupClient.DeleteAsync(Turn10.Settings.Dev.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IProfileResetConditionGroupClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IProfileResetConditionGroupClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRepairKitClient.UpdateAsync(Turn10.Settings.Dev.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRepairKitClient.CreateAsync(Turn10.Settings.Dev.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRepairKitClient.DeleteAsync(Turn10.Settings.Dev.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRepairKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRepairKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRepairTokenParametersClient.UpdateAsync(Turn10.Settings.Dev.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRepairTokenParametersClient.CreateAsync(Turn10.Settings.Dev.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRepairTokenParametersClient.DeleteAsync(Turn10.Settings.Dev.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRepairTokenParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRepairTokenParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRewardClient.UpdateAsync(Turn10.Settings.Dev.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRewardClient.CreateAsync(Turn10.Settings.Dev.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRewardClient.DeleteAsync(Turn10.Settings.Dev.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRewardClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRewardClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRewardsPackageClient.UpdateAsync(Turn10.Settings.Dev.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRewardsPackageClient.CreateAsync(Turn10.Settings.Dev.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRewardsPackageClient.DeleteAsync(Turn10.Settings.Dev.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRewardsPackageClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IRewardsPackageClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IShopOfferClient.UpdateAsync(Turn10.Settings.Dev.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IShopOfferClient.CreateAsync(Turn10.Settings.Dev.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IShopOfferClient.DeleteAsync(Turn10.Settings.Dev.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IShopOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IShopOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IStarRatingParameterTableClient.UpdateAsync(Turn10.Settings.Dev.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IStarRatingParameterTableClient.CreateAsync(Turn10.Settings.Dev.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IStarRatingParameterTableClient.DeleteAsync(Turn10.Settings.Dev.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IStarRatingParameterTableClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IStarRatingParameterTableClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IStoreOfferClient.UpdateAsync(Turn10.Settings.Dev.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IStoreOfferClient.CreateAsync(Turn10.Settings.Dev.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IStoreOfferClient.DeleteAsync(Turn10.Settings.Dev.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IStoreOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IStoreOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ISupportedLocaleClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ISupportedLocaleClient.UpdateAsync(Turn10.Settings.Dev.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ISupportedLocaleClient.CreateAsync(Turn10.Settings.Dev.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ISupportedLocaleClient.DeleteAsync(Turn10.Settings.Dev.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ISupportedLocaleClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ISupportedLocaleClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITimedOfferClient.UpdateAsync(Turn10.Settings.Dev.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITimedOfferClient.CreateAsync(Turn10.Settings.Dev.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITimedOfferClient.DeleteAsync(Turn10.Settings.Dev.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITimedOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITimedOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITitleInfoClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITitleInfoClient.UpdateAsync(Turn10.Settings.Dev.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITitleInfoClient.CreateAsync(Turn10.Settings.Dev.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITitleInfoClient.DeleteAsync(Turn10.Settings.Dev.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITitleInfoClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITitleInfoClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITitleSettingsV1Client.GetHeartbeatAsync(System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.ITitleSettingsV2Client.GetHubSettingsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IUpgradeKitClient.UpdateAsync(Turn10.Settings.Dev.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IUpgradeKitClient.CreateAsync(Turn10.Settings.Dev.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IUpgradeKitClient.DeleteAsync(Turn10.Settings.Dev.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IUpgradeKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IUpgradeKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IWebSettingsClient.GetWebSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IWebSettingsClient.GetForumsSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Dev.Contracts.IWebSettingsClient.GetRewardsSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Dev.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.AssetClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.AssetClient.CreateAsync(Turn10.Settings.Prod.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.AssetClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.AssetClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.AssetClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.AvailabilityScheduleClient.UpdateAsync(Turn10.Settings.Prod.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.AvailabilityScheduleClient.CreateAsync(Turn10.Settings.Prod.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.AvailabilityScheduleClient.DeleteAsync(Turn10.Settings.Prod.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.AvailabilityScheduleClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.AvailabilityScheduleClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CarClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CarClient.CreateAsync(Turn10.Settings.Prod.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CarClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CarClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CarClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ChallengeClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ChallengeClient.CreateAsync(Turn10.Settings.Prod.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ChallengeClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ChallengeClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ChallengeClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ChallengeIssuingParametersClient.UpdateAsync(Turn10.Settings.Prod.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ChallengeIssuingParametersClient.CreateAsync(Turn10.Settings.Prod.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ChallengeIssuingParametersClient.DeleteAsync(Turn10.Settings.Prod.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ChallengeIssuingParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ChallengeIssuingParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CollectionScoreParametersClient.UpdateAsync(Turn10.Settings.Prod.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CollectionScoreParametersClient.CreateAsync(Turn10.Settings.Prod.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CollectionScoreParametersClient.DeleteAsync(Turn10.Settings.Prod.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CollectionScoreParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CollectionScoreParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CurrencyClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CurrencyClient.CreateAsync(Turn10.Settings.Prod.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CurrencyClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CurrencyClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.CurrencyClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.DefaultInventoryPackageClient.UpdateAsync(Turn10.Settings.Prod.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.DefaultInventoryPackageClient.CreateAsync(Turn10.Settings.Prod.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.DefaultInventoryPackageClient.DeleteAsync(Turn10.Settings.Prod.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.DefaultInventoryPackageClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.DefaultInventoryPackageClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.EnergyRefillClient.UpdateAsync(Turn10.Settings.Prod.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.EnergyRefillClient.CreateAsync(Turn10.Settings.Prod.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.EnergyRefillClient.DeleteAsync(Turn10.Settings.Prod.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.EnergyRefillClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.EnergyRefillClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.EventContainerClient.UpdateAsync(Turn10.Settings.Prod.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.EventContainerClient.CreateAsync(Turn10.Settings.Prod.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.EventContainerClient.DeleteAsync(Turn10.Settings.Prod.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.EventContainerClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.EventContainerClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.FTUEStateListClient.UpdateAsync(Turn10.Settings.Prod.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.FTUEStateListClient.CreateAsync(Turn10.Settings.Prod.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.FTUEStateListClient.DeleteAsync(Turn10.Settings.Prod.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.FTUEStateListClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.FTUEStateListClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsClient.GetAllAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsClient.UpdateAsync(Turn10.Settings.Prod.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsClient.CreateAsync(Turn10.Settings.Prod.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsClient.DeleteAsync(Turn10.Settings.Prod.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsParametersClient.GetAllAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsParametersClient.UpdateAsync(Turn10.Settings.Prod.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsParametersClient.CreateAsync(Turn10.Settings.Prod.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsParametersClient.DeleteAsync(Turn10.Settings.Prod.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.GameSettingsParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.HeatClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.HeatClient.CreateAsync(Turn10.Settings.Prod.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.HeatClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.HeatClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.HeatClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.HeatResetConditionClient.UpdateAsync(Turn10.Settings.Prod.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.HeatResetConditionClient.CreateAsync(Turn10.Settings.Prod.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.HeatResetConditionClient.DeleteAsync(Turn10.Settings.Prod.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.HeatResetConditionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.HeatResetConditionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ItemConversionTableClient.UpdateAsync(Turn10.Settings.Prod.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ItemConversionTableClient.CreateAsync(Turn10.Settings.Prod.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ItemConversionTableClient.DeleteAsync(Turn10.Settings.Prod.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ItemConversionTableClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ItemConversionTableClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.MasteryKitClient.UpdateAsync(Turn10.Settings.Prod.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.MasteryKitClient.CreateAsync(Turn10.Settings.Prod.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.MasteryKitClient.DeleteAsync(Turn10.Settings.Prod.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.MasteryKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.MasteryKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationSubscriptionTagClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationSubscriptionTagClient.UpdateAsync(Turn10.Settings.Prod.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationSubscriptionTagClient.CreateAsync(Turn10.Settings.Prod.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationSubscriptionTagClient.DeleteAsync(Turn10.Settings.Prod.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationSubscriptionTagClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationSubscriptionTagClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationTagMetadataClient.UpdateAsync(Turn10.Settings.Prod.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationTagMetadataClient.CreateAsync(Turn10.Settings.Prod.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationTagMetadataClient.DeleteAsync(Turn10.Settings.Prod.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationTagMetadataClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.NotificationTagMetadataClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackDefinitionClient.UpdateAsync(Turn10.Settings.Prod.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackDefinitionClient.CreateAsync(Turn10.Settings.Prod.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackDefinitionClient.DeleteAsync(Turn10.Settings.Prod.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackDropDefinitionClient.UpdateAsync(Turn10.Settings.Prod.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackDropDefinitionClient.CreateAsync(Turn10.Settings.Prod.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackDropDefinitionClient.DeleteAsync(Turn10.Settings.Prod.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackDropDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackDropDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackOfferClient.UpdateAsync(Turn10.Settings.Prod.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackOfferClient.CreateAsync(Turn10.Settings.Prod.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackOfferClient.DeleteAsync(Turn10.Settings.Prod.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackOpenCountParameterClient.UpdateAsync(Turn10.Settings.Prod.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackOpenCountParameterClient.CreateAsync(Turn10.Settings.Prod.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackOpenCountParameterClient.DeleteAsync(Turn10.Settings.Prod.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackOpenCountParameterClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackOpenCountParameterClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackSlotDefinitionClient.UpdateAsync(Turn10.Settings.Prod.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackSlotDefinitionClient.CreateAsync(Turn10.Settings.Prod.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackSlotDefinitionClient.DeleteAsync(Turn10.Settings.Prod.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackSlotDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.PackSlotDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ProfileResetConditionGroupClient.UpdateAsync(Turn10.Settings.Prod.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ProfileResetConditionGroupClient.CreateAsync(Turn10.Settings.Prod.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ProfileResetConditionGroupClient.DeleteAsync(Turn10.Settings.Prod.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ProfileResetConditionGroupClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ProfileResetConditionGroupClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RepairKitClient.UpdateAsync(Turn10.Settings.Prod.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RepairKitClient.CreateAsync(Turn10.Settings.Prod.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RepairKitClient.DeleteAsync(Turn10.Settings.Prod.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RepairKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RepairKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RepairTokenParametersClient.UpdateAsync(Turn10.Settings.Prod.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RepairTokenParametersClient.CreateAsync(Turn10.Settings.Prod.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RepairTokenParametersClient.DeleteAsync(Turn10.Settings.Prod.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RepairTokenParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RepairTokenParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RewardClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RewardClient.CreateAsync(Turn10.Settings.Prod.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RewardClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RewardClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RewardClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RewardsPackageClient.UpdateAsync(Turn10.Settings.Prod.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RewardsPackageClient.CreateAsync(Turn10.Settings.Prod.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RewardsPackageClient.DeleteAsync(Turn10.Settings.Prod.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RewardsPackageClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.RewardsPackageClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ShopOfferClient.UpdateAsync(Turn10.Settings.Prod.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ShopOfferClient.CreateAsync(Turn10.Settings.Prod.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ShopOfferClient.DeleteAsync(Turn10.Settings.Prod.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ShopOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.ShopOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.StarRatingParameterTableClient.UpdateAsync(Turn10.Settings.Prod.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.StarRatingParameterTableClient.CreateAsync(Turn10.Settings.Prod.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.StarRatingParameterTableClient.DeleteAsync(Turn10.Settings.Prod.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.StarRatingParameterTableClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.StarRatingParameterTableClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.StoreOfferClient.UpdateAsync(Turn10.Settings.Prod.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.StoreOfferClient.CreateAsync(Turn10.Settings.Prod.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.StoreOfferClient.DeleteAsync(Turn10.Settings.Prod.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.StoreOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.StoreOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.SupportedLocaleClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.SupportedLocaleClient.UpdateAsync(Turn10.Settings.Prod.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.SupportedLocaleClient.CreateAsync(Turn10.Settings.Prod.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.SupportedLocaleClient.DeleteAsync(Turn10.Settings.Prod.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.SupportedLocaleClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.SupportedLocaleClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TimedOfferClient.UpdateAsync(Turn10.Settings.Prod.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TimedOfferClient.CreateAsync(Turn10.Settings.Prod.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TimedOfferClient.DeleteAsync(Turn10.Settings.Prod.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TimedOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TimedOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TitleInfoClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TitleInfoClient.UpdateAsync(Turn10.Settings.Prod.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TitleInfoClient.CreateAsync(Turn10.Settings.Prod.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TitleInfoClient.DeleteAsync(Turn10.Settings.Prod.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TitleInfoClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TitleInfoClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TitleSettingsV1Client.GetHeartbeatAsync(System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.TitleSettingsV2Client.GetHubSettingsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.UpgradeKitClient.UpdateAsync(Turn10.Settings.Prod.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.UpgradeKitClient.CreateAsync(Turn10.Settings.Prod.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.UpgradeKitClient.DeleteAsync(Turn10.Settings.Prod.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.UpgradeKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.UpgradeKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.WebSettingsClient.GetWebSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.WebSettingsClient.GetForumsSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.WebSettingsClient.GetRewardsSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IAssetClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IAssetClient.CreateAsync(Turn10.Settings.Prod.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IAssetClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Asset,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IAssetClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IAssetClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IAvailabilityScheduleClient.UpdateAsync(Turn10.Settings.Prod.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IAvailabilityScheduleClient.CreateAsync(Turn10.Settings.Prod.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IAvailabilityScheduleClient.DeleteAsync(Turn10.Settings.Prod.Contracts.AvailabilitySchedule,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IAvailabilityScheduleClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IAvailabilityScheduleClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICarClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICarClient.CreateAsync(Turn10.Settings.Prod.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICarClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Car,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICarClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICarClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IChallengeClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IChallengeClient.CreateAsync(Turn10.Settings.Prod.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IChallengeClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Challenge,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IChallengeClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IChallengeClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IChallengeIssuingParametersClient.UpdateAsync(Turn10.Settings.Prod.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IChallengeIssuingParametersClient.CreateAsync(Turn10.Settings.Prod.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IChallengeIssuingParametersClient.DeleteAsync(Turn10.Settings.Prod.Contracts.ChallengeIssuingParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IChallengeIssuingParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IChallengeIssuingParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICollectionScoreParametersClient.UpdateAsync(Turn10.Settings.Prod.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICollectionScoreParametersClient.CreateAsync(Turn10.Settings.Prod.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICollectionScoreParametersClient.DeleteAsync(Turn10.Settings.Prod.Contracts.CollectionScoreParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICollectionScoreParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICollectionScoreParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICurrencyClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICurrencyClient.CreateAsync(Turn10.Settings.Prod.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICurrencyClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Currency,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICurrencyClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ICurrencyClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IDefaultInventoryPackageClient.UpdateAsync(Turn10.Settings.Prod.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IDefaultInventoryPackageClient.CreateAsync(Turn10.Settings.Prod.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IDefaultInventoryPackageClient.DeleteAsync(Turn10.Settings.Prod.Contracts.DefaultInventoryPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IDefaultInventoryPackageClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IDefaultInventoryPackageClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IEnergyRefillClient.UpdateAsync(Turn10.Settings.Prod.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IEnergyRefillClient.CreateAsync(Turn10.Settings.Prod.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IEnergyRefillClient.DeleteAsync(Turn10.Settings.Prod.Contracts.EnergyRefill,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IEnergyRefillClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IEnergyRefillClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IEventContainerClient.UpdateAsync(Turn10.Settings.Prod.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IEventContainerClient.CreateAsync(Turn10.Settings.Prod.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IEventContainerClient.DeleteAsync(Turn10.Settings.Prod.Contracts.EventContainer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IEventContainerClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IEventContainerClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IFTUEStateListClient.UpdateAsync(Turn10.Settings.Prod.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IFTUEStateListClient.CreateAsync(Turn10.Settings.Prod.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IFTUEStateListClient.DeleteAsync(Turn10.Settings.Prod.Contracts.FTUEStateList,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IFTUEStateListClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IFTUEStateListClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsClient.GetAllAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsClient.UpdateAsync(Turn10.Settings.Prod.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsClient.CreateAsync(Turn10.Settings.Prod.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsClient.DeleteAsync(Turn10.Settings.Prod.Contracts.GameSettings,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsParametersClient.GetAllAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsParametersClient.UpdateAsync(Turn10.Settings.Prod.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsParametersClient.CreateAsync(Turn10.Settings.Prod.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsParametersClient.DeleteAsync(Turn10.Settings.Prod.Contracts.GameSettingsParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IGameSettingsParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IHeatClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IHeatClient.CreateAsync(Turn10.Settings.Prod.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IHeatClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Heat,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IHeatClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IHeatClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IHeatResetConditionClient.UpdateAsync(Turn10.Settings.Prod.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IHeatResetConditionClient.CreateAsync(Turn10.Settings.Prod.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IHeatResetConditionClient.DeleteAsync(Turn10.Settings.Prod.Contracts.HeatResetCondition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IHeatResetConditionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IHeatResetConditionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IItemConversionTableClient.UpdateAsync(Turn10.Settings.Prod.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IItemConversionTableClient.CreateAsync(Turn10.Settings.Prod.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IItemConversionTableClient.DeleteAsync(Turn10.Settings.Prod.Contracts.ItemConversionTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IItemConversionTableClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IItemConversionTableClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IMasteryKitClient.UpdateAsync(Turn10.Settings.Prod.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IMasteryKitClient.CreateAsync(Turn10.Settings.Prod.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IMasteryKitClient.DeleteAsync(Turn10.Settings.Prod.Contracts.MasteryKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IMasteryKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IMasteryKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationSubscriptionTagClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationSubscriptionTagClient.UpdateAsync(Turn10.Settings.Prod.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationSubscriptionTagClient.CreateAsync(Turn10.Settings.Prod.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationSubscriptionTagClient.DeleteAsync(Turn10.Settings.Prod.Contracts.EditableNotificationSubscriptionTag,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationSubscriptionTagClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationSubscriptionTagClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationTagMetadataClient.UpdateAsync(Turn10.Settings.Prod.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationTagMetadataClient.CreateAsync(Turn10.Settings.Prod.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationTagMetadataClient.DeleteAsync(Turn10.Settings.Prod.Contracts.NotificationTagMetadata,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationTagMetadataClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.INotificationTagMetadataClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackDefinitionClient.UpdateAsync(Turn10.Settings.Prod.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackDefinitionClient.CreateAsync(Turn10.Settings.Prod.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackDefinitionClient.DeleteAsync(Turn10.Settings.Prod.Contracts.PackDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackDropDefinitionClient.UpdateAsync(Turn10.Settings.Prod.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackDropDefinitionClient.CreateAsync(Turn10.Settings.Prod.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackDropDefinitionClient.DeleteAsync(Turn10.Settings.Prod.Contracts.PackDropDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackDropDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackDropDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackOfferClient.UpdateAsync(Turn10.Settings.Prod.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackOfferClient.CreateAsync(Turn10.Settings.Prod.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackOfferClient.DeleteAsync(Turn10.Settings.Prod.Contracts.PackOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackOpenCountParameterClient.UpdateAsync(Turn10.Settings.Prod.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackOpenCountParameterClient.CreateAsync(Turn10.Settings.Prod.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackOpenCountParameterClient.DeleteAsync(Turn10.Settings.Prod.Contracts.PackOpenCountParameter,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackOpenCountParameterClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackOpenCountParameterClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackSlotDefinitionClient.UpdateAsync(Turn10.Settings.Prod.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackSlotDefinitionClient.CreateAsync(Turn10.Settings.Prod.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackSlotDefinitionClient.DeleteAsync(Turn10.Settings.Prod.Contracts.PackSlotDefinition,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackSlotDefinitionClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IPackSlotDefinitionClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IProfileResetConditionGroupClient.UpdateAsync(Turn10.Settings.Prod.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IProfileResetConditionGroupClient.CreateAsync(Turn10.Settings.Prod.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IProfileResetConditionGroupClient.DeleteAsync(Turn10.Settings.Prod.Contracts.ProfileResetConditionGroup,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IProfileResetConditionGroupClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IProfileResetConditionGroupClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRepairKitClient.UpdateAsync(Turn10.Settings.Prod.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRepairKitClient.CreateAsync(Turn10.Settings.Prod.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRepairKitClient.DeleteAsync(Turn10.Settings.Prod.Contracts.RepairKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRepairKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRepairKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRepairTokenParametersClient.UpdateAsync(Turn10.Settings.Prod.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRepairTokenParametersClient.CreateAsync(Turn10.Settings.Prod.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRepairTokenParametersClient.DeleteAsync(Turn10.Settings.Prod.Contracts.RepairTokenParameters,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRepairTokenParametersClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRepairTokenParametersClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRewardClient.UpdateAsync(Turn10.Settings.Prod.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRewardClient.CreateAsync(Turn10.Settings.Prod.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRewardClient.DeleteAsync(Turn10.Settings.Prod.Contracts.Reward,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRewardClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRewardClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRewardsPackageClient.UpdateAsync(Turn10.Settings.Prod.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRewardsPackageClient.CreateAsync(Turn10.Settings.Prod.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRewardsPackageClient.DeleteAsync(Turn10.Settings.Prod.Contracts.RewardsPackage,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRewardsPackageClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IRewardsPackageClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IShopOfferClient.UpdateAsync(Turn10.Settings.Prod.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IShopOfferClient.CreateAsync(Turn10.Settings.Prod.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IShopOfferClient.DeleteAsync(Turn10.Settings.Prod.Contracts.ShopOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IShopOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IShopOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IStarRatingParameterTableClient.UpdateAsync(Turn10.Settings.Prod.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IStarRatingParameterTableClient.CreateAsync(Turn10.Settings.Prod.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IStarRatingParameterTableClient.DeleteAsync(Turn10.Settings.Prod.Contracts.StarRatingParameterTable,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IStarRatingParameterTableClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IStarRatingParameterTableClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IStoreOfferClient.UpdateAsync(Turn10.Settings.Prod.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IStoreOfferClient.CreateAsync(Turn10.Settings.Prod.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IStoreOfferClient.DeleteAsync(Turn10.Settings.Prod.Contracts.StoreOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IStoreOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IStoreOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ISupportedLocaleClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ISupportedLocaleClient.UpdateAsync(Turn10.Settings.Prod.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ISupportedLocaleClient.CreateAsync(Turn10.Settings.Prod.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ISupportedLocaleClient.DeleteAsync(Turn10.Settings.Prod.Contracts.EditableSupportedLocale,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ISupportedLocaleClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ISupportedLocaleClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITimedOfferClient.UpdateAsync(Turn10.Settings.Prod.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITimedOfferClient.CreateAsync(Turn10.Settings.Prod.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITimedOfferClient.DeleteAsync(Turn10.Settings.Prod.Contracts.TimedOffer,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITimedOfferClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITimedOfferClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITitleInfoClient.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITitleInfoClient.UpdateAsync(Turn10.Settings.Prod.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITitleInfoClient.CreateAsync(Turn10.Settings.Prod.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITitleInfoClient.DeleteAsync(Turn10.Settings.Prod.Contracts.EditableTitleInfo,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITitleInfoClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITitleInfoClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITitleSettingsV1Client.GetHeartbeatAsync(System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.ITitleSettingsV2Client.GetHubSettingsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IUpgradeKitClient.UpdateAsync(Turn10.Settings.Prod.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IUpgradeKitClient.CreateAsync(Turn10.Settings.Prod.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IUpgradeKitClient.DeleteAsync(Turn10.Settings.Prod.Contracts.UpgradeKit,System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IUpgradeKitClient.GetAsync(System.Guid,System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IUpgradeKitClient.GetListAsync(System.Collections.Generic.IEnumerable{System.Guid},System.Threading.CancellationToken)">
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IWebSettingsClient.GetWebSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IWebSettingsClient.GetForumsSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Turn10.Settings.Prod.Contracts.IWebSettingsClient.GetRewardsSettingsAsync(System.String,System.Threading.CancellationToken)">
            <param name="authorization">access token</param>
            <returns>OK</returns>
            <exception cref="T:Turn10.Settings.Prod.Contracts.SwaggerException">A server side error occurred.</exception>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        </member>
    </members>
</doc>
